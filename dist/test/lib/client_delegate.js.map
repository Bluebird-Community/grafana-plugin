{"version":3,"sources":["../../../src/lib/client_delegate.js"],"names":["Q","ClientDelegate","settings","backendSrv","$q","type","url","name","searchLimit","jsonData","timeout","parseInt","authConfig","undefined","basicAuth","token","split","decodedToken","atob","username","password","substring","length","OnmsAuthConfig","server","OnmsServer","http","GrafanaHTTP","client","clientWithMetadata","err","ret","data","statusText","cancelled","message","status","reject","self","getMetadata","then","metadata","apiVersion","Error","catch","e","deferred","defer","success","resolve","error","promise","getClientWithMetadata","alarms","filter","getAlarmDao","alarmDao","find","decorateError","alarmId","get","user","escalate","clear","unacknowledge","acknowledge","action","supportedActions","indexOf","datasourceRequest","method","sticky","saveStickyMemo","deleteStickyMemo","journal","saveJournalMemo","deleteJournalMemo","operators","map","Operators","operator","id","label","when","searchProperties","propertyId","getProperties","properties","property","findProperty","comparators","getComparators","console","log","Comparators","EQ","c","situationfeedback","situationId","getSituationfeedbackDao","feedbackDao","getFeedback","feedback","saveFeedback","flows","N","start","end","step","includeOther","nodeCriteria","interfaceId","getFlowDao","flowDao","getSeriesForTopNApplications","getSeriesForTopNConversations","getSummaryForTopNApplications","getSummaryForTopNConversations","getExporters","getExporter"],"mappings":"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","file":"client_delegate.js","sourcesContent":["import {API, Client, Rest, DAO} from '../opennms';\nimport _ from 'lodash';\n\nlet Q;\n\nexport class ClientDelegate {\n\n    constructor(settings, backendSrv, $q) {\n        this.type = settings.type;\n        this.url = settings.url;\n        this.name = settings.name;\n        this.backendSrv = backendSrv;\n        this.searchLimit = 1000;\n        this.$q = $q;\n        if (!Q) {\n            Q = $q;\n        }\n\n        if (settings.jsonData && settings.jsonData.timeout) {\n            this.timeout = parseInt(settings.jsonData.timeout,10) * 1000;\n        }\n\n        let authConfig = undefined;\n        if (settings.basicAuth) {\n          // If basic auth is configured, pass the username and password to the client\n          // This allows the datasource to work in direct mode\n          // We need the raw username and password, so we decode the token\n          const token = settings.basicAuth.split(' ')[1];\n          const decodedToken = atob(token);\n          const username = decodedToken.split(':')[0];\n          const password = decodedToken.substring(username.length+1, decodedToken.length);\n          authConfig = new API.OnmsAuthConfig(username, password);\n        }\n\n        let server = new API.OnmsServer(this.name, this.url, authConfig);\n        let http = new Rest.GrafanaHTTP(this.backendSrv, server, this.timeout);\n        this.client = new Client(http);\n        this.client.server = server;\n        this.clientWithMetadata = undefined;\n     }\n\n    decorateError(err) {\n        let ret = err;\n        if (err.err) {\n            ret = err.err;\n        }\n        if (err.data && err.data.err) {\n            ret = err.data.err;\n        }\n        let statusText = 'Request failed.';\n\n        // cancelled property causes the UI to never complete on failure\n        if (err.cancelled) {\n            statusText = 'Request timed out.';\n            delete err.cancelled;\n        }\n        if (err.data && err.data.cancelled) {\n            statusText = 'Request timed out.';\n            delete err.data.cancelled;\n        }\n\n        if (!ret.message) {\n            ret.message = ret.statusText || statusText;\n        }\n        if (!ret.status) {\n            ret.status = 'error';\n        }\n        return Q.reject(ret);\n    };\n\n    getClientWithMetadata() {\n        if (!this.clientWithMetadata) {\n              let self = this;\n              let client = Client.getMetadata(self.client.server, self.client.http, self.timeout)\n                .then(function(metadata) {\n                    // Ensure the OpenNMS we are talking to is compatible\n                    if (metadata.apiVersion() !== 2) {\n                        throw new Error(\"Unsupported Version\");\n                    }\n                    self.client.server.metadata = metadata;\n                    return self.client;\n                }).catch(function(e) {\n                    // in case of error, reset the client, otherwise\n                    // the datasource may never recover\n                    self.clientWithMetadata = void 0;\n                    throw e;\n                });\n\n          // Grafana functions that invoke the datasource expect the\n          // promise to be one that is returned by $q.\n          let deferred = this.$q.defer();\n          client.then((success) => deferred.resolve(success)).catch((error) => deferred.reject(error));\n          this.clientWithMetadata = deferred.promise;\n        }\n        return this.clientWithMetadata;\n    }\n\n    // Fault related functions\n\n    getAlarmDao() {\n        return this.getClientWithMetadata().then(function(client) {\n            return client.alarms();\n        });\n    }\n\n    findAlarms(filter) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                return alarmDao.find(filter);\n            }).catch(this.decorateError);\n    }\n\n    getAlarm(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n            return alarmDao.get(alarmId);\n        }).catch(this.decorateError);\n    }\n\n    doEscalate(alarmId, user) {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.escalate(alarmId, user)\n            }).catch(this.decorateError);\n    }\n\n    doClear(alarmId, user) {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.clear(alarmId, user);\n            }).catch(this.decorateError);\n    }\n\n    doUnack(alarmId, user) {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.unacknowledge(alarmId, user);\n            }).catch(this.decorateError);\n    }\n\n    doAck(alarmId, user) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                return alarmDao.acknowledge(alarmId, user);\n            }).catch(this.decorateError);\n    }\n\n    doTicketAction(alarmId, action) {\n        const supportedActions = [\"create\", \"update\", \"close\"];\n        if (supportedActions.indexOf(action) < 0) {\n            throw {message: \"Action '\" + action + \"' not supported.\"};\n        }\n        const self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/alarms/' + alarmId + \"/ticket/\" + action,\n            method: 'POST',\n        }).catch(this.decorateError);\n    }\n\n    saveSticky(alarmId, sticky, user) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.saveStickyMemo(alarmId, sticky, user);\n        }).catch(this.decorateError);\n    }\n\n    deleteSticky(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.deleteStickyMemo(alarmId);\n        }).catch(this.decorateError);\n    }\n\n    saveJournal(alarmId, journal, user) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.saveJournalMemo(alarmId, journal, user);\n        }).catch(this.decorateError);\n    }\n\n    deleteJournal(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.deleteJournalMemo(alarmId);\n        }).catch(this.decorateError);\n    }\n\n    findOperators() {\n        const operators = _.map(API.Operators, function(operator) {\n            return {\n                id: operator.id,\n                label: operator.label\n            }\n        });\n        return this.$q.when(operators);\n    }\n\n    getProperties() {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.searchProperties();\n            }).catch(this.decorateError);\n    }\n\n    findProperty(propertyId) {\n        return this.getProperties()\n            .then(properties => {\n                return _.find(properties, function(property) {\n                    return property.id === propertyId;\n                });\n            });\n    }\n\n    getPropertyComparators(propertyId) {\n        return this.findProperty(propertyId)\n            .then(property => {\n                if (property) {\n                    const comparators = property.type.getComparators();\n                    if (comparators && comparators.length > 0) {\n                        return comparators;\n                    }\n                }\n                console.log(\"No comparators found for property with id '\" + propertyId + \"'. Falling back to EQ.\");\n                // This may be the case when the user entered a property, which does not exist\n                // therefore fallback to EQ\n                return [ API.Comparators.EQ ];\n            }).catch(this.decorateError);\n    }\n\n\n    // Situation Feedback functions\n\n    getSituationfeedbackDao() {\n        return this.getClientWithMetadata().then(function (c) {\n            return c.situationfeedback();\n        }).catch(this.decorateError);\n    }\n\n    getSituationfeedback(situationId) {\n        return this.getSituationfeedbackDao()\n        .then(function(feedbackDao) {\n            return feedbackDao.getFeedback(situationId);\n        }).catch(this.decorateError);\n    }\n\n    submitSituationFeedback(situationId, feedback) {\n        return this.getSituationfeedbackDao()\n        .then(function(feedbackDao) {\n          return feedbackDao.saveFeedback(feedback, situationId);\n        }).catch(this.decorateError);\n    }\n\n    // Flow related functions\n\n    getFlowDao() {\n        return this.getClientWithMetadata().then(function(c) {\n            return c.flows();\n        }).catch(this.decorateError);\n    }\n\n    getSeriesForTopNApplications(N, start, end, step, includeOther, nodeCriteria, interfaceId) {\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getSeriesForTopNApplications(N, start, end, step, includeOther, nodeCriteria, interfaceId);\n            }).catch(this.decorateError);\n    }\n\n    getSeriesForTopNConversations(N, start, end, step, nodeCriteria, interfaceId) {\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getSeriesForTopNConversations(N, start, end, step, nodeCriteria, interfaceId);\n            }).catch(this.decorateError);\n    }\n\n    getSummaryForTopNApplications(N, start, end, includeOther, nodeCriteria, interfaceId) {\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getSummaryForTopNApplications(N, start, end, includeOther, nodeCriteria, interfaceId);\n            }).catch(this.decorateError);\n    }\n\n    getSummaryForTopNConversations(N, start, end, nodeCriteria, interfaceId) {\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getSummaryForTopNConversations(N, start, end, nodeCriteria, interfaceId);\n            }).catch(this.decorateError);\n    }\n\n    getExporters() {\n        let searchLimit = this.searchLimit;\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getExporters(searchLimit);\n            }).catch(this.decorateError);\n    }\n\n    getExporter(nodeCriteria) {\n        let searchLimit = this.searchLimit;\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getExporter(nodeCriteria, searchLimit);\n            }).catch(this.decorateError);\n    }\n}"]}