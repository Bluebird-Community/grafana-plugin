{"version":3,"sources":["../../../src/lib/custom_action.js"],"names":["getMatch","replace","failed","Symbol","escapeRE","makeVariableRE","variableName","reString","RegExp","value","isNull","isEmpty","match","exec","parsed","parseInt","ret","token","variable","Number","isInteger","index","undefined","length","getValue","v","urlValue","toString","label","getValueForMatch","key","model","indexed","Array","isArray","name","type","valueString","parm","filter","p","console","warn","text","escaped","CustomAction","data","url","Error","Object","freeze","interpolated","keys","encodeURIComponent","passed","interpolate","log","window","open"],"mappings":"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","file":"custom_action.js","sourcesContent":["import _ from 'lodash';\n\nconst failed = Symbol('failed');\nconst escapeRE = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g; // eslint-disable-line no-useless-escape\n\nfunction makeVariableRE(variableName) {\n  const reString = '\\\\$(' + variableName.replace(escapeRE, '\\\\$&') + ')\\\\b(\\\\[(.*?)\\\\])?';\n  return new RegExp(reString, 'g');\n}\n\nexport function getMatch(value, variableName) {\n  if (_.isNull(value) || _.isEmpty(value)) {\n    return false;\n  }\n\n  const match = makeVariableRE(variableName).exec(value);\n  if (match) {\n    const parsed = parseInt(match[3], 10);\n    const ret = {\n      token: match[0],\n      variable: match[1]\n    };\n    if (Number.isInteger(parsed)) {\n      ret.index = parsed;\n      return ret;\n    } else if (match[3] !== undefined && match[3].length > 0) {\n      ret.index = match[3];\n      return ret;\n    } else if (match[3] === undefined || match[3] === '') {\n      return ret;\n    }\n  }\n  return null;\n}\n\nfunction getValue(v) {\n  let ret = failed;\n  if (v) {\n    ret = v;\n    if (v.urlValue) {\n      // implements IHasUrlValue in OpenNMS.js\n      ret = v.urlValue;\n    } else {\n      // fallback, try to guess at the proper string type\n      if (v.toString) {\n        ret = v.toString();\n      }\n      if (v.label) {\n        ret = v.label;\n      }\n    }\n  }\n  return ret;\n}\n\nfunction getValueForMatch(match, key, model) {\n  let ret = undefined;\n  if (match) {\n    if (match.index) {\n      const v = model[key];\n      if (v) {\n        let indexed = v[match.index];\n        if (Array.isArray(v)\n          && v.length > 0\n          && v[0]\n          && v[0].name && v[0].type && v[0].valueString // can't do TypeScript instanceOf() at runtime\n          && typeof match.index === 'string') {\n          // special case, handle named event parameters\n          const parm = v.filter((p) => {\n            return p.name === match.index;\n          })[0];\n          ret = getValue(parm);\n        } else {\n          ret = getValue(indexed);\n        }\n      } else {\n        console.warn('Indexed match ($' + key + '[' + match.index + ']) does not exist.');\n        ret = failed;\n      }\n    } else {\n      ret = getValue(model[key]);\n    }\n  }\n  return ret;\n}\n\nexport function replace(text, match, value) {\n  const escaped = new RegExp(match.replace(escapeRE, '\\\\$&'), 'g');\n  return text.replace(escaped, value);\n}\n\nexport class CustomAction {\n  constructor(data, url) {\n    if (url) {\n      this.label = data;\n      this.url = url;\n    } else {\n      this.url = data.url;\n      this.label = data.label;\n    }\n    if (!this.label || !this.url) {\n      throw new Error('label and url are required!');\n    }\n    Object.freeze(this);\n  }\n\n  interpolate(model) {\n    let interpolated = this.url;\n    if (model) {\n      for (const key of Object.keys(model)) {\n        const match = getMatch(interpolated, key);\n        if (match) {\n          let value = getValueForMatch(match, key, model);\n          if (value === failed) {\n            value = '';\n          }\n\n          value = encodeURIComponent(value);\n          interpolated = replace(interpolated, match.token, value);\n        }\n      }\n    }\n    return interpolated;\n  }\n\n  validate(model) {\n    const interpolated = this.url;\n    let passed = true;\n    if (model) {\n      for (const key of Object.keys(model)) {\n        const match = getMatch(interpolated, key);\n        const value = getValueForMatch(match, key, model);\n        if (value === failed) {\n          passed = false;\n        }\n      }\n    }\n    return passed;\n  }\n\n  open(model) {\n    const interpolated = this.interpolate(model);\n    console.log('opening: ' + interpolated);\n    window.open(interpolated, '_blank');\n  }\n}"]}