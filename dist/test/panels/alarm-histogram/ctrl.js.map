{"version":3,"sources":["../../../../src/panels/alarm-histogram/ctrl.js"],"names":["AlarmHistogramCtrl","$scope","$injector","scope","defaults","panel","groupProperty","direction","events","on","onInitEditMode","bind","onDataReceived","onDataError","onRender","elem","attrs","ctrl","find","addEditorTab","data","counts","countBy","query","isNil","series","name","count","defaultTo","color","$root","colors","render","width","height","row","isString","parseInt","replace","title","css","$","plot","map","serie","bars","show","barWidth","align","fill","lineWidth","horizontal","yaxis","mode","tickLength","autoscaleMargin","grid","borderWidth","xaxis","column","result","i","length","columnIndex","findIndex","columns","text","j","rows","push","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from \"app/plugins/sdk\";\nimport _ from \"lodash\";\nimport \"jquery.flot\";\nimport \"jquery.flot.selection\";\nimport \"jquery.flot.crosshair\";\nimport \"../../jquery.flot.categories\";\n\n\nclass AlarmHistogramCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector) {\n        super($scope, $injector);\n\n        this.scope = $scope;\n\n        _.defaults(this.panel, {\n            groupProperty: 'acknowledged',\n            direction: 'horizontal',\n        });\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('render', this.onRender.bind(this));\n    }\n\n    link($scope, elem, attrs, ctrl) {\n        this.elem = elem.find('.histogram-chart');\n        this.ctrl = ctrl;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Grouping', 'public/plugins/opennms-helm-app/panels/alarm-histogram/editor.html', 2);\n    }\n\n    onDataReceived(data) {\n        switch (this.panel.groupProperty) {\n            case 'acknowledged': {\n                const counts = _.countBy(this.query(data, 'Acked By'), _.isNil);\n                this.series = [\n                    {\n                        name: 'Outstanding',\n                        count: _.defaultTo(counts[true], 0),\n                        color: this.scope.$root.colors[0],\n                    },\n                    {\n                        name: 'Acknowledged',\n                        count: _.defaultTo(counts[false], 0),\n                        color: this.scope.$root.colors[4],\n                    },\n                ];\n                break;\n            }\n\n            case 'severity': {\n                const counts = _.countBy(this.query(data, 'Severity'));\n                this.series = [\n                    {\n                        name: 'Cleared',\n                        count: _.defaultTo(counts['CLEARED'], 0),\n                        color: '#EEE000',\n                    },\n                    {\n                        name: 'Normal',\n                        count: _.defaultTo(counts['NORMAL'], 0),\n                        color: '#86B15B',\n                    },\n                    {\n                        name: 'Indeterm.',\n                        count: _.defaultTo(counts['INDETERMINATE'], 0),\n                        color: '#990000',\n                    },\n                    {\n                        name: 'Warning',\n                        count: _.defaultTo(counts['WARNING'], 0),\n                        color: '#FCCC3B',\n                    },\n                    {\n                        name: 'Minor',\n                        count: _.defaultTo(counts['MINOR'], 0),\n                        color: '#EE901C',\n                    },\n                    {\n                        name: 'Major',\n                        count: _.defaultTo(counts['MAJOR'], 0),\n                        color: '#E3692F',\n                    },\n                    {\n                        name: 'Critical',\n                        count: _.defaultTo(counts['CRITICAL'], 0),\n                        color: '#DB4345',\n                    },\n\n                ];\n                break;\n            }\n        }\n\n        this.render();\n    }\n\n    onDataError() {\n        this.series = [];\n        this.render();\n    }\n\n    onRender() {\n        // Size handling\n        if (this.elem.width() === 0) {\n            return true;\n        }\n\n        let height = this.ctrl.height || this.ctrl.panel.height || this.ctrl.row.height;\n        if (_.isString(height)) {\n            height = parseInt(height.replace('px', ''), 10);\n        }\n        height -= 5; // padding\n        height -= this.ctrl.panel.title ? 24 : 9; // subtract panel title bar\n\n        this.elem.css('height', height + 'px');\n\n        // Draw graph\n        switch (this.panel.direction) {\n            case 'horizontal':\n                $.plot(this.elem,\n                    _.map(this.series, function (serie) {\n                        return {\n                            data: [[serie.count, serie.name]],\n                            color: serie.color,\n                        };\n                    }),\n                    {\n                        series: {\n                            bars: {\n                                show: true,\n                                barWidth: 0.6,\n                                align: \"center\",\n                                fill: 0.8,\n                                lineWidth: 1.0,\n                                horizontal: true,\n                            }\n                        },\n                        yaxis: {\n                            mode: \"categories\",\n                            tickLength: 0,\n                            autoscaleMargin: .02,\n                        },\n                        grid: {\n                            borderWidth: 0,\n                        },\n                    });\n                break;\n\n            case 'vertical':\n                $.plot(this.elem,\n                    _.map(this.series, function (serie) {\n                        return {\n                            data: [[serie.name, serie.count]],\n                            color: serie.color,\n                        };\n                    }),\n                    {\n                        series: {\n                            bars: {\n                                show: true,\n                                barWidth: 0.5,\n                                align: \"center\",\n                                fill: 0.8,\n                                lineWidth: 1.0,\n                                horizontal: false,\n                            }\n                        },\n                        xaxis: {\n                            mode: \"categories\",\n                            tickLength: 0,\n                            autoscaleMargin: .02,\n                        },\n                        grid: {\n                            borderWidth: 0,\n                        },\n                    });\n                break;\n        }\n    }\n\n    query(data, column) {\n        // TODO: Make this a generator to save memory\n        let result = [];\n\n        for (let i = 0; i < data.length; i++) {\n            let columnIndex = _.findIndex(data[i].columns, {text: column});\n            for (let j = 0; j < data[i].rows.length; j++) {\n                result.push(data[i].rows[j][columnIndex]);\n            }\n        }\n\n        return result;\n    }\n}\n\nAlarmHistogramCtrl.templateUrl = 'panels/alarm-histogram/module.html';\n\nexport {\n    AlarmHistogramCtrl\n};\n"]}