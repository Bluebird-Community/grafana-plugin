{"version":3,"sources":["../../../../src/panels/alarm-table/module.js"],"names":["dark","light","AlarmTableCtrl","$scope","$injector","$rootScope","annotationsSrv","$sanitize","$compile","backendSrv","datasourceSrv","timeSrv","panelDefaults","targets","transform","pageSize","showHeader","styles","type","pattern","displayAs","dateFormat","sanitize","unit","decimals","alias","colors","colorMode","thresholds","columns","text","scroll","fontSize","sort","col","desc","severity","pageIndex","panel","fields","defaults","self","selectionMgr","from","to","getRowsInRange","render","events","on","onDataReceived","bind","onDataError","onInitEditMode","severityIcons","undefined","unshift","hidden","title","style","table","rows","map","row","refreshAppConfig","get","then","result","jsonData","appConfig","console","warn","addEditorTab","datasource","setTimeQueryStart","getAnnotations","dashboard","range","data","annotations","err","dataRaw","dataList","length","renderer","isTimezoneUtc","colIndex","scope","elem","attrs","ctrl","pageCount","formaters","getTableHeight","panelHeight","height","appendTableRows","tbodyElem","setTable","empty","html","contents","switchPage","e","el","currentTarget","parseInt","renderPanel","appendPaginationControls","footerElem","Math","ceil","startPage","max","endPage","min","paginationList","i","activeClass","pageLinkElem","append","panelElem","parents","rootElem","find","css","addClass","unbindDestroy","$on","off","renderData","renderingCompleted","source","alarmId","matchedRow","each","filteredRow","meta","alarm","id","$event","isRowSelected","onRowClick","selectedRows","getSelectedRows","tableRow","findTableRow","Object","assign","ticketerConfig","filter","getContextMenu","exclusiveModifier","ctrlKey","rangeModifier","shiftKey","handleRowClick","alarmDetails","appEvent","newScope","$new","templateHtml","action","ds","indexOf","message","name","error","refreshDashboard","catch","performAlarmActionOnDatasource","findIdx","findIndex","selectionToMatch","startIdx","endIdx","push","templateUrl","PanelCtrl","directive","$window","link","element","innerHeight"],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport {transformDataToTable} from './transformers';\nimport {tablePanelEditor} from './editor';\nimport {columnOptionsTab} from './column_options';\nimport {TableRenderer} from './renderer';\nimport coreModule from 'app/core/core_module';\nimport {alarmDetailsAsDirective} from './alarm_details';\nimport {memoEditorAsDirective} from \"./memo_editor\"\nimport {contextMenuAsDirective} from \"./context_menu\";\nimport {loadPluginCss} from 'app/plugins/sdk';\nimport {SelectionMgr} from \"./selection_mgr\";\nimport {ActionMgr} from \"./action_mgr\";\n\nloadPluginCss({\n  dark: 'plugins/opennms-helm-app/panels/alarm-table/css/table.dark.css',\n  light: 'plugins/opennms-helm-app/panels/alarm-table/css/table.light.css'\n});\n\nclass AlarmTableCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope, annotationsSrv, $sanitize, $compile, backendSrv, datasourceSrv, timeSrv) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.annotationsSrv = annotationsSrv;\n    this.$sanitize = $sanitize;\n    this.$compile = $compile;\n    this.backendSrv = backendSrv;\n    this.datasourceSrv = datasourceSrv;\n    this.timeSrv = timeSrv;\n\n    let panelDefaults = {\n      targets: [{}],\n      transform: 'table',\n      pageSize: 5,\n      showHeader: true,\n      styles: [\n        {\n          type: 'severity',\n          pattern: 'Severity',\n          displayAs: 'icon',\n        },\n        {\n          type: 'date',\n          pattern: '/.*Time/', // Render all \"* Time\" columns as date, e.g. \"Last Event Time\", \"First Event Time\", etc.\n          dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        },\n        {\n          type: 'date',\n          pattern: 'Suppressed Until',\n          dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        },\n        {\n          type: 'string',\n          pattern: '/.*ID/', // Render all \"* ID\" columns as string, otherwise ID 1000 appears as 1.0 K\n        },\n        {\n          type: 'string',\n          pattern: 'Description',\n          sanitize: true\n        },\n        {\n          unit: 'short',\n          type: 'number',\n          decimals: 0,\n          pattern: 'Count',\n        },\n        {\n          unit: 'short',\n          type: 'number',\n          alias: '',\n          decimals: 2,\n          colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n          colorMode: null,\n          pattern: '/.*/',\n          thresholds: [],\n        }\n      ],\n      columns: [\n          {text: 'Severity'},\n          {text: 'UEI'},\n          {text: 'Log Message'},\n          {text: 'Node Label'},\n          {text: 'Count'},\n          {text: 'Last Event Time'},\n        ],\n      scroll: false, // disable scrolling as the actions popup is not working properly otherwise\n      fontSize: '100%',\n      sort: {col: 0, desc: true},\n      severity: true\n    };\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, panelDefaults);\n\n    let self = this;\n    this.selectionMgr = new SelectionMgr((from,to) => self.getRowsInRange(from,to), () => self.render());\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    if (this.panel.severity === true) {\n      this.panel.severity = 'row';\n    }\n\n    if (this.panel.severityIcons === true) {\n      delete this.panel.severityIcons;\n      if (this.panel.sort && this.panel.sort.col !== undefined) {\n        this.panel.sort.col++;\n      }\n      this.panel.styles.unshift({\n        type: 'severity',\n        pattern: 'Severity',\n        displayAs: 'icon'\n      });\n      this.panel.columns.unshift({\n        hidden: false,\n        text: 'Severity',\n        title: 'Severity',\n        style: {\n          type: 'severity',\n          pattern: 'Severity',\n          displayAs: 'icon'\n        }\n      });\n      if (this.table && this.table.rows) {\n        // put a placeholder value in until data refreshes\n        this.table.rows = this.table.rows.map((row) => {\n          row.unshift(undefined);\n        });\n      }\n    }\n\n    self.refreshAppConfig();\n  }\n\n  refreshAppConfig() {\n    const self = this;\n    self.backendSrv.get(`/api/plugins/opennms-helm-app/settings`).then(result => {\n      if (result && result.jsonData) {\n        self.appConfig = result.jsonData;\n      } else {\n        console.warn('No settings found.');\n      }\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv.getAnnotations({dashboard: this.dashboard, panel: this.panel, range: this.range})\n        .then(annotations => {\n          return {data: annotations};\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n\n    this.renderer = new TableRenderer(this.panel, this.table, this.dashboard.isTimezoneUtc(), this.$sanitize, this.selectionMgr);\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col, colIndex) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let data;\n    let panel = ctrl.panel;\n    let pageCount = 0;\n    let formaters = [];\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return (panelHeight - 31) + 'px';\n    }\n\n    function appendTableRows(tbodyElem) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n      // Compile the HTML generated by the renderer - this is required the row related callbacks (click, dblclick, etc...)\n      ctrl.$compile(tbodyElem.contents())(scope);\n    }\n\n    function switchPage(e) {\n      let el = $(e.currentTarget);\n      ctrl.pageIndex = (parseInt(el.text(), 10) - 1);\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      let pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      let startPage = Math.max(ctrl.pageIndex - 3, 0);\n      let endPage = Math.min(pageCount, startPage + 9);\n\n      let paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        let activeClass = i === ctrl.pageIndex ? 'active' : '';\n        let pageLinkElem = $('<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>');\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      let panelElem = elem.parents('.panel');\n      let rootElem = elem.find('.table-panel-scroll');\n      let tbodyElem = elem.find('tbody');\n      let footerElem = elem.find('.table-panel-footer');\n\n      elem.css({'font-size': panel.fontSize});\n      panelElem.addClass('table-panel-wrapper');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({'max-height': panel.scroll ? getTableHeight() : ''});\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n\n    let unbindDestroy = scope.$on('$destroy', function () {\n      elem.off('click', '.table-panel-page-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', function (renderData) {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n\n  // Alarm related actions\n\n  findTableRow(source, alarmId) {\n    let matchedRow;\n    _.each(this.dataRaw, table => {\n      let filteredRow = _.find(table.rows, row => {\n        return row.meta.source === source && row.meta.alarm.id === alarmId;\n      });\n      if (filteredRow !== undefined) {\n        matchedRow = filteredRow;\n      }\n    });\n    return matchedRow;\n  }\n\n  getContextMenu($event, source, alarmId) {\n    // Treat the right click as a left click on the row, if the row is not part of the current selection\n    if (!this.selectionMgr.isRowSelected({\n        source: source,\n        alarmId: alarmId\n      })) {\n      this.onRowClick($event, source, alarmId);\n    }\n\n    // Grab the current selection\n    let selectedRows = this.selectionMgr.getSelectedRows();\n\n    // Load up the actual alarms in the rows\n    let self = this;\n    selectedRows = _.map(selectedRows, row => {\n      // Create new objects instead of modifying the existing rows\n      // returned by SelectionMgr#getSelectedRows()\n      const tableRow = self.findTableRow(row.source, row.alarmId);\n      return Object.assign({}, row, {\n        alarm: tableRow ? tableRow.meta.alarm : undefined,\n        ticketerConfig: tableRow ? tableRow.meta.ticketerConfig : undefined\n      });\n    });\n\n    // Filter out any rows for which we couldn't find the alarm\n    selectedRows = _.filter(selectedRows, row => row.alarm !== void 0);\n\n    // Generate selection-based context menu\n    return new ActionMgr(this, selectedRows, this.appConfig).getContextMenu();\n  }\n\n  onRowClick($event, source, alarmId) {\n    let exclusiveModifier = $event.ctrlKey;\n    let rangeModifier = $event.shiftKey;\n    this.selectionMgr.handleRowClick({source: source, alarmId: alarmId}, exclusiveModifier, rangeModifier);\n  }\n\n  onRowDoubleClick($event, source, alarmId) {\n    // Show the alarm details pane\n    this.alarmDetails(source, alarmId);\n  }\n\n  alarmDetails(source, alarmId) {\n    const row = this.findTableRow(source, alarmId);\n    if (row === undefined) {\n      this.$rootScope.appEvent('alert-error', ['Unable to find matching alarm', '']);\n      return;\n    }\n\n    let newScope = this.$rootScope.$new();\n    newScope.source = source;\n    newScope.alarm = row.meta.alarm;\n    newScope.ticketerConfig = row.meta.ticketerConfig;\n\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<alarm-details-as-modal dismiss=\"dismiss()\"></alarm-details-as-modal>',\n      scope: newScope\n    });\n  }\n\n  performAlarmActionOnDatasource(source, action, alarmId) {\n    let self = this;\n    this.datasourceSrv.get(source).then(ds => {\n      if (ds.type && ds.type.indexOf(\"fault-datasource\") < 0) {\n        throw {message: 'Only OpenNMS datasources are supported'};\n      } else {\n        if (!ds[action]) {\n          throw {message: 'Action ' + action + ' not implemented by datasource ' + ds.name + \" of type \" + ds.type};\n        }\n        return ds[action](alarmId);\n      }\n    }).then(() => {\n      // Action was successful, remove any previous error\n      delete self.error;\n      // Refresh the dashboard\n      self.timeSrv.refreshDashboard();\n    }).catch(err => {\n      self.error = err.message || \"Request Error\";\n    });\n  }\n\n  acknowledgeAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'acknowledgeAlarm', alarmId);\n  }\n\n  unacknowledgeAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'unacknowledgeAlarm', alarmId);\n  }\n\n  clearAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'clearAlarm', alarmId);\n  }\n\n  escalateAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'escalateAlarm', alarmId);\n  }\n\n  createTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'createTicketForAlarm', alarmId);\n  }\n\n  updateTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'updateTicketForAlarm', alarmId);\n  }\n\n  closeTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'closeTicketForAlarm', alarmId);\n  }\n\n  // Multi-select handling\n  getRowsInRange(from, to) {\n    let rows = [];\n    if (!this.table) {\n      return rows;\n    }\n\n    let findIdx = selectionToMatch => {\n      return _.findIndex(this.table.rows, row => {\n        return row.meta.source === selectionToMatch.source && row.meta.alarm.id === selectionToMatch.alarmId;\n      });\n    };\n\n    let startIdx = findIdx(from);\n    if (startIdx < 0) {\n      return rows;\n    }\n\n    let endIdx = findIdx(to);\n    if (endIdx < 0) {\n      return rows;\n    }\n\n    if (endIdx < startIdx) {\n      // Swap\n      [startIdx,endIdx] = [endIdx,startIdx];\n    }\n\n    for (let i = startIdx; i <= endIdx; i++) {\n      rows.push({\n        source: this.table.rows[i].meta.source,\n        alarmId: this.table.rows[i].meta.alarm.id\n      });\n    }\n    return rows;\n  }\n}\n\nAlarmTableCtrl.templateUrl = 'panels/alarm-table/module.html';\n\nexport {\n  AlarmTableCtrl,\n  AlarmTableCtrl as PanelCtrl\n};\n\ncoreModule.directive('alarmDetailsAsModal',  alarmDetailsAsDirective);\ncoreModule.directive('memoEditor',  memoEditorAsDirective);\ncoreModule.directive('contextMenu', contextMenuAsDirective());\ncoreModule.directive('dynamicHeight', function($window) {\n  // Used to dynamically size the alarm details modal window\n  return{\n    link: function(scope, element, attrs){\n      element.css('max-height', $window.innerHeight * 0.8 + 'px');\n    }\n  }\n});\n"]}