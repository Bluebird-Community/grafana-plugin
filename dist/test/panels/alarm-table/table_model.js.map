{"version":3,"sources":["../../../../src/panels/alarm-table/table_model.js"],"names":["TableModel","columns","rows","type","label","sev","Severities","id","console","warn","options","col","length","self","sort","a","b","colInfo","style","severityForLabel","desc","reverse"],"mappings":";;;;;;;;;AAAA;;;;IAEaA,U,WAAAA,U;AACX,wBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,IAAL,GAAY,OAAZ;AACD;;;;qCAEgBC,K,EAAO;AACtB,UAAMC,MAAM,eAAMC,UAAN,CAAiBF,KAAjB,CAAZ;AACA,UAAIC,GAAJ,EAAS;AACP,eAAOA,IAAIE,EAAX;AACD,OAFD,MAEO;AACLC,gBAAQC,IAAR,CAAa,uCAAuCL,KAAvC,GAA+C,IAA5D;AACA,eAAO,CAAC,CAAR;AACD;AACF;;;yBAEIM,O,EAAS;AACZ,UAAIA,QAAQC,GAAR,KAAgB,IAAhB,IAAwB,KAAKV,OAAL,CAAaW,MAAb,IAAuBF,QAAQC,GAA3D,EAAgE;AAC9D;AACD;;AAED,UAAIE,OAAO,IAAX;AACA,WAAKX,IAAL,CAAUY,IAAV,CAAe,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC5B,YAAMC,UAAUJ,KAAKZ,OAAL,CAAaS,QAAQC,GAArB,CAAhB;;AAEA,YAAIM,WAAWA,QAAQC,KAAnB,IAA4BD,QAAQC,KAAR,CAAcf,IAAd,KAAuB,UAAvD,EAAmE;AACjEY,cAAIF,KAAKM,gBAAL,CAAsBJ,EAAEL,QAAQC,GAAV,CAAtB,CAAJ;AACAK,cAAIH,KAAKM,gBAAL,CAAsBH,EAAEN,QAAQC,GAAV,CAAtB,CAAJ;AACD,SAHD,MAGO;AACLI,cAAIA,EAAEL,QAAQC,GAAV,CAAJ;AACAK,cAAIA,EAAEN,QAAQC,GAAV,CAAJ;AACD;;AAED,YAAII,IAAIC,CAAR,EAAW;AACT,iBAAO,CAAC,CAAR;AACD;AACD,YAAID,IAAIC,CAAR,EAAW;AACT,iBAAO,CAAP;AACD;AACD,eAAO,CAAP;AACD,OAlBD;;AAoBA,WAAKf,OAAL,CAAaS,QAAQC,GAArB,EAA0BG,IAA1B,GAAiC,IAAjC;;AAEA,UAAIJ,QAAQU,IAAZ,EAAkB;AAChB,aAAKlB,IAAL,CAAUmB,OAAV;AACA,aAAKpB,OAAL,CAAaS,QAAQC,GAArB,EAA0BS,IAA1B,GAAiC,IAAjC;AACD,OAHD,MAGO;AACL,aAAKnB,OAAL,CAAaS,QAAQC,GAArB,EAA0BS,IAA1B,GAAiC,KAAjC;AACD;AACF","file":"table_model.js","sourcesContent":["import {Model} from '../../opennms';\n\nexport class TableModel {\n  constructor() {\n    this.columns = [];\n    this.rows = [];\n    this.type = 'table';\n  }\n\n  severityForLabel(label) {\n    const sev = Model.Severities[label];\n    if (sev) {\n      return sev.id;\n    } else {\n      console.warn('Unable to determine severity for \"' + label + '\".');\n      return -1;\n    }\n  }\n\n  sort(options) {\n    if (options.col === null || this.columns.length <= options.col) {\n      return;\n    }\n\n    var self = this;\n    this.rows.sort(function(a, b) {\n      const colInfo = self.columns[options.col];\n\n      if (colInfo && colInfo.style && colInfo.style.type === 'severity') {\n        a = self.severityForLabel(a[options.col]);\n        b = self.severityForLabel(b[options.col]);\n      } else {\n        a = a[options.col];\n        b = b[options.col];\n      }\n\n      if (a < b) {\n        return -1;\n      }\n      if (a > b) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this.columns[options.col].sort = true;\n\n    if (options.desc) {\n      this.rows.reverse();\n      this.columns[options.col].desc = true;\n    } else {\n      this.columns[options.col].desc = false;\n    }\n  }\n}\n"]}