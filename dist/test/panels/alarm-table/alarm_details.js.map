{"version":3,"sources":["../../../../src/panels/alarm-table/alarm_details.js"],"names":["alarmDetailsAsDirective","AlarmDetailsCtrl","$scope","backendSrv","contextSrv","datasourceSrv","$q","editFeedback","editor","index","CORRECT_OUTLINED","CORRECT_FILLED","INCORRECT_OUTLINED","INCORRECT_FILLED","alarm","$parent","source","feedbackCorrectCount","feedbackIncorrectCount","severity","label","toLowerCase","severityIcon","getIconForSeverity","situationFeebackEnabled","feebackButton","tabs","ticketingEnabled","ticketerConfig","enabled","push","relatedAlarms","length","self","getDatasource","then","ds","getSituationFeedback","id","feedback","situationFeedback","initalizeFeeback","updateFeedback","hasSituationFeedback","situationFeedbackButton","catch","reason","console","log","detailsLink","detailsPage","substring","indexOf","reductionKey","button","alarmKey","feedbackType","FeedbackTypes","FALSE_POSITIVE","alarmFeedback","OnmsSituationFeedback","situationKey","situationFingerprint","fingerPrint","CORRECT","user","login","form","submitFeedback","submitSituationFeedback","response","submittedFeedback","fb","ifb","fingerprint","situation","btoa","get","type","message","restrict","templateUrl","controller","bindToController","controllerAs","scope","dismiss"],"mappings":"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","file":"alarm_details.js","sourcesContent":["import { TableRenderer } from \"./renderer\"\nimport md5 from '../../crypto-js/md5';\nimport {Model} from '../../opennms';\n\nexport class AlarmDetailsCtrl {\n\n  /** @ngInject */\n  constructor($scope, backendSrv, contextSrv, datasourceSrv, $q) {\n    this.$scope = $scope;\n    this.backendSrv = backendSrv;\n    this.contextSrv = contextSrv;\n    this.datasourceSrv = datasourceSrv;\n    this.editFeedback = false;\n    $scope.editor = { index: 0 };\n\n    this.CORRECT_OUTLINED = \"/public/plugins/opennms-helm-app/img/if_icon-ios7-checkmark-outline_211714.png\";\n    this.CORRECT_FILLED = \"/public/plugins/opennms-helm-app/img/if_icon-ios7-checkmark_211715.png\";\n\n    this.INCORRECT_OUTLINED = \"/public/plugins/opennms-helm-app/img/if_icon-close_211652.png\";\n    this.INCORRECT_FILLED = \"/public/plugins/opennms-helm-app/img/if_icon-close-circled_211650.png\";\n\n    // Save the alarm\n    $scope.alarm = $scope.$parent.alarm;\n    $scope.source = $scope.$parent.source;\n\n    // Feedback Counts\n    $scope.feedbackCorrectCount = 0;\n    $scope.feedbackIncorrectCount = 0;\n\n    // Compute the icon\n    let severity = $scope.alarm.severity.label.toLowerCase();\n    $scope.severityIcon = TableRenderer.getIconForSeverity(severity);\n\n    // Situation Feedback\n    $scope.situationFeebackEnabled = false;\n    $scope.feebackButton = this.CORRECT_OUTLINED;\n\n    // Compute the tabs\n    $scope.tabs = ['Overview', 'Memos'];\n    $scope.ticketingEnabled = $scope.$parent.ticketerConfig && $scope.$parent.ticketerConfig.enabled;\n    if ($scope.ticketingEnabled) {\n      $scope.tabs.push('Ticketing');\n    }\n    // If this is a Situation, collect any correlation feedback previously submitted\n    if ($scope.alarm.relatedAlarms && $scope.alarm.relatedAlarms.length > 0) {\n      $scope.tabs.push('Related Alarms');\n      let self = this;\n      this.getDatasource().then(ds => { return ds.getSituationFeedback(self.$scope.alarm.id) })\n        .then(\n          function (feedback) {\n            $scope.situationFeedback = self.initalizeFeeback();\n            if (feedback && feedback.length > 0) {\n              self.updateFeedback(feedback);\n              $scope.hasSituationFeedback = true;\n            }\n            $scope.situationFeedbackButton = self.situationFeedbackButton();\n            $scope.situationFeebackEnabled = true;\n          })\n        .catch(\n          function (reason) {\n            console.log(\"Situation Feedback not supported error: \", reason);\n          });\n    }\n\n    // Raw global details link\n    $scope.detailsLink = $scope.alarm.detailsPage.substring(0, $scope.alarm.detailsPage.indexOf(\"=\"));\n  }\n\n  detailFeedbackIncorrectButton(reductionKey) {\n    let button = this.INCORRECT_OUTLINED;\n    if (this.$scope.situationFeedback && this.$scope.hasSituationFeedback) {\n      for (let feedback of this.$scope.situationFeedback) {\n        if (feedback.alarmKey === reductionKey && feedback.feedbackType === Model.FeedbackTypes.FALSE_POSITIVE) {\n          button = this.INCORRECT_FILLED;\n          break;\n        }\n      }\n    }\n    return button;\n  }\n\n  detailFeedbackOkayButton(reductionKey) {\n    let button = this.CORRECT_FILLED;\n    if (this.$scope.situationFeedback) {\n      for (let feedback of this.$scope.situationFeedback) {\n        if (feedback.alarmKey === reductionKey && feedback.feedbackType === Model.FeedbackTypes.FALSE_POSITIVE) {\n          button = this.CORRECT_OUTLINED;\n          break;\n        }\n      }\n    }\n    return button;\n  }\n\n  initalizeFeeback() {\n    this.$scope.feedbackCorrectCount = 0;\n    this.$scope.feedbackIncorrectCount = 0;\n    let feedback = [];\n    for (let alarm of this.$scope.alarm.relatedAlarms) {\n      let alarmFeedback = new Model.OnmsSituationFeedback();\n      alarmFeedback.situationKey = this.$scope.alarm.reductionKey;\n      alarmFeedback.situationFingerprint = this.fingerPrint(this.$scope.alarm);\n      alarmFeedback.alarmKey = alarm.reductionKey;\n      alarmFeedback.feedbackType = Model.FeedbackTypes.CORRECT;\n      alarmFeedback.reason = \"ALL_CORRECT\";\n      alarmFeedback.user = this.contextSrv.user.login;\n      feedback.push(alarmFeedback);\n      this.$scope.feedbackCorrectCount++;\n    }\n    return feedback;\n  }\n\n  markIncorrect(reductionKey) {\n    for (let feedback of this.$scope.situationFeedback) {\n      if (feedback.alarmKey === reductionKey && feedback.feedbackType === Model.FeedbackTypes.CORRECT) {\n        feedback.feedbackType = Model.FeedbackTypes.FALSE_POSITIVE;\n        this.$scope.feedbackCorrectCount--;\n        this.$scope.feedbackIncorrectCount++;\n        break;\n      }\n    }\n  }\n\n  markCorrect(reductionKey) {\n    for (let feedback of this.$scope.situationFeedback) {\n      if (feedback.alarmKey === reductionKey && feedback.feedbackType === Model.FeedbackTypes.FALSE_POSITIVE) {\n        feedback.feedbackType = Model.FeedbackTypes.CORRECT;\n        this.$scope.feedbackCorrectCount++;\n        this.$scope.feedbackIncorrectCount--;\n        break;\n      }\n    }\n  }\n\n  submitEditedFeedback(form) {\n    for (let feedback of this.$scope.situationFeedback) {\n      if (form) {\n        feedback.reason = form.reason;\n      }\n    }\n    this.submitFeedback(this.$scope.situationFeedback);\n  }\n\n  submitFeedback(feedback) {\n    let self = this;\n    this.getDatasource().then(ds => { return ds.submitSituationFeedback(self.$scope.alarm.id, feedback) })\n      .then(\n        function (response) {\n          self.$scope.editFeedback = false;\n          self.$scope.submittedFeedback = true;\n          self.$scope.hasSituationFeedback = true;\n        })\n      .catch(\n        function (reason) {\n          console.log(\"Got POST error: \", reason);\n          self.$scope.editFeedback = false;\n        });\n  }\n\n  updateFeedback(feedback) {\n    for (let fb of feedback) {\n      for (let ifb of this.$scope.situationFeedback) {\n        if (fb.alarmKey === ifb.alarmKey)\n          ifb = fb;\n      }\n    }\n  }\n\n  editSituationFeedback() {\n    this.$scope.editFeedback = true;\n    this.$scope.submittedFeedback = false;\n  }\n\n  situationFeedbackButton() {\n    let button = this.CORRECT_OUTLINED;\n    let fingerprint = this.fingerPrint(this.$scope.alarm);\n    if (this.$scope.situationFeedback) {\n      for (let feedback of this.$scope.situationFeedback) {\n        if (feedback.situationFingerprint == fingerprint && this.$scope.hasSituationFeedback) {\n          button = this.CORRECT_FILLED;\n          break;\n        }\n      }\n    }\n    return button;\n  }\n\n  cancelEditedFeedback() {\n    this.$scope.situationFeedback = this.initalizeFeeback();\n    this.$scope.editFeedback = false;\n    this.$scope.submittedFeedback = false;\n  }\n\n  fingerPrint(situation) {\n    return btoa(md5(situation.relatedAlarms));\n  }\n\n  getDatasource() {\n    return this.datasourceSrv.get(this.$scope.source).then(ds => {\n      if (ds.type && ds.type.indexOf(\"fault-datasource\") < 0) {\n        throw { message: 'Only OpenNMS datasources are supported' };\n      } else {\n        return ds;\n      }\n    });\n  };\n}\n\n/** @ngInject */\nexport function alarmDetailsAsDirective() {\n  'use strict';\n  return {\n    restrict: 'E',\n    templateUrl: 'public/plugins/opennms-helm-app/panels/alarm-table/alarm_details.html',\n    controller: AlarmDetailsCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: \"&\" }\n  };\n}\n"]}