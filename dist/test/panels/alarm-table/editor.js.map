{"version":3,"sources":["../../../../src/panels/alarm-table/editor.js"],"names":["tablePanelEditor","TablePanelEditorCtrl","$scope","$q","uiSegmentSrv","editor","panelCtrl","ctrl","panel","transformers","fontSizes","severity","addColumnSegment","newPlusButton","dataRaw","when","columns","transform","getColumns","self","filter","a","indexOf","segments","map","c","newSegment","value","text","column","find","push","render","plusButton","html","without","restrict","scope","templateUrl","controller"],"mappings":";;;;;;;;;QAwEgBA,gB,GAAAA,gB;;AAxEhB;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;;;;;IAEaC,oB,WAAAA,oB;AACX;AACA,gCAAYC,MAAZ,EAAoBC,EAApB,EAAwBC,YAAxB,EAAsC;AAAA;;AACpC,SAAKD,EAAL,GAAUA,EAAV;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACAF,WAAOG,MAAP,GAAgB,IAAhB;AACA,SAAKC,SAAL,GAAiBJ,OAAOK,IAAxB;AACA,SAAKC,KAAL,GAAa,KAAKF,SAAL,CAAeE,KAA5B;AACA,SAAKC,YAAL;AACA,SAAKC,SAAL,GAAiB,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,EAA+B,MAA/B,EAAuC,MAAvC,EAA+C,MAA/C,EAAuD,MAAvD,EAA+D,MAA/D,EAAuE,MAAvE,EAA+E,MAA/E,EAAuF,MAAvF,CAAjB;;AAEA,QAAI,KAAKF,KAAL,CAAWG,QAAX,KAAwB,IAA5B,EAAkC;AAChC,WAAKH,KAAL,CAAWG,QAAX,GAAsB,KAAtB;AACD;;AAED,SAAKC,gBAAL,GAAwBR,aAAaS,aAAb,EAAxB;AACD;;;;uCAEkB;AAAA;;AACjB,UAAI,CAAC,KAAKP,SAAL,CAAeQ,OAApB,EAA6B;AAC3B,eAAO,KAAKX,EAAL,CAAQY,IAAR,CAAa,EAAb,CAAP;AACD;AACD,UAAIC,UAAU,KAAKP,YAAL,CAAkB,KAAKD,KAAL,CAAWS,SAA7B,EAAwCC,UAAxC,CAAmD,KAAKZ,SAAL,CAAeQ,OAAlE,CAAd;AACA;AACA,UAAIK,OAAO,IAAX;AACAH,gBAAUA,QAAQI,MAAR,CAAe,UAASC,CAAT,EAAW;AAAC,eAAOF,KAAKX,KAAL,CAAWQ,OAAX,CAAmBM,OAAnB,CAA2BD,CAA3B,IAAgC,CAAvC;AAAyC,OAApE,CAAV;AACA,UAAIE,WAAW,iBAAEC,GAAF,CAAMR,OAAN,EAAe,UAACS,CAAD;AAAA,eAAO,MAAKrB,YAAL,CAAkBsB,UAAlB,CAA6B,EAACC,OAAOF,EAAEG,IAAV,EAA7B,CAAP;AAAA,OAAf,CAAf;AACA,aAAO,KAAKzB,EAAL,CAAQY,IAAR,CAAaQ,QAAb,CAAP;AACD;;;gCAEW;AACV,UAAIP,UAAU,2BAAa,KAAKR,KAAL,CAAWS,SAAxB,EAAmCC,UAAnC,CAA8C,KAAKZ,SAAL,CAAeQ,OAA7D,CAAd;AACA,UAAIe,SAAS,iBAAEC,IAAF,CAAOd,OAAP,EAAgB,EAACY,MAAM,KAAKhB,gBAAL,CAAsBe,KAA7B,EAAhB,CAAb;;AAEA,UAAIE,MAAJ,EAAY;AACV,aAAKrB,KAAL,CAAWQ,OAAX,CAAmBe,IAAnB,CAAwBF,MAAxB;AACA,aAAKG,MAAL;AACD;;AAED,UAAIC,aAAa,KAAK7B,YAAL,CAAkBS,aAAlB,EAAjB;AACA,WAAKD,gBAAL,CAAsBsB,IAAtB,GAA6BD,WAAWC,IAAxC;AACA,WAAKtB,gBAAL,CAAsBe,KAAtB,GAA8BM,WAAWN,KAAzC;AACD;;;uCAEkB;AACjB,WAAKnB,KAAL,CAAWQ,OAAX,GAAqB,EAArB;AACA,UAAI,KAAKR,KAAL,CAAWS,SAAX,KAAyB,yBAA7B,EAAwD;AACtD,aAAKT,KAAL,CAAWQ,OAAX,CAAmBe,IAAnB,CAAwB,EAACH,MAAM,KAAP,EAAcD,OAAO,KAArB,EAAxB;AACD;;AAED,WAAKK,MAAL;AACD;;;6BAEQ;AACP,WAAK1B,SAAL,CAAe0B,MAAf;AACD;;;iCAEYH,M,EAAQ;AACnB,WAAKrB,KAAL,CAAWQ,OAAX,GAAqB,iBAAEmB,OAAF,CAAU,KAAK3B,KAAL,CAAWQ,OAArB,EAA8Ba,MAA9B,CAArB;AACA,WAAKvB,SAAL,CAAe0B,MAAf;AACD;;;;;;AAGH;;;AACO,SAAShC,gBAAT,CAA0BG,EAA1B,EAA8BC,YAA9B,EAA4C;AACjD;;AACA,SAAO;AACLgC,cAAU,GADL;AAELC,WAAO,IAFF;AAGLC,iBAAa,iEAHR;AAILC,gBAAYtC;AAJP,GAAP;AAMD","file":"editor.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport angular from 'angular';\n\nimport {transformers} from './transformers';\nimport kbn from 'app/core/utils/kbn';\n\nexport class TablePanelEditorCtrl {\n  /** @ngInject */\n  constructor($scope, $q, uiSegmentSrv) {\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.transformers = transformers;\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n\n    if (this.panel.severity === true) {\n      this.panel.severity = 'row';\n    }\n\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n  }\n\n  getColumnOptions() {\n    if (!this.panelCtrl.dataRaw) {\n      return this.$q.when([]);\n    }\n    let columns = this.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    // Filter out columns that have already been selected\n    let self = this;\n    columns = columns.filter(function(a){return self.panel.columns.indexOf(a) < 0});\n    let segments = _.map(columns, (c) => this.uiSegmentSrv.newSegment({value: c.text}));\n    return this.$q.when(segments);\n  }\n\n  addColumn() {\n    let columns = transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    let column = _.find(columns, {text: this.addColumnSegment.value});\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    let plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  transformChanged() {\n    this.panel.columns = [];\n    if (this.panel.transform === 'timeseries_aggregations') {\n      this.panel.columns.push({text: 'Avg', value: 'avg'});\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  removeColumn(column) {\n    this.panel.columns = _.without(this.panel.columns, column);\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function tablePanelEditor($q, uiSegmentSrv) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: '/public/plugins/opennms-helm-app/panels/alarm-table/editor.html',\n    controller: TablePanelEditorCtrl,\n  };\n}\n"]}