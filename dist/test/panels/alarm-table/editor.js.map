{"version":3,"sources":["../../../../src/panels/alarm-table/editor.js"],"names":["tablePanelEditor","TablePanelEditorCtrl","$scope","$q","uiSegmentSrv","editor","panelCtrl","ctrl","panel","transformers","fontSizes","srcIndex","undefined","destIndex","addColumnSegment","newPlusButton","document","querySelectorAll","e","addEventListener","evt","handleEvent","classes","c","cols","forEach","call","col","classList","remove","srcElement","offsetParent","target","id","contains","parent","type","getTarget","add","dataTransfer","effectAllowed","setData","innerHTML","error","parseInt","replace","console","log","columns","text","preventDefault","dropEffect","columnIndex","removeClasses","screenX","screenY","eval","stopPropagation","$apply","splice","render","targetIndex","dataRaw","when","transform","getColumns","self","filter","a","indexOf","segments","map","newSegment","value","column","find","push","plusButton","html","without","restrict","scope","templateUrl","controller"],"mappings":"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","file":"editor.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport angular from 'angular';\n\nimport {transformers} from './transformers';\nimport kbn from 'app/core/utils/kbn';\n\nexport class TablePanelEditorCtrl {\n  /** @ngInject */\n  constructor($scope, $q, uiSegmentSrv) {\n    this.$q = $q;\n    this.$scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.transformers = transformers;\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n\n    this.srcIndex = undefined;\n    this.destIndex = undefined;\n\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    let editor = document.querySelectorAll('.editor-row')[0];\n    for (const e of [ 'dragstart', 'dragover', 'dragleave', 'drop']) {\n      //console.log('adding listener: ' + e);\n      editor.addEventListener(e, (evt) => { this.handleEvent(e, evt); }, false);\n    }\n  }\n\n  removeClasses(...classes) {\n    for (const c of classes) {\n      const cols = document.querySelectorAll('.' + c);\n      [].forEach.call(cols, (col) => {\n        col.classList.remove(c);\n      });\n    }\n  }\n\n  getTarget(evt) {\n    if (evt.srcElement && evt.srcElement.offsetParent) {\n      let target = evt.srcElement.offsetParent;\n      if (target && target.id && target.classList && target.classList.contains('column-reorder')) {\n        return target;\n      }\n    }\n    // dragleave is only fired for the label and not the parent container\n    if (evt.target && evt.target.parent && evt.target.parent.classList && evt.target.parent.classList.contains('column-reorder')) {\n      return evt.target.parent;\n    }\n  }\n\n  handleEvent(type, evt) {\n    const target = this.getTarget(evt);\n    const id = evt.srcElement.id;\n\n    switch(type) {\n      case 'dragstart':\n        evt.srcElement.classList.add('picked-up');\n        evt.dataTransfer.effectAllowed = 'move';\n        // Internet Explorer doesn't support \"text/html\":\n        // https://stackoverflow.com/a/28740710\n        try {\n          evt.dataTransfer.setData('text/html', evt.srcElement.innerHTML);\n        } catch (error) {\n          evt.dataTransfer.setData('text', evt.srcElement.innerHTML);\n        }\n        if (id) {\n          this.srcIndex = parseInt(id.replace(/^column-/, ''), 10);\n          console.log('picking up \"' + this.panel.columns[this.srcIndex].text + '\"');\n        }\n        break;\n      case 'dragover':\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        evt.dataTransfer.dropEffect = 'move';\n        if (target && target.id && target.classList && target.classList.contains('column-reorder')) {\n          const columnIndex = parseInt(target.id.replace(/^column-/, ''), 10);\n          if (!target.classList.contains('over')) {\n            //console.log('entering ' + this.panel.columns[columnIndex].text);\n            this.removeClasses('over');\n            target.classList.add('over');\n            this.destIndex = columnIndex;\n          }\n        }\n        break;\n      case 'dragleave':\n        if (target && evt.screenX !== 0 && evt.screenY !== 0) {\n          const columnIndex = parseInt(target.id.replace(/^column-/, ''), 10);\n          //console.log('leaving ' + this.panel.columns[columnIndex].text);\n          this.destIndex = undefined;\n          this.removeClasses('over');\n        }\n        break;\n      case 'drop':\n        if (eval.stopPropagation) {\n          evt.stopPropagation();\n        }\n        if (this.srcIndex !== undefined && this.destIndex !== undefined) {\n          this.$scope.$apply(() => {\n            this.panel.columns.splice(this.destIndex, 0, this.panel.columns.splice(this.srcIndex, 1)[0]);\n            this.panelCtrl.render();\n          });\n          console.log('dropped \"' + this.panel.columns[this.srcIndex].text + '\" onto \"' + this.panel.columns[this.destIndex].text + '\"');\n        } else {\n          const targetIndex = (this.srcIndex == undefined) ? 'source' : 'destination';\n          console.log(`WARNING: drop event received but ${targetIndex} was unset.`);\n        }\n        this.removeClasses('over', 'picked-up');\n        return false;\n        break;\n      default:\n        console.log('WARNING: unhandled event type: ' + type);\n    }\n  }\n\n  getColumnOptions() {\n    if (!this.panelCtrl.dataRaw) {\n      return this.$q.when([]);\n    }\n    let columns = this.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    // Filter out columns that have already been selected\n    let self = this;\n    columns = columns.filter(function(a){return self.panel.columns.indexOf(a) < 0});\n    let segments = _.map(columns, (c) => this.uiSegmentSrv.newSegment({value: c.text}));\n    return this.$q.when(segments);\n  }\n\n  addColumn() {\n    let columns = transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    let column = _.find(columns, {text: this.addColumnSegment.value});\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    let plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  transformChanged() {\n    this.panel.columns = [];\n    if (this.panel.transform === 'timeseries_aggregations') {\n      this.panel.columns.push({text: 'Avg', value: 'avg'});\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  removeColumn(column) {\n    this.panel.columns = _.without(this.panel.columns, column);\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function tablePanelEditor($q, uiSegmentSrv) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: '/public/plugins/opennms-helm-app/panels/alarm-table/editor.html',\n    controller: TablePanelEditorCtrl,\n  };\n}\n"]}