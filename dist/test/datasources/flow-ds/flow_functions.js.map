{"version":3,"sources":["../../../../src/datasources/flow-ds/flow_functions.js"],"names":["index","categories","Combine","Filter","Transform","addFuncDef","funcDef","params","defaultParams","category","push","name","shortName","type","each","funcList","catName","sortBy","FuncInstance","options","def","withDefaultParams","slice","updateText","prototype","render","metricExp","parameters","map","value","paramType","$","isNumeric","bind","_hasMultipleParamsInString","strValue","indexOf","optional","updateParam","split","partVal","idx","trim","splice","length","text","join","Gfuncs","isString","message","graphiteVersion","filteredCategories","functions"],"mappings":"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","file":"flow_functions.js","sourcesContent":["import _ from 'lodash';\n\nlet index = [];\nlet categories = {\n  Combine: [],\n  Filter: [],\n  Transform: []\n};\n\nfunction addFuncDef(funcDef) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  if (funcDef.category) {\n    funcDef.category.push(funcDef);\n  }\n  index[funcDef.name] = funcDef;\n  index[funcDef.shortName || funcDef.name] = funcDef;\n}\n\n// Combine\n\naddFuncDef({\n  name: 'topN',\n  category: categories.Combine,\n  params: [{name: \"n\", type: \"int\",}],\n  defaultParams: [10]\n});\n\naddFuncDef({\n  name: 'includeOther',\n  category: categories.Combine\n});\n\n// Filter\n\naddFuncDef({\n  name: 'withExporterNode',\n  category: categories.Filter,\n  params: [{name: \"nodeCriteria\", type: \"string\"}]\n});\n\naddFuncDef({\n  name: 'withIfIndex',\n  category: categories.Filter,\n  params: [{name: \"ifIndex\", type: \"int\"}]\n});\n\n// Transform\n\naddFuncDef({\n  name: 'perSecond',\n  category: categories.Transform\n});\n\naddFuncDef({\n  name: 'negativeEgress',\n  category: categories.Transform\n});\n\naddFuncDef({\n  name: 'negativeIngress',\n  category: categories.Transform\n});\n\naddFuncDef({\n  name: 'asTableSummary',\n  category: categories.Transform\n});\n\naddFuncDef({\n  name: 'combineIngressEgress',\n  category: categories.Transform\n});\n\n_.each(categories, function (funcList, catName) {\n  categories[catName] = _.sortBy(funcList, 'name');\n});\n\nfunction FuncInstance(funcDef, options) {\n  this.def = funcDef;\n  this.params = [];\n\n  if (options && options.withDefaultParams) {\n    this.params = funcDef.defaultParams.slice(0);\n  }\n\n  this.updateText();\n}\n\nFuncInstance.prototype.render = function (metricExp) {\n  return {\n    name: this.def.name,\n    parameters: _.map(this.params, function (value, index) {\n      let paramType = this.def.params[index].type;\n      if (paramType === 'int' || paramType === 'value_or_series' || paramType === 'boolean') {\n        return value;\n      }\n      else if (paramType === 'int_or_interval' && $.isNumeric(value)) {\n        return value;\n      }\n      return value;\n    }.bind(this))\n  };\n};\n\nFuncInstance.prototype._hasMultipleParamsInString = function (strValue, index) {\n  if (strValue.indexOf(',') === -1) {\n    return false;\n  }\n\n  return this.def.params[index + 1] && this.def.params[index + 1].optional;\n};\n\nFuncInstance.prototype.updateParam = function (strValue, index) {\n  // handle optional parameters\n  // if string contains ',' and next param is optional, split and update both\n  if (this._hasMultipleParamsInString(strValue, index)) {\n    _.each(strValue.split(','), function (partVal, idx) {\n      this.updateParam(partVal.trim(), index + idx);\n    }.bind(this));\n    return;\n  }\n\n  if (strValue === '' && this.def.params[index].optional) {\n    this.params.splice(index, 1);\n  }\n  else {\n    this.params[index] = strValue;\n  }\n\n  this.updateText();\n};\n\nFuncInstance.prototype.updateText = function () {\n  if (this.params.length === 0) {\n    this.text = this.def.name + '()';\n    return;\n  }\n\n  let text = this.def.name + '(';\n  text += this.params.join(', ');\n  text += ')';\n  this.text = text;\n};\n\nexport class Gfuncs {\n  static createFuncInstance(funcDef, options) {\n    if (_.isString(funcDef)) {\n      if (!index[funcDef]) {\n        throw {message: 'Method not found ' + name};\n      }\n      funcDef = index[funcDef];\n    }\n    return new FuncInstance(funcDef, options);\n  }\n\n  static getFuncDef(name) {\n    return index[name];\n  };\n\n  static getCategories(graphiteVersion) {\n    let filteredCategories = {};\n    _.each(categories, function (functions, category) {\n      if (functions.length) {\n        filteredCategories[category] = functions;\n      }\n    });\n\n    return filteredCategories;\n  }\n}\n"]}