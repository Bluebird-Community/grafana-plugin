{"version":3,"sources":["../../../../src/datasources/flow-ds/add_opennms_func.js"],"names":["angular","module","directive","$compile","inputTemplate","buttonTemplate","link","$scope","elem","ctrl","graphiteVersion","datasource","categories","getCategories","allFunctions","getAllFunctionNames","functionMenu","createFunctionDropDownMenu","$input","$","$button","appendTo","attr","typeahead","source","minLength","items","updater","value","funcDef","getFuncDef","toLowerCase","find","funcName","indexOf","$apply","addFunction","trigger","click","hide","show","focus","keyup","toggleClass","val","blur","setTimeout","removeClass","contents","reduce","list","category","each","func","push","name","map","submenu","text"],"mappings":"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","file":"add_opennms_func.js","sourcesContent":["import _ from 'lodash';\n\nimport {Gfuncs} from \"./flow_functions\";\n\nangular\n  .module('grafana.directives')\n  .directive('opennmsAddFunc', function ($compile) {\n    let inputTemplate = '<input type=\"text\"' +\n      ' class=\"gf-form-input\"' +\n      ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n    let buttonTemplate = '<a  class=\"gf-form-label query-part dropdown-toggle\"' +\n      ' tabindex=\"1\" gf-dropdown=\"functionMenu\" data-toggle=\"dropdown\">' +\n      '<i class=\"fa fa-plus\"></i></a>';\n\n    return {\n      link: function ($scope, elem) {\n        let ctrl = $scope.ctrl;\n        let graphiteVersion = ctrl.datasource.graphiteVersion;\n        let categories = Gfuncs.getCategories(graphiteVersion);\n        let allFunctions = getAllFunctionNames(categories);\n\n        $scope.functionMenu = createFunctionDropDownMenu(categories);\n\n        let $input = $(inputTemplate);\n        let $button = $(buttonTemplate);\n        $input.appendTo(elem);\n        $button.appendTo(elem);\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({\n          source: allFunctions,\n          minLength: 1,\n          items: 10,\n          updater: function (value) {\n            let funcDef = Gfuncs.getFuncDef(value);\n            if (!funcDef) {\n              // try find close match\n              value = value.toLowerCase();\n              funcDef = _.find(allFunctions, function (funcName) {\n                return funcName.toLowerCase().indexOf(value) === 0;\n              });\n\n              if (!funcDef) {\n                return;\n              }\n            }\n\n            $scope.$apply(function () {\n              ctrl.addFunction(funcDef);\n            });\n\n            $input.trigger('blur');\n            return '';\n          }\n        });\n\n        $button.click(function () {\n          $button.hide();\n          $input.show();\n          $input.focus();\n        });\n\n        $input.keyup(function () {\n          elem.toggleClass('open', $input.val() === '');\n        });\n\n        $input.blur(function () {\n          // clicking the function dropdown menu wont\n          // work if you remove class at once\n          setTimeout(function () {\n            $input.val('');\n            $input.hide();\n            $button.show();\n            elem.removeClass('open');\n          }, 200);\n        });\n\n        $compile(elem.contents())($scope);\n      }\n    };\n  });\n\nfunction getAllFunctionNames(categories) {\n  return _.reduce(categories, function (list, category) {\n    _.each(category, function (func) {\n      list.push(func.name);\n    });\n    return list;\n  }, []);\n}\n\nfunction createFunctionDropDownMenu(categories) {\n  return _.map(categories, function (list, category) {\n    let submenu = _.map(list, function (value) {\n      return {\n        text: value.name,\n        click: \"ctrl.addFunction('\" + value.name + \"')\",\n      };\n    });\n\n    return {\n      text: category,\n      submenu: submenu\n    };\n  });\n}\n"]}