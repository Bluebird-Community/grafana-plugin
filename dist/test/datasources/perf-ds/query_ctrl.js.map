{"version":3,"sources":["../../../../src/datasources/perf-ds/query_ctrl.js"],"names":["OpenNMSQueryCtrl","$rootScope","$scope","$injector","$q","$modal","types","error","validateTarget","self","showSelectionModal","query","datasource","searchForNodes","then","results","data","count","totalCount","node","isUndefined","foreignId","isNull","foreignSource","target","nodeId","id","targetBlur","filterResources","resources","filteredResources","length","toLowerCase","filter","resource","key","indexOf","take","searchLimit","nodeResources","undefined","deferred","defer","resolve","promise","getResourcesWithAttributesForNode","each","label","name","sortBy","re","match","exec","resourceId","prop","suggestAttributes","attributes","namedAttributes","attribute","push","getAvailableFilters","columns","search","callback","scope","$new","result","modal","template","persist","show","keyboard","when","modalEl","targetId","required","errorMessage","emit","refresh","type","Attribute","Expression","messages","Filter","filterParameters","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import './modal_ctrl';\nimport {QueryType} from './constants';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport appEvents from 'app/core/app_events';\nimport _ from 'lodash';\n\nexport class OpenNMSQueryCtrl extends QueryCtrl {\n\n  constructor($rootScope, $scope, $injector, $q, $modal) {\n    super($scope, $injector);\n\n    this.types = QueryType;\n\n    this.error = this.validateTarget();\n    this.$rootScope = $rootScope;\n    this.$q = $q;\n    this.$modal = $modal;\n  }\n\n  openNodeSelectionModal() {\n    var self = this;\n    this.showSelectionModal(\"nodes\", {\n      '#': 'id',\n      'Label': 'label',\n      'Foreign ID': 'foreignId',\n      'sysName': 'sysName'\n    }, function (query) {\n      return self.datasource\n        .searchForNodes(query)\n        .then(function (results) {\n          return {\n            'count': results.data.count,\n            'totalCount': results.data.totalCount,\n            'rows': results.data.node\n          };\n        });\n    }, function (node) {\n      if (!_.isUndefined(node.foreignId) && !_.isNull(node.foreignId)\n        && !_.isUndefined(node.foreignSource) && !_.isNull(node.foreignSource)) {\n        // Prefer fs:fid\n        self.target.nodeId = node.foreignSource + \":\" + node.foreignId;\n      } else {\n        // Fallback to node id\n        self.target.nodeId = node.id;\n      }\n      self.targetBlur('nodeId');\n    });\n  }\n\n  openResourceSelectionModal() {\n    var self = this;\n\n    function filterResources(resources, query) {\n      var filteredResources = resources;\n      if (query.length >= 1) {\n        query = query.toLowerCase();\n        filteredResources = _.filter(resources, function (resource) {\n          return resource.key.indexOf(query) >= 0;\n        });\n      }\n\n      // Limit the results - it takes along time to render if there are too many\n      var totalCount = filteredResources.length;\n      filteredResources = _.take(filteredResources, self.datasource.searchLimit);\n\n      return {\n        'count': filteredResources.length,\n        'totalCount': totalCount,\n        'rows': filteredResources\n      };\n    }\n\n    self.nodeResources = undefined;\n    this.showSelectionModal(\"resources\", {\n      'Label': 'label',\n      'Name': 'name'\n    }, function (query) {\n      if (self.nodeResources !== undefined) {\n        var deferred = self.$q.defer();\n        deferred.resolve(filterResources(self.nodeResources, query));\n        return deferred.promise;\n      }\n\n      return self.datasource.getResourcesWithAttributesForNode(self.target.nodeId)\n        .then(function (resources) {\n          // Compute a key for more efficient searching\n          _.each(resources, function (resource) {\n            resource.key = resource.label.toLowerCase() + resource.name.toLowerCase();\n          });\n          // Sort the list once\n          self.nodeResources = _.sortBy(resources, function (resource) {\n            return resource.label;\n          });\n          // Filter\n          return filterResources(self.nodeResources, query);\n        });\n    }, function (resource) {\n      // Exclude the node portion of the resource id\n      var re = /node(Source)?\\[.*?]\\.(.*)$/;\n      var match = re.exec(resource.id);\n      self.target.resourceId = match[2];\n      self.targetBlur('resourceId');\n    });\n  }\n\n  openAttributeSelectionModal(prop) {\n    var self = this;\n\n    if (!prop) {\n      prop = 'attribute';\n    }\n\n    this.showSelectionModal(\"attributes\", {\n      'Name': 'name'\n    }, function (query) {\n      return self.datasource\n        .suggestAttributes(self.target.nodeId, self.target.resourceId, query)\n        .then(function (attributes) {\n          var namedAttributes = [];\n          _.each(attributes, function (attribute) {\n            namedAttributes.push({'name': attribute});\n          });\n\n          return {\n            'count': namedAttributes.length,\n            'totalCount': namedAttributes.length,\n            'rows': namedAttributes\n          };\n        });\n    }, function (attribute) {\n      self.target[prop] = attribute.name;\n      self.targetBlur(prop);\n    });\n  }\n\n  openFilterSelectionModal() {\n    var self = this;\n    this.showSelectionModal(\"filters\", {\n      'Name': 'name',\n      'Description': 'description',\n      'Backend': 'backend'\n    }, function () {\n      return self.datasource\n        .getAvailableFilters()\n        .then(function (results) {\n          return {\n            'count': results.data.length,\n            'totalCount': results.data.length,\n            'rows': results.data\n          };\n        });\n    }, function (filter) {\n      self.target.filter = filter;\n      self.targetBlur('filter');\n    });\n  }\n\n  showSelectionModal(label, columns, search, callback) {\n    var scope = this.$rootScope.$new();\n\n    scope.label = label;\n    scope.columns = columns;\n    scope.search = search;\n\n    scope.result = this.$q.defer();\n    scope.result.promise.then(callback);\n\n    var modal = this.$modal({\n      template: 'public/plugins/opennms-helm-app/datasources/perf-ds/partials/modal.selection.html',\n      persist: false,\n      show: false,\n      scope: scope,\n      keyboard: false\n    });\n    this.$q.when(modal).then(function (modalEl) { modalEl.modal('show'); });\n  }\n\n  targetBlur(targetId, required) {\n    if (required === undefined) {\n      required = true;\n    }\n    var errorMessage = this.validateTarget(targetId, required);\n    if (errorMessage) {\n      appEvents.emit('alert-error', ['Error', errorMessage]);\n      this.error = errorMessage;\n    } else {\n      // Only send valid requests to the API\n      this.refresh();\n    }\n  }\n\n  validateTarget(targetId, required) {\n    if (this.target.type === QueryType.Attribute || this.target.type === QueryType.Expression) {\n      var messages = {\n        'nodeId': \"You must supply a node id.\",\n        'resourceId': \"You must supply a resource id.\",\n        'attribute': \"You must supply an attribute.\",\n        'expression': \"You must supply an expression.\",\n        'label': \"You must supply a label.\"\n      };\n      if (required && targetId in messages && !this.target[targetId]) {\n        return messages[targetId];\n      } else if (required && !this.target[targetId]) {\n        // Fallback error message if the targetId doesn't have a specific message defined\n        return targetId + ' is a required field.';\n      }\n    } else if (this.target.type === QueryType.Filter) {\n      if (targetId == 'filterName' && (!this.target.filter || !this.target.filter.name)) {\n        return \"You must select a filter.\";\n      } else if (required && (!this.target.filterParameters || !targetId in this.target.filterParameters || !this.target.filterParameters[targetId])) {\n        return targetId + ' is a required field.';\n      }\n    }\n    return null;\n  }\n\n  getCollapsedText() {\n    if (this.target.type === QueryType.Attribute) {\n      return \"Attribute: \" + this.target.attribute;\n    } else if (this.target.type === QueryType.Expression) {\n      return \"Expression: \" + this.target.label;\n    } else if (this.target.type === QueryType.Filter) {\n      return \"Filter: \" + this.target.filter.name;\n    } else {\n      return \"<Incomplete>\";\n    }\n  }\n}\n\nOpenNMSQueryCtrl.templateUrl = 'datasources/perf-ds/partials/query.editor.html';\n"]}