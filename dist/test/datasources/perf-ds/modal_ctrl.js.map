{"version":3,"sources":["../../../../src/datasources/perf-ds/modal_ctrl.js"],"names":["ModalCtrl","$scope","query","selectedRow","searchForRows","self","searching","search","then","results","rows","count","totalCount","index","row","result","reject","dismiss","resolve","angular","module","controller"],"mappings":";;;;;;IAAMA,S;AACJ,qBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,WAAL,GAAmB,IAAnB;;AAEA,SAAKC,aAAL;AACD;;;;oCAEe;AACd,UAAIC,OAAO,IAAX;AACA,WAAKC,SAAL,GAAiB,IAAjB;AACA,WAAKL,MAAL,CAAYM,MAAZ,CAAmB,KAAKL,KAAxB,EACGM,IADH,CACQ,UAAUC,OAAV,EAAmB;AACvB;AACAJ,aAAKF,WAAL,GAAmB,IAAnB;AACA;AACAE,aAAKK,IAAL,GAAYD,QAAQC,IAApB;AACAL,aAAKM,KAAL,GAAaF,QAAQE,KAArB;AACAN,aAAKO,UAAL,GAAkBH,QAAQG,UAA1B;AACA;AACAP,aAAKC,SAAL,GAAiB,KAAjB;AACD,OAVH,EAUK,YAAY;AACbD,aAAKC,SAAL,GAAiB,KAAjB;AACD,OAZH;AAaD;;;kCAEaO,K,EAAO;AACnB,UAAI,KAAKV,WAAL,KAAqBU,KAAzB,EAAgC;AAC9B,aAAKV,WAAL,GAAmB,IAAnB;AACD,OAFD,MAEO;AACL,aAAKA,WAAL,GAAmBU,KAAnB;AACA;AACA,aAAKC,GAAL,GAAW,KAAKJ,IAAL,CAAU,KAAKP,WAAf,CAAX;AACD;AACF;;;6BAEQ;AACP,WAAKF,MAAL,CAAYc,MAAZ,CAAmBC,MAAnB;AACA,WAAKf,MAAL,CAAYgB,OAAZ;AACD;;;yBAEI;AACH,UAAI,KAAKd,WAAL,KAAqB,IAAzB,EAA+B;AAC7B,aAAKF,MAAL,CAAYc,MAAZ,CAAmBG,OAAnB,CAA2B,KAAKJ,GAAhC;AACD,OAFD,MAEO;AACL,aAAKb,MAAL,CAAYc,MAAZ,CAAmBC,MAAnB;AACD;AACD,WAAKf,MAAL,CAAYgB,OAAZ;AACD;;;;;;AAGH,IAAI,OAAOE,OAAP,KAAmB,WAAvB,EAAoC;AAClCA,UAAQC,MAAR,CAAe,qBAAf,EACGC,UADH,CACc,2BADd,EAC2CrB,SAD3C;AAED","file":"modal_ctrl.js","sourcesContent":["class ModalCtrl {\n  constructor($scope) {\n    this.$scope = $scope;\n    this.query = \"\";\n    this.selectedRow = null;\n\n    this.searchForRows();\n  }\n\n  searchForRows() {\n    var self = this;\n    this.searching = true;\n    this.$scope.search(this.query)\n      .then(function (results) {\n        // Reset the selected row\n        self.selectedRow = null;\n        // Add the results to the scope\n        self.rows = results.rows;\n        self.count = results.count;\n        self.totalCount = results.totalCount;\n        // We're done\n        self.searching = false;\n      }, function () {\n        self.searching = false;\n      });\n  }\n\n  setClickedRow(index) {\n    if (this.selectedRow === index) {\n      this.selectedRow = null;\n    } else {\n      this.selectedRow = index;\n      // Keep a reference to the row when the selection is made\n      this.row = this.rows[this.selectedRow];\n    }\n  }\n\n  cancel() {\n    this.$scope.result.reject();\n    this.$scope.dismiss();\n  }\n\n  ok() {\n    if (this.selectedRow !== null) {\n      this.$scope.result.resolve(this.row);\n    } else {\n      this.$scope.result.reject();\n    }\n    this.$scope.dismiss();\n  }\n}\n\nif (typeof angular !== 'undefined') {\n  angular.module('grafana.controllers')\n    .controller('OpenNMSModalSelectionCtrl', ModalCtrl);\n}\n"]}