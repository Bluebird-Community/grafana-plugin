{"version":3,"sources":["../../../../../src/datasources/fault-ds/ui/Clause.js"],"names":["Clause","uiSegmentSrv","operator","restriction","RestrictionDTO","Restriction","controls","setOperator","newOperator","newCondition","value","query","Controls","RemoveControl","AddControl","AddNestedControl","self","filter","control","Query","updateControls"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;;;IAEaA,M,WAAAA,M;AAET,oBAAYC,YAAZ,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiD;AAAA;;AAC7C,YAAIA,uBAAuB,OAAGC,cAA9B,EAA8C;AAC1CD,0BAAc,IAAI,OAAGE,WAAP,CAAmBJ,YAAnB,EAAiCE,WAAjC,CAAd;AACH;AACD,aAAKF,YAAL,GAAoBA,YAApB;AACA,aAAKE,WAAL,GAAmBA,WAAnB;AACA,aAAKG,QAAL,GAAgB,EAAhB;AACA,aAAKC,WAAL,CAAiBL,QAAjB;AACH;;;;oCAEWM,W,EAAa;AACrB;AACA,gBAAI,KAAKN,QAAL,KAAkB,KAAK,CAA3B,EAA8B;AAC1B,qBAAKA,QAAL,GAAgB,KAAKD,YAAL,CAAkBQ,YAAlB,CAA+BD,WAA/B,CAAhB;AACH;AACD;AACA,iBAAKN,QAAL,CAAcQ,KAAd,GAAsBF,WAAtB;AACH;;;uCAEcG,K,EAAO;AAClB,gBAAML,WAAW,CACb,IAAI,OAAGM,QAAH,CAAYC,aAAhB,EADa,EAEb,IAAI,OAAGD,QAAH,CAAYE,UAAhB,EAFa,EAGb,IAAI,OAAGF,QAAH,CAAYG,gBAAhB,EAHa,CAAjB;;AAMA,gBAAMC,OAAO,IAAb;AACA,iBAAKV,QAAL,GAAgB,iBAAEW,MAAF,CAASX,QAAT,EAAmB,mBAAW;AAC1C,uBAAOY,QAAQD,MAAR,CAAeN,KAAf,EAAsBK,IAAtB,CAAP;AACH,aAFe,CAAhB;;AAIA,gBAAI,KAAKb,WAAL,YAA4B,OAAGgB,KAAnC,EAA0C;AACtC,qBAAKhB,WAAL,CAAiBiB,cAAjB;AACH;AACJ","file":"Clause.js","sourcesContent":["import _ from 'lodash';\nimport {UI} from '../UI';\n\nexport class Clause {\n\n    constructor(uiSegmentSrv, operator, restriction) {\n        if (restriction instanceof UI.RestrictionDTO) {\n            restriction = new UI.Restriction(uiSegmentSrv, restriction);\n        }\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.restriction = restriction;\n        this.controls = [];\n        this.setOperator(operator);\n    }\n\n    setOperator(newOperator) {\n        // initialize if not initialized\n        if (this.operator === void 0) {\n            this.operator = this.uiSegmentSrv.newCondition(newOperator);\n        }\n        // Update the value if already initialized\n        this.operator.value = newOperator;\n    }\n\n    updateControls(query) {\n        const controls = [\n            new UI.Controls.RemoveControl(),\n            new UI.Controls.AddControl(),\n            new UI.Controls.AddNestedControl()\n        ];\n\n        const self = this;\n        this.controls = _.filter(controls, control => {\n            return control.filter(query, self);\n        });\n\n        if (this.restriction instanceof UI.Query) {\n            this.restriction.updateControls();\n        }\n    }\n}"]}