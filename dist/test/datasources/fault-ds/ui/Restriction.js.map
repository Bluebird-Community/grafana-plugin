{"version":3,"sources":["../../../../../src/datasources/fault-ds/ui/Restriction.js"],"names":["KEY_PLACEHOLDER","VALUE_PLACEHOLDER","Restriction","uiSegmentSrv","restriction","segments","setAttribute","attribute","setComparator","comparator","setValue","value","length","pop","segment","push","newKey","newOperator","newKeyValue","filter","type","fake","undefined","data","each","RestrictionDTO","getComparator","getValue","asRestrictionDTO"],"mappings":"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","file":"Restriction.js","sourcesContent":["import _ from 'lodash';\n\nconst KEY_PLACEHOLDER = 'select attribute';\nconst VALUE_PLACEHOLDER = 'select value';\n\nexport class Restriction {\n\n    static get KEY_PLACEHOLDER() {\n        return KEY_PLACEHOLDER;\n    }\n\n    static get VALUE_PLACEHOLDER() {\n        return VALUE_PLACEHOLDER;\n    }\n\n    constructor(uiSegmentSrv, restriction) {\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.segments = [];\n        if (restriction) {\n            this.setAttribute(restriction.attribute);\n            this.setComparator(restriction.comparator);\n            this.setValue(restriction.value);\n        }\n    }\n\n    getSegmentCount() {\n        return this.segments.length;\n    }\n\n    removeLastSegment() {\n        this.segments.pop();\n    }\n\n    addSegment(segment) {\n        if (segment) {\n            this.segments.push(segment);\n        }\n    }\n\n    setAttribute(attribute) {\n        if (this.segments.length == 0) {\n            this.segments.push({});\n        }\n        this.segments[0] = this.uiSegmentSrv.newKey(attribute);\n    }\n\n    getAttribute() {\n        if (this.segments.length == 0) {\n            return void 0;\n        }\n        return this.segments[0].value;\n    }\n\n    setComparator(comparator) {\n        if (this.segments.length == 1) {\n            this.segments.push({});\n        }\n        this.segments[1] = this.uiSegmentSrv.newOperator(comparator);\n    }\n\n    getComparator() {\n        if (this.segments.length == 1) {\n            return void 0;\n        }\n        return this.segments[1].value;\n    }\n\n    setValue(value) {\n        if (this.segments.length == 2) {\n            this.segments.push({});\n        }\n        this.segments[2] = this.uiSegmentSrv.newKeyValue(value);\n    }\n\n    getValue() {\n        if (this.segments.length == 2) {\n            return void 0;\n        }\n        return this.segments[2].value;\n    }\n\n    asRestrictionDTO() {\n        const segments = _.filter(this.segments, function(segment) {\n            return segment.type !== 'plus-button'\n                    && (segment.fake === undefined || segment.fake === false)\n                    && segment.value !== KEY_PLACEHOLDER && segment.value !== VALUE_PLACEHOLDER;\n        });\n        if (segments.length > 0 && segments.length % 3 == 0) {\n            var data = {};\n            _.each(segments, (segment) => {\n                if (segment.type === 'key') {\n                    data.attribute = segment.value;\n                } else if (segment.type === 'operator') {\n                    data.comparator = segment.value;\n                } else if (segment.type === 'value') {\n                    data.value = segment.value;\n                }\n            });\n            return new RestrictionDTO(data.attribute, data.comparator, data.value);\n        }\n        return null;\n    }\n\n    asString() {\n        const getComparator = function(restriction) {\n            if (restriction.value === 'null') {\n                if (restriction.comparator === '=') {\n                    return \"is\";\n                }\n                if (restriction.comparator === '!=') {\n                    return \"is not\";\n                }\n            }\n            return restriction.comparator;\n        };\n\n        const getValue = function(restriction) {\n            if (restriction.value === 'null') {\n                return 'null';\n            }\n            return \"'\" + restriction.value + \"'\";\n        };\n\n        const restriction = this.asRestrictionDTO();\n        if (restriction !== null) {\n            return restriction.attribute + \" \" + getComparator(restriction) + \" \" + getValue(restriction);\n        }\n        return null;\n    }\n}\n\n// Just use for internal use\nexport class RestrictionDTO {\n    constructor(attribute, comparator, value) {\n        this.attribute = attribute;\n        this.comparator = comparator;\n        this.value = value;\n    }\n}"]}