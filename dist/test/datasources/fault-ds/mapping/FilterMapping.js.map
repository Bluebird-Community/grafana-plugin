{"version":3,"sources":["../../../../../src/datasources/fault-ds/mapping/FilterMapping.js"],"names":["FilterMapping","uiSegmentSrv","uiFilter","Filter","TypeError","self","filter","limit","each","query","clauses","eachClause","apiClause","getApiClause","withClause","apiFilter","uiClause","getUiClause","addClause","applyParentQuery","clause","parentQuery","restriction","Query"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;;;AAEA;;;IAGaA,a,WAAAA,a;AAET,2BAAYC,YAAZ,EAA0B;AAAA;;AACtB,aAAKA,YAAL,GAAoBA,YAApB;AACH;;;;qCAEYC,Q,EAAU;AACnB;AACA,gBAAI,EAAEA,oBAAoB,OAAGC,MAAzB,CAAJ,EAAsC;AAClC,sBAAM,IAAIC,SAAJ,CAAc,oCAAd,CAAN;AACH;;AAED,gBAAMC,OAAO,IAAb;AACA,gBAAMC,SAAS,IAAI,aAAIH,MAAR,EAAf;AACAG,mBAAOC,KAAP,GAAe,CAAf;;AAEA,6BAAEC,IAAF,CAAON,SAASO,KAAT,CAAeC,OAAtB,EAA+B,UAASC,UAAT,EAAqB;AAChD,oBAAMC,YAAY,iCAAkBP,KAAKJ,YAAvB,EAAqCY,YAArC,CAAkDF,UAAlD,CAAlB;AACA,oBAAIC,cAAc,IAAlB,EAAwB;AACpBN,2BAAOQ,UAAP,CAAkBF,SAAlB;AACH;AACJ,aALD;AAMA,mBAAON,MAAP;AACH;;;oCAEWS,S,EAAW;AACnB,gBAAI,EAAEA,qBAAqB,aAAIZ,MAA3B,CAAJ,EAAwC;AACpC,sBAAM,IAAIC,SAAJ,CAAc,qCAAd,CAAN;AACH;;AAED,gBAAMC,OAAO,IAAb;AACA,gBAAIH,WAAW,IAAI,OAAGC,MAAP,CAAc,KAAKF,YAAnB,CAAf;;AAEA,6BAAEO,IAAF,CAAOO,UAAUL,OAAjB,EAA0B,qBAAa;AACnC,oBAAMM,WAAW,iCAAkBX,KAAKJ,YAAvB,EAAqCgB,WAArC,CAAiDL,SAAjD,CAAjB;AACAV,yBAASgB,SAAT,CAAmBF,QAAnB;;AAEA;AACAX,qBAAKc,gBAAL,CAAsBH,QAAtB,EAAgCd,SAASO,KAAzC;AAEH,aAPD;;AASA,mBAAOP,QAAP;AACH;;;yCAEgBkB,M,EAAQC,W,EAAa;AAClC,gBAAID,OAAOE,WAAP,YAA8B,OAAGC,KAArC,EAA4C;AACxCH,uBAAOE,WAAP,CAAmBD,WAAnB,GAAiCA,WAAjC;AACA,qBAAKF,gBAAL,CAAsBC,OAAOE,WAAP,CAAmBZ,OAAzC,EAAkDU,OAAOE,WAAzD;AACH;AACJ","file":"FilterMapping.js","sourcesContent":["import _ from 'lodash';\nimport {API} from '../../../opennms'\nimport {UI} from '../UI';\nimport {ClauseMapping} from './ClauseMapping';\n\n/**\n * Maps a UiFilter to API.filter and vice versa.\n */\nexport class FilterMapping {\n\n    constructor(uiSegmentSrv) {\n        this.uiSegmentSrv = uiSegmentSrv;\n    }\n\n    getApiFilter(uiFilter) {\n        // Ensure we can migrate\n        if (!(uiFilter instanceof UI.Filter)) {\n            throw new TypeError(\"uiFilter is not of type UI.Filter.\");\n        }\n\n        const self = this;\n        const filter = new API.Filter();\n        filter.limit = 0;\n\n        _.each(uiFilter.query.clauses, function(eachClause) {\n            const apiClause = new ClauseMapping(self.uiSegmentSrv).getApiClause(eachClause);\n            if (apiClause !== null) {\n                filter.withClause(apiClause);\n            }\n        });\n        return filter;\n    }\n\n    getUiFilter(apiFilter) {\n        if (!(apiFilter instanceof API.Filter)) {\n            throw new TypeError(\"apiFilter is not of type API.Filter\");\n        }\n\n        const self = this;\n        let uiFilter = new UI.Filter(this.uiSegmentSrv);\n\n        _.each(apiFilter.clauses, apiClause => {\n            const uiClause = new ClauseMapping(self.uiSegmentSrv).getUiClause(apiClause);\n            uiFilter.addClause(uiClause);\n\n            // set parentQuery for all nested queries\n            self.applyParentQuery(uiClause, uiFilter.query);\n\n        });\n\n        return uiFilter;\n    }\n\n    applyParentQuery(clause, parentQuery) {\n        if (clause.restriction instanceof UI.Query) {\n            clause.restriction.parentQuery = parentQuery;\n            this.applyParentQuery(clause.restriction.clauses, clause.restriction);\n        }\n    }\n}"]}