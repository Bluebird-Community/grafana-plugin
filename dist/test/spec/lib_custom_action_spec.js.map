{"version":3,"sources":["../../../src/spec/lib_custom_action_spec.js"],"names":["describe","it","match","expect","to","be","defined","token","equal","variable","index","undefined","null","beforeEach","throw","label","url","ca","validate","true","interpolate","alarm","OnmsAlarm","nodeId","nodeLabel","severity","Severities","NORMAL","parameters","OnmsParm","obj","blah","monkey"],"mappings":";;AAAA;;AACA;;AAEAA,SAAS,0BAAT,EAAqC,YAAM;AACzCC,KAAG,4BAAH,EAAiC,YAAM;AACrC,QAAMC,QAAQ,6BAAS,MAAT,EAAiB,KAAjB,CAAd;AACAC,WAAOD,KAAP,EAAcE,EAAd,CAAiBC,EAAjB,CAAoBC,OAApB;AACAH,WAAOD,MAAMK,KAAb,EAAoBH,EAApB,CAAuBI,KAAvB,CAA6B,MAA7B;AACAL,WAAOD,MAAMO,QAAb,EAAuBL,EAAvB,CAA0BI,KAA1B,CAAgC,KAAhC;AACAL,WAAOD,MAAMQ,KAAb,EAAoBN,EAApB,CAAuBC,EAAvB,CAA0BM,SAA1B;AACD,GAND;;AAQAV,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAMC,QAAQ,6BAAS,kBAAT,EAA6B,KAA7B,CAAd;AACAC,WAAOD,KAAP,EAAcE,EAAd,CAAiBC,EAAjB,CAAoBC,OAApB;AACAH,WAAOD,MAAMK,KAAb,EAAoBH,EAApB,CAAuBI,KAAvB,CAA6B,MAA7B;AACAL,WAAOD,MAAMO,QAAb,EAAuBL,EAAvB,CAA0BI,KAA1B,CAAgC,KAAhC;AACAL,WAAOD,MAAMQ,KAAb,EAAoBN,EAApB,CAAuBC,EAAvB,CAA0BM,SAA1B;AACD,GAND;;AAQAV,KAAG,2DAAH,EAAgE,YAAM;AACpEE,WAAO,6BAAS,iBAAT,EAA4B,KAA5B,CAAP,EAA2CC,EAA3C,CAA8CC,EAA9C,CAAiDO,IAAjD;AACD,GAFD;;AAIAX,KAAG,4DAAH,EAAiE,YAAM;AACrE,QAAMC,QAAQ,6BAAS,gBAAT,EAA2B,KAA3B,CAAd;AACAC,WAAOD,KAAP,EAAcE,EAAd,CAAiBC,EAAjB,CAAoBC,OAApB;AACAH,WAAOD,MAAMK,KAAb,EAAoBH,EAApB,CAAuBI,KAAvB,CAA6B,SAA7B;AACAL,WAAOD,MAAMO,QAAb,EAAuBL,EAAvB,CAA0BI,KAA1B,CAAgC,KAAhC;AACAL,WAAOD,MAAMQ,KAAb,EAAoBN,EAApB,CAAuBI,KAAvB,CAA6B,CAA7B;AACD,GAND;;AAQAP,KAAG,yDAAH,EAA8D,YAAM;AAClE,QAAMC,QAAQ,6BAAS,mBAAT,EAA8B,KAA9B,CAAd;AACAC,WAAOD,KAAP,EAAcE,EAAd,CAAiBC,EAAjB,CAAoBC,OAApB;AACAH,WAAOD,MAAMK,KAAb,EAAoBH,EAApB,CAAuBI,KAAvB,CAA6B,YAA7B;AACAL,WAAOD,MAAMO,QAAb,EAAuBL,EAAvB,CAA0BI,KAA1B,CAAgC,KAAhC;AACAL,WAAOD,MAAMQ,KAAb,EAAoBN,EAApB,CAAuBI,KAAvB,CAA6B,MAA7B;AACD,GAND;;AAQAP,KAAG,yCAAH,EAA8C,YAAM;AAClD,QAAMC,QAAQ,6BAAS,eAAT,EAA0B,KAA1B,CAAd;AACAC,WAAOD,KAAP,EAAcE,EAAd,CAAiBC,EAAjB,CAAoBC,OAApB;AACAH,WAAOD,MAAMK,KAAb,EAAoBH,EAApB,CAAuBI,KAAvB,CAA6B,QAA7B;AACAL,WAAOD,MAAMO,QAAb,EAAuBL,EAAvB,CAA0BI,KAA1B,CAAgC,KAAhC;AACAL,WAAOD,MAAMQ,KAAb,EAAoBN,EAApB,CAAuBC,EAAvB,CAA0BM,SAA1B;AACD,GAND;AAOD,CA5CD;;AA8CAX,SAAS,cAAT,EAAyB,YAAW;AAClC;;;;;AAKAa,aAAW,YAAW;AACpB;;;;;;;;AAQD,GATD;;AAWAb,WAAS,aAAT,EAAwB,YAAW;AACjCC,OAAG,6CAAH,EAAkD,YAAM;AACtDE,aAAO,YAAM;AAAE;AAAqB,OAApC,EAAsCC,EAAtC,CAAyCU,KAAzC;AACD,KAFD;AAGAb,OAAG,uDAAH,EAA4D,YAAM;AAChEE,aAAO,YAAM;AAAE,wCAAiB,KAAjB;AAA0B,OAAzC,EAA2CC,EAA3C,CAA8CU,KAA9C;AACD,KAFD;AAGAb,OAAG,wDAAH,EAA6D,YAAM;AACjEE,aAAO,YAAM;AAAE,wCAAiB,EAACY,OAAM,KAAP,EAAjB;AAAkC,OAAjD,EAAmDX,EAAnD,CAAsDU,KAAtD;AACD,KAFD;AAGAb,OAAG,uDAAH,EAA4D,YAAM;AAChEE,aAAO,YAAM;AAAE,wCAAiBQ,SAAjB,EAA4B,KAA5B;AAAqC,OAApD,EAAsDP,EAAtD,CAAyDU,KAAzD;AACD,KAFD;AAGAb,OAAG,wDAAH,EAA6D,YAAM;AACjEE,aAAO,YAAM;AAAE,wCAAiB,EAACa,KAAI,KAAL,EAAjB;AAAgC,OAA/C,EAAiDZ,EAAjD,CAAoDU,KAApD;AACD,KAFD;AAGAb,OAAG,uDAAH,EAA4D,YAAM;AAChE,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,KAAxB,CAAX;AACAd,aAAOc,GAAGF,KAAV,EAAiBX,EAAjB,CAAoBI,KAApB,CAA0B,KAA1B;AACAL,aAAOc,GAAGD,GAAV,EAAeZ,EAAf,CAAkBI,KAAlB,CAAwB,KAAxB;AACD,KAJD;AAKAP,OAAG,wDAAH,EAA6D,YAAM;AACjE,UAAMgB,KAAK,gCAAiB,EAACF,OAAM,KAAP,EAAaC,KAAI,KAAjB,EAAjB,CAAX;AACAb,aAAOc,GAAGF,KAAV,EAAiBX,EAAjB,CAAoBI,KAApB,CAA0B,KAA1B;AACAL,aAAOc,GAAGD,GAAV,EAAeZ,EAAf,CAAkBI,KAAlB,CAAwB,KAAxB;AACD,KAJD;AAKAP,OAAG,qBAAH,EAA0B,YAAM;AAC9B,UAAMgB,KAAK,gCAAiB,EAACF,OAAM,KAAP,EAAaC,KAAI,KAAjB,EAAjB,CAAX;AACAb,aAAO,YAAM;AACXc,WAAGF,KAAH,GAAW,KAAX;AACD,OAFD,EAEGX,EAFH,CAEMU,KAFN;AAGAX,aAAO,YAAM;AACXc,WAAGD,GAAH,GAAS,KAAT;AACD,OAFD,EAEGZ,EAFH,CAEMU,KAFN;AAGD,KARD;AASAb,OAAG,yCAAH,EAA8C,YAAM;AAClD,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,aAAxB,CAAX;AACAd,aAAOc,GAAGC,QAAH,EAAP,EAAsBd,EAAtB,CAAyBC,EAAzB,CAA4Bc,IAA5B;AACD,KAHD;AAIAlB,OAAG,4CAAH,EAAiD,YAAM;AACrD,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,aAAxB,CAAX;AACAd,aAAOc,GAAGG,WAAH,EAAP,EAAyBhB,EAAzB,CAA4BI,KAA5B,CAAkC,aAAlC;AACD,KAHD;AAIAP,OAAG,iDAAH,EAAsD,YAAM;AAC1D,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,uBAAxB,CAAX;AACA,UAAMI,QAAQ,IAAI,eAAMC,SAAV,EAAd;AACAD,YAAME,MAAN,GAAe,CAAf;AACAF,YAAMG,SAAN,GAAkB,UAAlB;AACArB,aAAOc,GAAGC,QAAH,CAAYG,KAAZ,CAAP,EAA2BjB,EAA3B,CAA8BC,EAA9B,CAAiCc,IAAjC;AACD,KAND;AAOAlB,OAAG,oDAAH,EAAyD,YAAM;AAC7D,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,uBAAxB,CAAX;AACA,UAAMI,QAAQ,IAAI,eAAMC,SAAV,EAAd;AACAD,YAAME,MAAN,GAAe,CAAf;AACAF,YAAMG,SAAN,GAAkB,UAAlB;AACArB,aAAOc,GAAGG,WAAH,CAAeC,KAAf,CAAP,EAA8BjB,EAA9B,CAAiCI,KAAjC,CAAuC,qBAAvC;AACD,KAND;AAOAP,OAAG,qDAAH,EAA0D,YAAM;AAC9D,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,sBAAxB,CAAX;AACA,UAAMI,QAAQ,IAAI,eAAMC,SAAV,EAAd;AACAD,YAAMI,QAAN,GAAiB,eAAMC,UAAN,CAAiBC,MAAlC;AACAxB,aAAOc,GAAGC,QAAH,CAAYG,KAAZ,CAAP,EAA2BjB,EAA3B,CAA8BC,EAA9B,CAAiCc,IAAjC;AACD,KALD;AAMAlB,OAAG,wDAAH,EAA6D,YAAM;AACjE,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,sBAAxB,CAAX;AACA,UAAMI,QAAQ,IAAI,eAAMC,SAAV,EAAd;AACAD,YAAMI,QAAN,GAAiB,eAAMC,UAAN,CAAiBC,MAAlC;AACAxB,aAAOc,GAAGG,WAAH,CAAeC,KAAf,CAAP,EAA8BjB,EAA9B,CAAiCI,KAAjC,CAAuC,mBAAvC;AACD,KALD;AAMAP,OAAG,gDAAH,EAAqD,YAAM;AACzD,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,2BAAxB,CAAX;AACA,UAAMI,QAAQ,IAAI,eAAMC,SAAV,EAAd;AACAD,YAAMO,UAAN,GAAmB,CAAC,IAAI,eAAMC,QAAV,CAAmB,MAAnB,EAA2B,QAA3B,EAAqC,IAArC,CAAD,CAAnB;AACA1B,aAAOc,GAAGC,QAAH,CAAYG,KAAZ,CAAP,EAA2BjB,EAA3B,CAA8BC,EAA9B,CAAiCc,IAAjC;AACD,KALD;AAMAlB,OAAG,mDAAH,EAAwD,YAAM;AAC5D,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,2BAAxB,CAAX;AACA,UAAMI,QAAQ,IAAI,eAAMC,SAAV,EAAd;AACAD,YAAMO,UAAN,GAAmB,CAAC,IAAI,eAAMC,QAAV,CAAmB,MAAnB,EAA2B,QAA3B,EAAqC,IAArC,CAAD,CAAnB;AACA1B,aAAOc,GAAGG,WAAH,CAAeC,KAAf,CAAP,EAA8BjB,EAA9B,CAAiCI,KAAjC,CAAuC,eAAvC;AACD,KALD;AAMAP,OAAG,gDAAH,EAAqD,YAAM;AACzD,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,0BAAxB,CAAX;AACA,UAAMa,MAAM;AACVC,cAAM;AACJC,kBAAQ;AADJ;AADI,OAAZ;AAKA7B,aAAOc,GAAGC,QAAH,CAAYY,GAAZ,CAAP,EAAyB1B,EAAzB,CAA4BC,EAA5B,CAA+Bc,IAA/B;AACD,KARD;AASAlB,OAAG,mDAAH,EAAwD,YAAM;AAC5D,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,0BAAxB,CAAX;AACA,UAAMa,MAAM;AACVC,cAAM;AACJC,kBAAQ;AADJ;AADI,OAAZ;AAKA7B,aAAOc,GAAGG,WAAH,CAAeU,GAAf,CAAP,EAA4B1B,EAA5B,CAA+BI,KAA/B,CAAqC,gBAArC;AACD,KARD;AASAP,OAAG,oDAAH,EAAyD,YAAM;AAC7D,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,gCAAxB,CAAX;AACA,UAAMa,MAAM,IAAI,eAAMR,SAAV,EAAZ;AACAQ,UAAIF,UAAJ,GAAiB,CACf,IAAI,eAAMC,QAAV,CAAmB,QAAnB,EAA6B,OAA7B,EAAsC,GAAtC,CADe,CAAjB;AAGA1B,aAAOc,GAAGC,QAAH,CAAYY,GAAZ,CAAP,EAAyB1B,EAAzB,CAA4BC,EAA5B,CAA+Bc,IAA/B;AACD,KAPD;AAQAlB,OAAG,uDAAH,EAA4D,YAAM;AAChE,UAAMgB,KAAK,gCAAiB,KAAjB,EAAwB,gCAAxB,CAAX;AACA,UAAMa,MAAM,IAAI,eAAMR,SAAV,EAAZ;AACAQ,UAAIF,UAAJ,GAAiB,CACf,IAAI,eAAMC,QAAV,CAAmB,QAAnB,EAA6B,OAA7B,EAAsC,GAAtC,CADe,CAAjB;AAGA1B,aAAOc,GAAGG,WAAH,CAAeU,GAAf,CAAP,EAA4B1B,EAA5B,CAA+BI,KAA/B,CAAqC,cAArC;AACD,KAPD;AAQD,GAnHD;AAqHD,CAtID","file":"lib_custom_action_spec.js","sourcesContent":["import {Model} from '../opennms';\nimport {CustomAction, getMatch} from '../lib/custom_action';\n\ndescribe('CustomAction :: getMatch', () => {\n  it('should find an exact match', () => {\n    const match = getMatch('$foo', 'foo');\n    expect(match).to.be.defined;\n    expect(match.token).to.equal('$foo');\n    expect(match.variable).to.equal('foo');\n    expect(match.index).to.be.undefined;\n  });\n\n  it('should find a substring match', () => {\n    const match = getMatch('I like $foo bar!', 'foo');\n    expect(match).to.be.defined;\n    expect(match.token).to.equal('$foo');\n    expect(match.variable).to.equal('foo');\n    expect(match.index).to.be.undefined;\n  });\n\n  it('should not find a substring match without a word boundary', () => {\n    expect(getMatch('I like $foobar!', 'foo')).to.be.null;\n  });\n\n  it('should find a match with a numerical index inside brackets', () => {\n    const match = getMatch('I like $foo[1]', 'foo');\n    expect(match).to.be.defined;\n    expect(match.token).to.equal('$foo[1]');\n    expect(match.variable).to.equal('foo');\n    expect(match.index).to.equal(1);\n  });\n\n  it('should find a match with a string index inside brackets', () => {\n    const match = getMatch('I like $foo[blah]', 'foo');\n    expect(match).to.be.defined;\n    expect(match.token).to.equal('$foo[blah]');\n    expect(match.variable).to.equal('foo');\n    expect(match.index).to.equal('blah');\n  });\n\n  it('should find a match with empty brackets', () => {\n    const match = getMatch('I like $foo[]', 'foo');\n    expect(match).to.be.defined;\n    expect(match.token).to.equal('$foo[]');\n    expect(match.variable).to.equal('foo');\n    expect(match.index).to.be.undefined;\n  });\n});\n\ndescribe('CustomAction', function() {\n  /*\n  let currentSelection;\n  let mgr;\n  */\n\n  beforeEach(function() {\n    /*\n    currentSelection = [];\n    mgr = new SelectionMgr(\n      (from, to) => _.range(from, to + 1),\n      () => {currentSelection = mgr.getSelectedRows();}\n      );\n    expect(mgr.getSelectedRows()).to.have.length(0);\n    */\n  });\n\n  describe('constructor', function() {\n    it('should fail if no label or url is specified', () => {\n      expect(() => { new CustomAction(); }).to.throw();\n    });\n    it('should fail if label is specified without url (2-arg)', () => {\n      expect(() => { new CustomAction('foo'); }).to.throw();\n    });\n    it('should fail if label is specified without url (object)', () => {\n      expect(() => { new CustomAction({label:'foo'}); }).to.throw();\n    });\n    it('should fail if url is specified without label (2-arg)', () => {\n      expect(() => { new CustomAction(undefined, 'foo'); }).to.throw();\n    });\n    it('should fail if url is specified without label (object)', () => {\n      expect(() => { new CustomAction({url:'foo'}); }).to.throw();\n    });\n    it('should have readable url and label properties (2-arg)', () => {\n      const ca = new CustomAction('foo', 'bar');\n      expect(ca.label).to.equal('foo');\n      expect(ca.url).to.equal('bar');\n    });\n    it('should have readable url and label properties (object)', () => {\n      const ca = new CustomAction({label:'foo',url:'bar'});\n      expect(ca.label).to.equal('foo');\n      expect(ca.url).to.equal('bar');\n    });\n    it('should be read-only', () => {\n      const ca = new CustomAction({label:'foo',url:'bar'});\n      expect(() => {\n        ca.label = 'baz';\n      }).to.throw();\n      expect(() => {\n        ca.url = 'baz';\n      }).to.throw();\n    });\n    it('should validate a url with no variables', () => {\n      const ca = new CustomAction('foo', 'http://bar/');\n      expect(ca.validate()).to.be.true;\n    });\n    it('should interpolate a url with no variables', () => {\n      const ca = new CustomAction('foo', 'http://bar/');\n      expect(ca.interpolate()).to.equal('http://bar/');\n    });\n    it('should validate a url with a nodeLabel variable', () => {\n      const ca = new CustomAction('foo', 'http://bar/$nodeLabel');\n      const alarm = new Model.OnmsAlarm();\n      alarm.nodeId = 5;\n      alarm.nodeLabel = 'theLabel';\n      expect(ca.validate(alarm)).to.be.true;\n    });\n    it('should interpolate a url with a nodeLabel variable', () => {\n      const ca = new CustomAction('foo', 'http://bar/$nodeLabel');\n      const alarm = new Model.OnmsAlarm();\n      alarm.nodeId = 5;\n      alarm.nodeLabel = 'theLabel';\n      expect(ca.interpolate(alarm)).to.equal('http://bar/theLabel');\n    });\n    it('should validate a variable that refers to an object', () => {\n      const ca = new CustomAction('foo', 'http://bar/$severity');\n      const alarm = new Model.OnmsAlarm();\n      alarm.severity = Model.Severities.NORMAL;\n      expect(ca.validate(alarm)).to.be.true;\n    });\n    it('should interpolate a variable that refers to an object', () => {\n      const ca = new CustomAction('foo', 'http://bar/$severity');\n      const alarm = new Model.OnmsAlarm();\n      alarm.severity = Model.Severities.NORMAL;\n      expect(ca.interpolate(alarm)).to.equal('http://bar/NORMAL');\n    });\n    it('should validate a variable with a number index', () => {\n      const ca = new CustomAction('foo', 'http://bar/$parameters[0]');\n      const alarm = new Model.OnmsAlarm();\n      alarm.parameters = [new Model.OnmsParm('blah', 'string', 'yo')];\n      expect(ca.validate(alarm)).to.be.true;\n    });\n    it('should interpolate a variable with a number index', () => {\n      const ca = new CustomAction('foo', 'http://bar/$parameters[0]');\n      const alarm = new Model.OnmsAlarm();\n      alarm.parameters = [new Model.OnmsParm('blah', 'string', 'yo')];\n      expect(ca.interpolate(alarm)).to.equal('http://bar/yo');\n    });\n    it('should validate a variable with a string index', () => {\n      const ca = new CustomAction('foo', 'http://bar/$blah[monkey]');\n      const obj = {\n        blah: {\n          monkey: 'see'\n        }\n      };\n      expect(ca.validate(obj)).to.be.true;\n    });\n    it('should interpolate a variable with a string index', () => {\n      const ca = new CustomAction('foo', 'http://bar/$blah[monkey]');\n      const obj = {\n        blah: {\n          monkey: 'see'\n        }\n      };\n      expect(ca.interpolate(obj)).to.equal('http://bar/see');\n    });\n    it('should validate a variable with a named event parm', () => {\n      const ca = new CustomAction('foo', 'http://bar/$parameters[monkey]');\n      const obj = new Model.OnmsAlarm();\n      obj.parameters = [\n        new Model.OnmsParm('monkey', 'Int32', '6')\n      ];\n      expect(ca.validate(obj)).to.be.true;\n    });\n    it('should interpolate a variable with a named event parm', () => {\n      const ca = new CustomAction('foo', 'http://bar/$parameters[monkey]');\n      const obj = new Model.OnmsAlarm();\n      obj.parameters = [\n        new Model.OnmsParm('monkey', 'Int32', '6')\n      ];\n      expect(ca.interpolate(obj)).to.equal('http://bar/6');\n    });\n  });\n\n});\n"]}