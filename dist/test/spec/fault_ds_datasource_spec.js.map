{"version":3,"sources":["../../../src/spec/fault_ds_datasource_spec.js"],"names":["describe","uiSegmentSrv","newSegment","value","type","newKey","key","newOperator","operator","newFake","text","cssClass","segment","fake","newPlusButton","newKeyValue","newCondition","condition","mapping","ComparatorMapping","it","done","expect","getUiComparator","Comparators","EQ","to","eql","NE","GE","LE","GT","LT","NULL","throw","label","NOTNULL","LIKE","ILIKE","getApiComparator","NEQ","OperatorMapping","getUiOperator","Operators","AND","OR","getApiOperator","RestrictionMapping","getUiRestriction","Restriction","RestrictionDTO","nestedRestriction","NestedRestriction","withOrRestriction","actualUiQuery","expectedUiQuery","Query","addClause","Clause","ClauseMapping","clause","getApiClause","FilterMapping","apiFilter","Filter","limit","getApiFilter","withClause","uiFilter","getUiFilter","serialized","JSON","stringify","deserialized","parse","cloned","cloneFilter","getQueryString","otherFilter","jsonString","object","not","be","an","instanceof","filterObject","restriction","asRestrictionDTO","setAttribute","KEY_PLACEHOLDER","setComparator","setValue","VALUE_PLACEHOLDER","Object","keys","forEach","query","beforeEach","clauses","length","createNewEmptyClause","createNewEmptyNestedClause","control","Controls","AddControl","filter","newClause","action","RemoveControl","each","newQuery","AddNestedControl","have","lengthOf","segments","removeClause","root","clear","expected","verifyNoControls","controls","verifyFullControls","verifyControls","index","updateControls","ctx","backendSrv","$q","settings","name","url","datasourceRequest","request","when","_request","status","headers","data","delegate","getClientWithMetadata","then","metadata","OnmsResult","ok","catch","err","message","defaultSettings","createDatasource","datasource","templateSrv","contextSrv","replace","scopedVars","user","login","email","range_from","range_to","add","undefined","assign","jsonData","useGrafanaUser","grafanaUserField","equal","options","substituedFilter","buildQuery","targets","range","from","actualFilter","enforceTimeRange"],"mappings":"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","file":"fault_ds_datasource_spec.js","sourcesContent":["import Q from \"q\";\nimport _ from 'lodash';\nimport moment from 'moment';\nimport {UI} from '../datasources/fault-ds/UI';\nimport {API} from '../opennms';\nimport {Mapping} from '../datasources/fault-ds/Mapping';\nimport {FilterCloner} from '../datasources/fault-ds/FilterCloner';\nimport {OpenNMSFMDatasource as Datasource} from '../datasources/fault-ds/datasource'\nimport {ClientDelegate} from '../lib/client_delegate';\n\ndescribe(\"OpenNMS_FaultManagement_Datasource\", function() {\n    let uiSegmentSrv = {\n        newSegment: function (value, type) {\n            return {value: value, type: type};\n        },\n        newKey: function (key) {\n            return this.newSegment(key, 'key');\n        },\n        newOperator: function (operator) {\n            return this.newSegment(operator, 'operator');\n        },\n        newFake: function (text, type, cssClass) {\n            let segment = this.newSegment(text, type);\n            segment.fake = true;\n            return segment;\n        },\n        newPlusButton: function () {\n            return this.newFake('', 'plus-button');\n        },\n        newKeyValue: function (value) {\n            return this.newSegment(value, 'value');\n        },\n        newCondition: function (condition) {\n            return this.newSegment(condition, 'condition');\n        }\n    };\n\n    describe('Mapping', function () {\n        describe('ComparatorMapping', function () {\n            let mapping = new Mapping.ComparatorMapping();\n\n            it(\"should map from api to ui comparator\", function (done) {\n                expect(mapping.getUiComparator(API.Comparators.EQ)).to.eql(\"=\");\n                expect(mapping.getUiComparator(API.Comparators.NE)).to.eql(\"!=\");\n                expect(mapping.getUiComparator(API.Comparators.GE)).to.eql(\">=\");\n                expect(mapping.getUiComparator(API.Comparators.LE)).to.eql(\"<=\");\n                expect(mapping.getUiComparator(API.Comparators.GT)).to.eql(\">\");\n                expect(mapping.getUiComparator(API.Comparators.LT)).to.eql(\"<\");\n\n                done();\n            });\n\n            it(\"should NOT map from api to ui comparator\", function(done) {\n                expect(() => mapping.getUiComparator(API.Comparators.NULL)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.NULL.label + \"'.\");\n                expect(() => mapping.getUiComparator(API.Comparators.NOTNULL)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.NOTNULL.label + \"'.\");\n                expect(() => mapping.getUiComparator(API.Comparators.LIKE)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.LIKE.label + \"'.\");\n                expect(() => mapping.getUiComparator(API.Comparators.ILIKE)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.ILIKE.label + \"'.\");\n\n                done();\n            });\n\n            it(\"should map from ui to api comparator\", function (done) {\n                expect(mapping.getApiComparator(UI.Comparators.EQ)).to.eql(API.Comparators.EQ);\n                expect(mapping.getApiComparator(UI.Comparators.NEQ)).to.eql(API.Comparators.NE);\n                expect(mapping.getApiComparator(UI.Comparators.GE)).to.eql(API.Comparators.GE);\n                expect(mapping.getApiComparator(UI.Comparators.LE)).to.eql(API.Comparators.LE);\n                expect(mapping.getApiComparator(UI.Comparators.GT)).to.eql(API.Comparators.GT);\n                expect(mapping.getApiComparator(UI.Comparators.LT)).to.eql(API.Comparators.LT);\n\n                done();\n            });\n        });\n\n        describe('OperatorMapping', function () {\n            let mapping = new Mapping.OperatorMapping();\n\n            it(\"should map from api to ui operator\", function (done) {\n                expect(mapping.getUiOperator(API.Operators.AND)).to.eql(\"AND\");\n                expect(mapping.getUiOperator(API.Operators.OR)).to.eql(\"OR\");\n\n                done();\n            });\n\n            it(\"should map from ui to api operator\", function(done) {\n                expect(mapping.getApiOperator(UI.Operators.AND)).to.eql(API.Operators.AND);\n                expect(mapping.getApiOperator(UI.Operators.OR)).to.eql(API.Operators.OR);\n\n                done();\n            })\n        });\n\n        describe('RestrictionMapping', function () {\n            let mapping = new Mapping.RestrictionMapping(uiSegmentSrv);\n\n            it(\"should map from api restriction\", function (done) {\n                expect(mapping.getUiRestriction(new API.Restriction(\"my-property\", API.Comparators.LE, 'some-value')))\n                    .to.eql(new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO('my-property', '<=', 'some-value')));\n                done();\n            });\n\n            it(\"should map from api nested restriction\", function (done) {\n                const nestedRestriction = new API.NestedRestriction()\n                    .withOrRestriction(new API.Restriction(\"my-property\", API.Comparators.LE, 'some-value'))\n                    .withOrRestriction(new API.Restriction(\"my-property\", API.Comparators.GE, 'some-other-value'));\n\n                const actualUiQuery = mapping.getUiRestriction(nestedRestriction);\n\n                const expectedUiQuery = new UI.Query(uiSegmentSrv);\n                expectedUiQuery.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"my-property\", \"<=\", \"some-value\"))));\n                expectedUiQuery.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"my-property\", \">=\", \"some-other-value\"))));\n\n                expect(actualUiQuery).to.eql(expectedUiQuery);\n\n                done();\n            });\n\n        });\n\n        describe('ClauseMapping', function() {\n            let mapping = new Mapping.ClauseMapping(uiSegmentSrv);\n\n           it ('should ignore not initialized clauses (restrictionDTO is null)', function(done) {\n\n               let clause = new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(this.uiSegmentSrv));\n               expect(mapping.getApiClause(clause)).to.eql(null);\n\n               done();\n           }) ;\n        });\n\n        describe('FilterMapping', function() {\n\n            let mapping = new Mapping.FilterMapping(uiSegmentSrv);\n\n            it ('should map from empty ui to api filter', function(done) {\n                let apiFilter = new API.Filter();\n                apiFilter.limit = 0;\n                expect(mapping.getApiFilter(new UI.Filter(uiSegmentSrv))).to.eql(apiFilter);\n\n                done();\n            });\n\n            it ('should map from api to ui filter and vice versa', function(done) {\n                const apiFilter = new API.Filter()\n                    .withClause(new API.Clause(new API.Restriction(\"key\", API.Comparators.EQ, \"value\"), API.Operators.OR))\n                    .withClause(new API.Clause(new API.Restriction(\"key2\", API.Comparators.NE, \"value2\"), API.Operators.AND));\n                apiFilter.limit = 0;\n\n                const uiFilter = new UI.Filter(uiSegmentSrv)\n                    .withClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.RestrictionDTO(\"key\", \"=\", \"value\")))\n                    .withClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"key2\", \"!=\", \"value2\")));\n\n                expect(mapping.getUiFilter(apiFilter)).to.eql(uiFilter);\n                expect(mapping.getApiFilter(uiFilter)).to.eql(apiFilter);\n\n                done();\n            });\n\n            it('should map from api to ui filter with nested restrictions when serialized and deserialized again', () => {\n                // Create the filter\n                const apiFilter = new API.Filter()\n                    .withClause(new API.Clause(new API.Restriction(\"alarmAckUser\", API.Comparators.EQ, \"Administrator\"), API.Operators.AND))\n                    .withClause(new API.Clause(\n                        new API.NestedRestriction()\n                            .withClause(new API.Clause(new API.Restriction(\"severity\", API.Comparators.GE, \"WARNING\"), API.Operators.AND)),\n                        API.Operators.AND));\n\n                // Simulate persisting and reloading\n                const serialized = JSON.stringify(apiFilter);\n                const deserialized = JSON.parse(serialized);\n                const cloned = new FilterCloner().cloneFilter(deserialized);\n\n                // Now try to map it to an ui filter\n                const uiFilter = mapping.getUiFilter(cloned);\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where alarmAckUser = 'Administrator' and (severity >= 'WARNING')\");\n            });\n        });\n\n    });\n\n    describe('FilterCloner', function() {\n\n        let apiFilter = new API.Filter()\n            .withClause(new API.Clause(new API.Restriction('key', API.Comparators.EQ, 'value'), API.Operators.AND))\n            .withClause(new API.Clause(new API.Restriction('key2', API.Comparators.EQ, 'value2'), API.Operators.AND))\n            .withClause(new API.Clause(new API.NestedRestriction()\n                .withClause(new API.Clause(new API.Restriction(\"key3\", API.Comparators.NE, \"value3\"), API.Operators.OR)), API.Operators.AND));\n\n        it('should clone already initialized', function(done) {\n            const otherFilter = new FilterCloner().cloneFilter(apiFilter);\n            expect(apiFilter).to.eql(otherFilter);\n\n            done();\n        });\n\n        it('should clone', function(done) {\n            const jsonString = JSON.stringify(apiFilter);\n            const object = JSON.parse(jsonString);\n            expect(object).not.to.be.an.instanceof(API.Filter);\n\n            const filterObject = new FilterCloner().cloneFilter(object);\n            expect(filterObject).to.be.an.instanceof(API.Filter);\n            expect(apiFilter).to.eql(filterObject);\n\n            done();\n        });\n\n\n    });\n\n    describe(\"UI.Restriction\", function() {\n        // See HELM-25\n        it('should only convert to DTO when fully defined', () => {\n            // Should be null when not initialized\n            const restriction = new UI.Restriction(uiSegmentSrv);\n            expect(restriction.asRestrictionDTO()).to.eql(null);\n\n            // Should be null when initialized with defaults\n            restriction.setAttribute(UI.Restriction.KEY_PLACEHOLDER);\n            restriction.setComparator(\"=\");\n            restriction.setValue(UI.Restriction.VALUE_PLACEHOLDER);\n\n            // Should be null for all other Comparators\n            Object.keys(UI.Comparators).forEach(key => {\n                restriction.setComparator(UI.Comparators[key]);\n                expect(restriction.asRestrictionDTO()).to.eql(null);\n            });\n\n            // Should be null if value is set\n            restriction.setValue(\"my value\");\n            expect(restriction.asRestrictionDTO()).to.eql(null);\n\n            // Should be null if attribute is set\n            restriction.setValue(UI.Restriction.VALUE_PLACEHOLDER);\n            restriction.setAttribute(\"my attribute\");\n            expect(restriction.asRestrictionDTO()).to.eql(null);\n\n            // should not be null if attribute and value is set\n            restriction.setAttribute(\"my attribute\");\n            restriction.setComparator(\"=\");\n            restriction.setValue(\"my value\");\n            expect(restriction.asRestrictionDTO()).not.to.eql(null);\n            expect(restriction.asRestrictionDTO()).to.eql(new UI.RestrictionDTO(\"my attribute\", \"=\", \"my value\"))\n        });\n    });\n\n    describe(\"UI.Query\", function() {\n        let query;\n\n        beforeEach(function () {\n            query = new UI.Filter(uiSegmentSrv).query;\n        });\n\n        it('should add new empty clause', function(done) {\n            expect(query.clauses.length).to.eql(0);\n            query.createNewEmptyClause();\n            expect(query.clauses.length).to.eql(1);\n\n            done();\n        });\n\n        it('should add new empty nested clause', function(done) {\n\n            expect(query.clauses.length).to.eql(0);\n            query.createNewEmptyNestedClause();\n            expect(query.clauses.length).to.eql(1);\n\n            expect(query.clauses[0].restriction.clauses.length).to.eql(1);\n\n            done();\n        });\n    });\n\n    describe(\"UI.Controls\", function() {\n\n        let uiFilter;\n\n        beforeEach(function() {\n            uiFilter = new UI.Filter(uiSegmentSrv);\n        });\n\n        describe('AddControl', function() {\n            let control = new UI.Controls.AddControl();\n\n            describe(\"filter\", function() {\n                it('always show, except for nested controls', function(done) {\n                    expect(control.filter(uiFilter.query, new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(uiSegmentSrv)))).to.eql(true);\n\n                    expect(control.filter(uiFilter.query, new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Query(uiSegmentSrv)))).to.eql(false);\n\n                    done();\n                })\n            });\n\n            describe(\"action\", function() {\n\n              it ('should add new empty clause', function(done) {\n                  const newClause = uiFilter.query.createNewEmptyClause();\n                  expect(uiFilter.query.clauses.length).to.eql(1);\n\n                  control.action(uiFilter.query, newClause);\n                  expect(uiFilter.query.clauses.length).to.eql(2);\n\n                  done();\n              });\n            });\n\n        });\n\n        describe('RemoveControl', function() {\n\n            let control = new UI.Controls.RemoveControl();\n\n            describe(\"filter\", function() {\n                it('do not show on first empty clause', function(done) {\n                    uiFilter.query.createNewEmptyClause();\n\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[0])).to.eql(false);\n\n                    done();\n                });\n\n                it('show on nested and children of nested clause', function(done) {\n\n                    uiFilter.query.createNewEmptyNestedClause();\n\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[0])).to.eql(false); // no control on nested clause\n                    expect(control.filter(uiFilter.query.clauses[0].restriction, uiFilter.query.clauses[0].restriction.clauses[0])).to.eql(true); // control on clause\n\n                    done();\n                });\n\n                it('show on other clauses', function(done) {\n                    uiFilter.query.createNewEmptyClause();\n                    uiFilter.query.createNewEmptyClause();\n\n                    _.each(uiFilter.query.clauses, clause => {\n                        expect(control.filter(uiFilter.query, clause)).to.eql(true);\n                    });\n\n                    done();\n                });\n            });\n\n\n            describe(\"action\", function() {\n                it ('should remove clause', function(done) {\n                    // add dummy clause\n                    uiFilter.query.createNewEmptyClause();\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n\n                    // perform action\n                    control.action(uiFilter.query, uiFilter.query.clauses[0]);\n\n                    // verify it was removed\n                    expect(uiFilter.query.clauses.length).to.eql(0);\n\n                    done();\n                });\n\n                it ('should remove query from parent clause if last clause was removed', function(done) {\n                    // dummy clause added yet\n                    uiFilter.query.createNewEmptyClause();\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n\n                    // add nested clause\n                    const newQuery = uiFilter.query.createNewEmptyNestedClause();\n                    expect(uiFilter.query.clauses.length).to.eql(2);\n                    expect(newQuery.clauses.length).to.eql(1);\n\n                    // perform action ...\n                    control.action(newQuery, newQuery.clauses[0]);\n\n                    // ... and verify that it was removed\n                    expect(newQuery.clauses.length).to.eql(0);\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n\n                    done();\n                });\n            });\n\n        });\n\n        describe('NestedControl', function() {\n            let control = new UI.Controls.AddNestedControl();\n\n            describe(\"filter\", function() {\n                it('show on all 1st level clauses, except nested clause', function(done) {\n                    uiFilter.query.createNewEmptyClause();\n                    uiFilter.query.createNewEmptyClause();\n                    uiFilter.query.createNewEmptyClause();\n\n                    _.each(uiFilter.query.clauses, clause => {\n                        expect(control.filter(uiFilter.query, clause)).to.eql(true);\n                    });\n\n                    // Try nested\n                    uiFilter.query.createNewEmptyNestedClause();\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[3])).to.eql(false);\n\n                    done();\n                });\n\n                it('do not show on 2nd level clauses ', function(done) {\n                    uiFilter.query.createNewEmptyNestedClause();\n                    uiFilter.query.createNewEmptyClause();\n\n                    const newQuery = uiFilter.query.clauses[0].restriction;\n                    newQuery.createNewEmptyClause();\n                    newQuery.createNewEmptyClause();\n                    newQuery.createNewEmptyClause();\n\n                    // verify 2nd level\n                    _.each(newQuery.clauses, clause => {\n                        expect(control.filter(newQuery, clause)).to.eql(false);\n                    });\n\n                    // verify 1st level\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[0])).to.eql(false);\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[1])).to.eql(true);\n\n\n                    done();\n                })\n            });\n        });\n    });\n\n    describe('UI.Filter', function () {\n        let uiFilter;\n\n        beforeEach(function () {\n            uiFilter = new UI.Filter(uiSegmentSrv);\n        });\n\n        describe('addClause', function () {\n            it('should allow adding a single restriction', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"severity\", UI.Comparators.EQ, 'CLEARED')));\n                expect(uiFilter.query.clauses).to.have.lengthOf(1);\n                expect(uiFilter.query.clauses[0].restriction.segments).to.have.lengthOf(3);\n                expect(uiFilter.query.clauses[0].restriction.segments[0].value).to.eql('severity');\n                expect(uiFilter.query.clauses[0].restriction.segments[1].value).to.eql(\"=\");\n                expect(uiFilter.query.clauses[0].restriction.segments[2].value).to.eql('CLEARED');\n                expect(uiFilter.query.clauses[0].operator.value).to.eql(\"AND\");\n\n                done();\n            });\n\n            it('should fail when unsupported type', function (done) {\n\n                expect(() => uiFilter.addClause(\"string\")).to.throw(\"Clause type is not supported\");\n\n                done();\n            })\n        });\n\n        describe('removeClause', function() {\n            const clause = new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"key\", \"=\", \"value\"));\n\n            it(\"should not remove non existing clause\", function(done) {\n                expect(uiFilter.query.clauses).to.have.lengthOf(0);\n                uiFilter.withClause(clause);\n                uiFilter.removeClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"x\", \"=\", \"0\")));\n                expect(uiFilter.query.clauses).to.have.lengthOf(1);\n\n                done();\n            });\n\n            it(\"should remove existing clause\", function(done) {\n                expect(uiFilter.query.clauses).to.have.lengthOf(0);\n                uiFilter.withClause(clause);\n                expect(uiFilter.query.clauses).to.have.lengthOf(1);\n                uiFilter.removeClause(clause);\n                expect(uiFilter.query.clauses).to.have.lengthOf(0);\n\n                done();\n            });\n        });\n\n        describe('clear', function () {\n            it('should reset query', function (done) {\n                uiFilter.query.root = false; // make it pass\n                expect(uiFilter.query).to.eql(new UI.Query(uiSegmentSrv));\n\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"key\", \"=\", \"value\")));\n                expect(uiFilter.query).not.to.eql(new UI.Query(uiSegmentSrv));\n\n                uiFilter.clear();\n                expect(uiFilter.query).to.eql(new UI.Query(uiSegmentSrv));\n\n                done();\n            });\n        });\n\n        describe('getQueryString', function () {\n            it('should work with empty clause', function (done) {\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms\");\n                done();\n            });\n\n            it('should work with single clause', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MINOR')));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where severity = 'MINOR'\");\n                done();\n            });\n\n            it('should not include not initialized clauses (restrictionDTO is not fully initialized)', function(done) {\n                const expected = \"select all alarms where severity >= 'WARNING'\";\n\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.RestrictionDTO(\"severity\", UI.Comparators.GE, 'WARNING')));\n                expect(uiFilter.getQueryString()).to.eql(expected);\n\n                // It does not have any attribute, comparator or value data (valid state), but should not be considered when generating the string\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.Restriction(uiSegmentSrv)));\n                expect(uiFilter.getQueryString()).to.eql(expected);\n\n                done();\n            });\n\n\n            it('should handle null values', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"location\", UI.Comparators.EQ, \"null\")));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where location is null\");\n\n                uiFilter.clear();\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"location\", UI.Comparators.NEQ, \"null\")));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where location is not null\");\n\n                done();\n            });\n\n            it('should work with multiple clauses', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MINOR')));\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MAJOR')));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where severity = 'MINOR' or severity = 'MAJOR'\");\n\n                uiFilter.clear();\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MINOR')));\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MAJOR')));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where severity = 'MINOR' and severity = 'MAJOR'\");\n\n                done();\n            });\n\n            it('should work with nested clauses', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('location', UI.Comparators.EQ, 'Stuttgart')));\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.LE, 'MAJOR'), API.Operators.AND)), API.Operators.OR));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where location = 'Stuttgart' or (severity >= 'WARNING' and severity <= 'MAJOR')\");\n\n\n                // let's try the other way around\n                uiFilter.clear();\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.LE, 'MAJOR'), API.Operators.AND)), API.Operators.OR));\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('location', UI.Comparators.EQ, 'Stuttgart')));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (severity >= 'WARNING' and severity <= 'MAJOR') and location = 'Stuttgart'\");\n\n                // let's try 2 nested restrictions\n                uiFilter.clear();\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('location', API.Comparators.EQ, 'Stuttgart'), API.Operators.OR))\n                    .withClause(new API.Clause(new API.Restriction('location', API.Comparators.EQ, 'Fulda'), API.Operators.OR)), API.Operators.AND)\n                );\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.LE, 'MAJOR'), API.Operators.AND)), API.Operators.AND)\n                );\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (location = 'Stuttgart' or location = 'Fulda') and (severity >= 'WARNING' and severity <= 'MAJOR')\");\n\n                done();\n            });\n\n            it('should handle deep nested clauses', function (done) {\n                const nestedRestriction = new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction(\"severity\", API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction(\"severity\", API.Comparators.LE, 'MAJOR'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.NestedRestriction()\n                        .withClause(new API.Clause(new API.Restriction(\"location\", API.Comparators.EQ, \"Fulda\"), API.Operators.OR)), API.Operators.OR), API.Operators.OR);\n\n                uiFilter.addClause(new API.Clause(nestedRestriction, API.Operators.OR));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (severity >= 'WARNING' and severity <= 'MAJOR' or (location = 'Fulda'))\");\n\n                done();\n            });\n\n            it('should render real nested clauses correctly', function(done) {\n                // Dummy clause should not influence the query\n                uiFilter.query.createNewEmptyNestedClause();\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms\");\n\n                // update the values\n                const query = uiFilter.query.clauses[0].restriction;\n                query.clauses[0].restriction.setAttribute(\"key\");\n                query.clauses[0].restriction.setComparator(\"=\");\n                query.clauses[0].restriction.setValue(\"value\");\n\n                // should now be influenced\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (key = 'value')\");\n\n                done();\n            });\n        });\n\n        describe(\"updateControls\", function() {\n\n            const verifyNoControls = function(query) {\n                _.each(query.clauses, clause => {\n                    expect(clause.controls.length).to.eql(0);\n                });\n            };\n\n            const verifyFullControls = function(clause) {\n                verifyControls(clause, [UI.Controls.RemoveControl, UI.Controls.AddControl, UI.Controls.AddNestedControl]);\n            };\n\n            const verifyControls = function(clause, controls = []) {\n                expect(clause.controls.length).to.eql(controls.length); // add, add nested and remove\n                if (controls.length > 0) {\n                    _.each(controls, (control, index) => {\n                       expect(clause.controls[index]).to.be.an.instanceof(control)\n                    });\n                }\n            };\n\n            it ('should create controls for add and add nested', function(done) {\n                verifyNoControls(uiFilter.query);\n                expect(uiFilter.query.clauses.length).to.eql(0);\n\n                // Update controls\n                uiFilter.updateControls();\n                expect(uiFilter.query.clauses.length).to.eql(1); // dummy row\n\n                // now the controls should be there\n                _.each(uiFilter.query.clauses, clause => {\n                    verifyControls(clause, [UI.Controls.AddControl, UI.Controls.AddNestedControl]);\n                });\n\n                done();\n            });\n\n            it ('should create controls for add, add nested and remove', function(done) {\n                verifyNoControls(uiFilter.query);\n\n                uiFilter.query.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"key\", \"=\", \"value\"))));\n                uiFilter.updateControls();\n\n                expect(uiFilter.query.clauses.length).to.eql(1);\n                _.each(uiFilter.query.clauses, clause => {\n                    verifyFullControls(clause);\n                });\n\n                done();\n\n            });\n\n            it ('should not add nested controls on level 2', function(done) {\n                verifyNoControls(uiFilter.query);\n\n                uiFilter.query.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"key\", \"=\", \"value\"))));\n                uiFilter.query.createNewEmptyNestedClause();\n                uiFilter.updateControls();\n\n                expect(uiFilter.query.clauses.length).to.eql(2);\n                expect(uiFilter.query.clauses[1].restriction.clauses.length).to.eql(1);\n                verifyFullControls(uiFilter.query.clauses[0]); // all controls on simple clause\n                verifyControls(uiFilter.query.clauses[1], [ ]); // no controls on nested clause\n                verifyControls(uiFilter.query.clauses[1].restriction.clauses[0], [ UI.Controls.RemoveControl, UI.Controls.AddControl ]); // limited controls on clause of nested clause\n\n                done();\n            });\n        })\n    });\n\n    describe('ClientDelegate', () => {\n       let ctx = {};\n\n       beforeEach(() => {\n            ctx.backendSrv = {};\n            ctx.$q = Q;\n            ctx.settings = {\n                type: \"opennms-fm\",\n                name: \"dummy-name\",\n                url: \"http://localhost:8980/opennms\"\n            }\n       });\n\n       it('should not throw an exception when supported version is used', (done) => {\n           // All requests assume the /rest/info call\n           ctx.backendSrv.datasourceRequest = function(request) {\n               return ctx.$q.when({\n                   _request: request,\n                   status: 200,\n                   headers: {\n                       'content-type': 'application/json'\n                   },\n                   data: {'packageDescription':'OpenNMS Meridian','displayVersion':'2017.1.0','packageName':'meridian','version':'2017.1.0'}\n               });\n           };\n\n           // Instantiate and try to do any operation on the delegate\n           const delegate = new ClientDelegate(ctx.settings, ctx.backendSrv, ctx.$q);\n           delegate.getClientWithMetadata().then((metadata) => {\n               done();\n           });\n       });\n\n       it('should throw exception when unsupported version is used', (done) => {\n           // All requests assume the /rest/info call\n           ctx.backendSrv.datasourceRequest = function(request) {\n               return ctx.$q.when({\n                    _request: request,\n                   status: 200,\n                   headers: {\n                        'content-type': 'application/json'\n                   },\n                   data: API.OnmsResult.ok({'packageDescription':'OpenNMS','displayVersion':'19.1.0','packageName':'opennms','version':'19.1.0'})\n                });\n           };\n\n           // Instantiate and try to do any operation on the delegate\n           const delegate = new ClientDelegate(ctx.settings, ctx.backendSrv, ctx.$q);\n           delegate.getClientWithMetadata().catch(err => {\n               expect(err.message).to.eql(\"Unsupported Version\");\n               done();\n           });\n       });\n    });\n\n    describe('Datasource', () => {\n        let ctx = {};\n\n        const defaultSettings = {\n            \"type\": \"opennms-fm\",\n            \"url\": \"http://localhost:8980/opennms\",\n            \"name\": \"OpenNMS FM Datasource\"\n        };\n\n        const createDatasource = function(settings, ctx) {\n            ctx.datasource = new Datasource(settings, ctx.$q, ctx.backendSrv, ctx.templateSrv, ctx.contextSrv);\n            return ctx.datasource;\n        };\n\n        beforeEach(() => {\n            // Context initialization\n            ctx.$q = Q;\n            ctx.backendSrv = {};\n            ctx.templateSrv = {replace: (value, scopedVars) => value};\n            ctx.uiSegmentSrv = uiSegmentSrv;\n            ctx.contextSrv = {user: {login: \"admin\", email: \"admin@opennms.org\", name:\"The Administrator\"}};\n            ctx.range_from = moment();\n            ctx.range_to = ctx.range_from.add(1, 'days');\n            createDatasource(defaultSettings, ctx);\n        });\n\n        describe('user field', () => {\n           it('should not be instantiated by default', () => {\n               expect(ctx.datasource.user).to.be.undefined;\n           });\n\n           it('should be ignored if useGrafanaUser is false', () => {\n               const settings = Object.assign({}, defaultSettings);\n               settings.jsonData = {\n                   useGrafanaUser: false,\n                   grafanaUserField: 'email'\n               };\n               expect(createDatasource(settings, ctx).user).to.be.undefined;\n           });\n\n           it('should be login if undefined', () => {\n                const settings = Object.assign({}, defaultSettings);\n                settings.jsonData = {\n                   useGrafanaUser: true,\n                };\n                expect(createDatasource(settings, ctx).user).to.equal(\"admin\");\n           });\n\n           it('should be login if defined', () => {\n               const settings = Object.assign({}, defaultSettings);\n               settings.jsonData = {\n                   useGrafanaUser: true,\n                   grafanaUserField: 'login'\n               };\n               expect(createDatasource(settings, ctx).user).to.equal(\"admin\");\n           });\n\n           it('should be email if defined', () => {\n               const settings = Object.assign({}, defaultSettings);\n               settings.jsonData = {\n                   useGrafanaUser: true,\n                   grafanaUserField: 'email'\n               };\n               expect(createDatasource(settings, ctx).user).to.equal(\"admin@opennms.org\");\n           });\n\n           it('should be name if defined', () => {\n               const settings = Object.assign({}, defaultSettings);\n               settings.jsonData = {\n                   useGrafanaUser: true,\n                   grafanaUserField: 'name'\n               };\n               expect(createDatasource(settings, ctx).user).to.equal(\"The Administrator\");\n           });\n\n           it('should fall back to login if field does not exist', () => {\n               delete ctx.contextSrv.user.email;\n               const settings = Object.assign({}, defaultSettings);\n               settings.jsonData = {\n                   useGrafanaUser: true,\n                   grafanaUserField: 'email'\n               };\n               expect(createDatasource(settings, ctx).user).to.equal(\"admin\");\n           });\n        });\n\n        describe('buildQuery', () => {\n            it('should substitute scoped variables', () => {\n                // Mock the replace function\n                ctx.templateSrv.replace = (value, scopedVars) => {\n                    return value.replace(/\\$variable1/g, scopedVars['variable1'].value)\n                        .replace(/\\[\\[variable1\\]\\]/g, scopedVars['variable1'].value);\n                };\n\n                // The filter with variables\n                const filter = new API.Filter()\n                    .withClause(new API.Clause(new API.Restriction(\"key\", API.Comparators.EQ, \"$variable1\"), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction(\"key2\", API.Comparators.EQ, \"Hello this is my [[variable1]]\"), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction(\"key3\", API.Comparators.EQ, \"value3\"), API.Operators.AND));\n\n                // The scoped variables\n                const options = {\n                    scopedVars: {\n                        \"variable1\": {value: \"dummy-value\"}\n                    }\n                };\n\n                const substituedFilter = ctx.datasource.buildQuery(filter, options);\n\n                // Verify\n                expect(substituedFilter.clauses[0].restriction.value).to.equal(\"dummy-value\");\n                expect(substituedFilter.clauses[1].restriction.value).to.equal(\"Hello this is my dummy-value\");\n                expect(substituedFilter.clauses[2].restriction.value).to.equal(\"value3\");\n            });\n\n            it('should substitude $range_from and $range_to accordingly', () => {\n                // Options\n                const options = {\n                    targets: [filter],\n                    range: {\n                        from: ctx.range_from,\n                        to: ctx.range_to,\n                    },\n                    scopedVars: {}\n                };\n\n                // The input filter\n                const filter = new API.Filter()\n                    .withClause(new API.Clause(new API.Restriction(\"key\", API.Comparators.EQ, \"$range_from\"), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction(\"key2\", API.Comparators.EQ, \"$range_to\"), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction(\"key3\", API.Comparators.EQ, \"[[range_from]]\"), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction(\"key4\", API.Comparators.EQ, \"[[range_to]]\"), API.Operators.AND));\n\n                // Build query and verify\n                const substituedFilter = ctx.datasource.buildQuery(filter, options);\n                expect(substituedFilter.clauses[0].restriction.value).to.equal(ctx.range_from);\n                expect(substituedFilter.clauses[1].restriction.value).to.equal(ctx.range_to);\n                expect(substituedFilter.clauses[2].restriction.value).to.equal(ctx.range_from);\n                expect(substituedFilter.clauses[3].restriction.value).to.equal(ctx.range_to);\n            });\n\n            it ('should include $range_from and $range_to when building the query', () => {\n               const filter = new API.Filter();\n               let actualFilter = ctx.datasource.buildQuery(filter, {});\n               expect(actualFilter.clauses.length).to.equal(0);\n\n               // Try building it with enforced range\n               actualFilter = ctx.datasource.buildQuery(filter, {\n                   enforceTimeRange: true,\n                   range: {\n                       from: ctx.range_from,\n                       to: ctx.range_to,\n                   },\n               });\n               expect(filter).not.to.equal(actualFilter);\n               expect(actualFilter.clauses.length).to.equal(1);\n               expect(actualFilter.clauses[0].restriction.clauses[0].restriction.value).to.equal(ctx.range_from);\n               expect(actualFilter.clauses[0].restriction.clauses[1].restriction.value).to.equal(ctx.range_to);\n\n            });\n        });\n    });\n\n});"]}