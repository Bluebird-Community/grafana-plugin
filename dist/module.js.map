{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///./components/config.ts","webpack:///./module.ts","webpack:///./lib/utils.ts","webpack:///external \"@grafana/runtime\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","OpenNMSHelmAppConfigCtrl","this","appModel","jsonData","actions","data","push","url","actionIndex","splice","templateUrl","cssInitialized","initializeCss","dark","light","assignModelProperties","target","source","defaults","undefined","selectOptionsForCurrentValue","variable","y","option","selected","options","length","isArray","current","setOptionAsCurrent","cloneDeep","text","join","emitChangeEvents","dashboardSrv","templateSrv","initLock","Promise","resolve","getVariables","dashboard","variables","promises","forEach","v","updateOptions","setGlobalVariable","id","all","then","templateVariableValueUpdated","startRefresh","variableUpdated","setOptionFromUrl","urlValue","promise","refresh","find","op","defaultText","defaultValue","reduce","acc","item","multi","castArray","setValue","validateVariableSelectionState","firstOption","val","map","variableRegex","variableRegexExec","variableString","lastIndex","exec","containsVariable","args","variableName","isString","slice","matches","match","isMatchingVariable","varMatch","indexOf","isFirst","index","array","processSelectionVariables","input","mapped","dropUnresolved","dropAll","startsWith","endsWith","substring","split","trim","some","processSelectionVariable","concat","filter","swap","thisArray","colIndex1","colIndex2","tmp","swapColumns","rows","Error","__WEBPACK_EXTERNAL_MODULE__9__"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","export class OpenNMSHelmAppConfigCtrl {\n  appModel: any;\n  data: any;\n  static templateUrl: string;\n\n  /** @ngInject */\n  constructor() {\n    if (!this.appModel.jsonData) {\n      this.appModel.jsonData = {};\n    }\n    if (!this.appModel.jsonData.actions) {\n      this.appModel.jsonData.actions = [];\n    }\n    this.data = this.appModel.jsonData;\n  }\n\n  addAction() {\n    this.data.actions.push({ url: '' });\n  }\n\n  removeAction(actionIndex: number) {\n    if (this.data.actions[actionIndex]) {\n      console.info('removing action ' + this.data.actions[actionIndex].label + '(' + actionIndex + ')');\n      this.data.actions.splice(actionIndex, 1);\n    } else {\n      console.warn('no action at index ' + actionIndex);\n    }\n  }\n}\n\nOpenNMSHelmAppConfigCtrl.templateUrl = 'public/plugins/opennms-helm-app/components/config.html';\n","import { OpenNMSHelmAppConfigCtrl } from './components/config';\n\nimport { initializeCss } from 'lib/utils';\n\ninitializeCss();\n\nexport { OpenNMSHelmAppConfigCtrl as ConfigCtrl };\n","import _ from 'lodash';\n\nimport { loadPluginCss } from '@grafana/runtime';\n\nlet cssInitialized = false;\nexport function initializeCss() {\n  if (!cssInitialized) {\n    cssInitialized = true;\n    loadPluginCss({\n      dark: 'plugins/opennms-helm-app/styles/dark.css',\n      light: 'plugins/opennms-helm-app/styles/light.css',\n    });\n  }\n}\n\nexport function assignModelProperties(target, source, defaults = {}) {\n  for (const key in defaults) {\n    if (!defaults.hasOwnProperty(key)) {\n      continue;\n    }\n\n    target[key] = source[key] === undefined ? defaults[key] : source[key];\n  }\n}\n\nexport function selectOptionsForCurrentValue(variable) {\n  let i, y, value, option;\n  const selected = [] as any[];\n\n  for (i = 0; i < variable.options.length; i++) {\n    option = variable.options[i];\n    option.selected = false;\n    if (_.isArray(variable.current.value)) {\n      for (y = 0; y < variable.current.value.length; y++) {\n        value = variable.current.value[y];\n        if (option.value === value) {\n          option.selected = true;\n          selected.push(option);\n        }\n      }\n    } else if (option.value === variable.current.value) {\n      option.selected = true;\n      selected.push(option);\n    }\n  }\n\n  return selected;\n}\n\nexport function setOptionAsCurrent(variable, option) {\n  variable.current = _.cloneDeep(option || {});\n\n  if (_.isArray(variable.current.text) && variable.current.text.length > 0) {\n    variable.current.text = variable.current.text.join(' + ');\n  } else if (_.isArray(variable.current.value) && variable.current.value[0] !== '$__all') {\n    variable.current.text = variable.current.value.join(' + ');\n  }\n\n  selectOptionsForCurrentValue(variable);\n  return variableUpdated(variable);\n}\n\nexport function variableUpdated(variable, emitChangeEvents = false) {\n  const dashboardSrv = variable.dashboardSrv;\n  const templateSrv = variable.templateSrv;\n\n  // if there is a variable lock ignore cascading update because we are in a boot up scenario\n  if (variable.initLock) {\n    return Promise.resolve();\n  }\n\n  const getVariables = templateSrv.getVariables.bind(templateSrv) || dashboardSrv.dashboard.getVariables.bind(dashboardSrv.dashboard);\n  const variables = getVariables();\n  let promises = [] as Array<Promise<any>>;\n\n  // in theory we should create an efficient sub-list of variables to update, but for now just do them all YOLO\n  variables.forEach(v => promises.push(v.updateOptions()));\n\n  templateSrv.setGlobalVariable(variable.id, variable.current);\n\n  return Promise.all(promises).then(() => {\n    if (emitChangeEvents) {\n      dashboardSrv.dashboard.templateVariableValueUpdated();\n      dashboardSrv.dashboard.startRefresh();\n    }\n  });\n}\n\n\nexport function setOptionFromUrl(variable: any, urlValue: any) {\n  let promise = Promise.resolve();\n\n  if (variable.refresh) {\n    promise = variable.updateOptions();\n  }\n\n  return promise.then(() => {\n    // Simple case. Value in url matches existing options text or value.\n    let option = _.find(variable.options, op => {\n      return op.text === urlValue || op.value === urlValue;\n    });\n\n    // No luck either it is array or value does not exist in the variables options.\n    if (!option) {\n      let defaultText = urlValue;\n      const defaultValue = urlValue;\n\n      if (_.isArray(urlValue)) {\n        // Multiple values in the url. We construct text as a list of texts from all matched options.\n        defaultText = urlValue.reduce((acc, item) => {\n          const t = _.find(variable.options, { value: item });\n          if (t) {\n            acc.push(t.text);\n          } else {\n            acc.push(item);\n          }\n\n          return acc;\n        }, []);\n      }\n\n      // It is possible that we did not match the value to any existing option. In that case the url value will be\n      // used anyway for both text and value.\n      option = { text: defaultText, value: defaultValue };\n    }\n\n    if (variable.multi) {\n      // In case variable is multiple choice, we cast to array to preserve the same behaviour as when selecting\n      // the option directly, which will return even single value in an array.\n      option = { text: _.castArray(option.text), value: _.castArray(option.value) };\n    }\n\n    return variable.setValue(option);\n  });\n}\n\nexport function validateVariableSelectionState(variable: any, defaultValue?: any) {\n  if (!variable.current) {\n    variable.current = {};\n  }\n\n  if (_.isArray(variable.current.value)) {\n    let selected = selectOptionsForCurrentValue(variable);\n\n    // if none pick first\n    if (selected.length === 0) {\n      let firstOption = variable.options[0];\n      if (firstOption) {\n        return variable.setValue(firstOption);\n      }\n      return Promise.resolve();\n    } else {\n      let val = {\n        value: _.map(selected, val => {\n          return val.value;\n        }),\n        text: _.map(selected, val => {\n          return val.text;\n        }),\n      };\n      return variable.setValue(val);\n    }\n  } else {\n    let option = undefined;\n\n    // 1. find the current value\n    option = _.find(variable.options, {\n      text: variable.current.text,\n    });\n    if (option) {\n      return variable.setValue(option);\n    }\n\n    // 2. find the default value\n    if (defaultValue) {\n      option = _.find(variable.options, {\n        text: defaultValue,\n      });\n      if (option) {\n        return variable.setValue(option);\n      }\n    }\n\n    // 3. use the first value\n    if (variable.options) {\n      return variable.setValue(variable.options[0]);\n    }\n\n    // 4... give up\n    return Promise.resolve();\n  }\n}\n\nexport const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^}]+))?(?::(\\w+))?}/g;\n\nexport const variableRegexExec = (variableString) => {\n  variableRegex.lastIndex = 0;\n  return variableRegex.exec(variableString);\n};\n\nexport function containsVariable(...args) {\n  const variableName = args[args.length - 1];\n  args[0] = _.isString(args[0]) ? args[0] : Object['values'](args[0]).join(' ');\n  const variableString = args.slice(0, -1).join(' ');\n  const matches = variableString.match(variableRegex);\n  const isMatchingVariable =\n    matches !== null\n      ? matches.find(match => {\n          const varMatch = variableRegexExec(match);\n          return varMatch !== null && varMatch.indexOf(variableName) > -1;\n        })\n      : false;\n\n  return !!isMatchingVariable;\n}\n\n/**\n * Converts an input string into a string array of selected values.\n *\n * The input string may be the value of a multi-selection template variable. In this case the input string is\n * delimited by curly braces that enclose a comma separated list of values.\n *\n * The dropUnresolved parameter determines if an empty array is returned if the input starts with '$'.\n * The dropAll parameter determines if an empty array is returned if the input is \"all\".\n */\n export function processSelectionVariable(input: string, dropUnresolved: boolean, dropAll: boolean): string[] {\n  if (input) {\n      if (input.startsWith('{') && input.endsWith('}')) {\n          const args = input.substring(1, input.length - 1).split(',').map(s => s.trim())\n          if (dropAll && args.some(s => s === 'all')) {\n              return []\n          } else {\n              return args\n          }\n      } else if (dropUnresolved && input.startsWith('$')) {\n          return [];\n      } else if (dropAll && input === 'all') {\n          return []\n      } else {\n          return [input]\n      }\n  } else {\n      return []\n  }\n}\n\n/** Checks if the given index is the first index of the given t. */\nexport function isFirst<T>(t: T, index: number, array: T[]) {\n  return array.indexOf(t) === index;\n}\n\n/**\n * Converts multiple (possibly multi-selection) inputs into a string array of all contained selections.\n *\n * Unresolved template variables (detected by a leading '$' sign) are ignored. This allows to remove template variables\n * from a dashboard without having to adjust queries that use them.\n *\n * An empty array is returned if \"all\" would be included in the selections. Duplicates are removed.\n */\nexport function processSelectionVariables(input?: string[]): string[] {\n  if (input) {\n      const mapped = input.map(i => processSelectionVariable(i, true, false))\n      if (mapped.some(m => m.some(s => s === 'all'))) {\n          return []\n      } else {\n          return ([] as string[]).concat(...mapped).filter(isFirst)\n      }\n  } else {\n      return []\n  }\n}\n\n/**\n * Swap items in an array\n * @param thisArray \n */\nexport function swap(thisArray: any[], colIndex1: number, colIndex2: number): any[] {\n  const tmp = thisArray[colIndex1];\n  thisArray[colIndex1] = thisArray[colIndex2];\n  thisArray[colIndex2] = tmp;\n  return thisArray;\n}\n\n/**\n * Swap table rows column values\n * @param colIndex1 \n * @param colIndex2 \n */\nexport function swapColumns(rows: any[][], colIndex1: number, colIndex2: number): any[][] {\n  if (rows && rows.length > 0 && colIndex1 >= 0 && colIndex2 >= 0) {\n    for (var i = 0; i < rows.length; i++) {\n      if (colIndex1 >= rows[i].length || colIndex2 >= rows[i].length) {\n        throw new Error('Index out of bounds');\n      }\n      rows[i] = swap(rows[i], colIndex1, colIndex2);\n    }\n  }\n  return rows;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;"],"sourceRoot":""}