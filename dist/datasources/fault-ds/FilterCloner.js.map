{"version":3,"sources":["../../../src/datasources/fault-ds/FilterCloner.js"],"names":["_","API","FilterCloner","filter","newFilter","Filter","limit","clauses","cloneNestedRestriction","clause","operator","find","Operators","label","restriction","nestedRestriction","Clause","cloneRestriction","self","newNestedRestriction","NestedRestriction","each","withClause","cloneClause","comparator","Comparators","Restriction","attribute","value"],"mappings":";;;;;;;;;;;;;;;AAAOA,a;;AACCC,e,YAAAA,G;;;;;;;;;;;;;;;;;;;;;oCAOKC,Y;;;;;;;gDACGC,M,EAAQ;AAChB,4BAAMC,YAAY,IAAIH,IAAII,MAAR,EAAlB;AACAD,kCAAUE,KAAV,GAAkBH,OAAOG,KAAzB;AACAF,kCAAUG,OAAV,GAAoB,KAAKC,sBAAL,CAA4BL,MAA5B,EAAoCI,OAAxD;AACA,+BAAOH,SAAP;AACH;;;gDAEWK,M,EAAQ;AAChB,4BAAMC,WAAWV,EAAEW,IAAF,CAAOV,IAAIW,SAAX,EAAsB,UAASF,QAAT,EAAmB;AACtD,mCAAOA,SAASG,KAAT,KAAmBJ,OAAOC,QAAP,CAAgBG,KAA1C;AACH,yBAFgB,CAAjB;;AAIA;AACA,4BAAIJ,OAAOK,WAAP,CAAmBP,OAAvB,EAAgC;AAC5B,gCAAMQ,oBAAoB,KAAKP,sBAAL,CAA4BC,OAAOK,WAAnC,CAA1B;AACA,mCAAO,IAAIb,IAAIe,MAAR,CAAeD,iBAAf,EAAkCL,QAAlC,CAAP;AACH,yBAHD,MAGO;AAAE;AACL,gCAAMI,cAAc,KAAKG,gBAAL,CAAsBR,OAAOK,WAA7B,CAApB;AACA,mCAAO,IAAIb,IAAIe,MAAR,CAAeF,WAAf,EAA4BJ,QAA5B,CAAP;AACH;AACJ;;;2DAEsBK,iB,EAAmB;AACtC,4BAAMG,OAAO,IAAb;AACA,4BAAMC,uBAAuB,IAAIlB,IAAImB,iBAAR,EAA7B;AACApB,0BAAEqB,IAAF,CAAON,kBAAkBR,OAAzB,EAAkC,UAASE,MAAT,EAAiB;AAC/CU,iDAAqBG,UAArB,CAAgCJ,KAAKK,WAAL,CAAiBd,MAAjB,CAAhC;AACH,yBAFD;AAGA,+BAAOU,oBAAP;AACH;;;qDAEgBL,W,EAAa;AAC1B,4BAAMU,aAAaxB,EAAEW,IAAF,CAAOV,IAAIwB,WAAX,EAAwB,UAASD,UAAT,EAAqB;AAC5D,mCAAOA,WAAWX,KAAX,KAAqBC,YAAYU,UAAZ,CAAuBX,KAAnD;AACH,yBAFkB,CAAnB;AAGA,+BAAO,IAAIZ,IAAIyB,WAAR,CAAoBZ,YAAYa,SAAhC,EAA2CH,UAA3C,EAAuDV,YAAYc,KAAnE,CAAP;AACH","file":"FilterCloner.js","sourcesContent":["import _ from 'lodash'\nimport {API} from '../../opennms'\n\n/**\n * The filter may be reloaded from a persisted state.\n * The internal opennms.js API requires a concrete implementation of Comparators or Operators in order to work.\n * As the object was persisted, the references DO NOT MATCH. In order to make them match, we just rebuild the filter.\n */\nexport class FilterCloner {\n    cloneFilter(filter) {\n        const newFilter = new API.Filter();\n        newFilter.limit = filter.limit;\n        newFilter.clauses = this.cloneNestedRestriction(filter).clauses;\n        return newFilter;\n    }\n\n    cloneClause(clause) {\n        const operator = _.find(API.Operators, function(operator) {\n            return operator.label === clause.operator.label;\n        });\n\n        // Nested restriction\n        if (clause.restriction.clauses) {\n            const nestedRestriction = this.cloneNestedRestriction(clause.restriction);\n            return new API.Clause(nestedRestriction, operator);\n        } else { // Normal restriction\n            const restriction = this.cloneRestriction(clause.restriction);\n            return new API.Clause(restriction, operator);\n        }\n    }\n\n    cloneNestedRestriction(nestedRestriction) {\n        const self = this;\n        const newNestedRestriction = new API.NestedRestriction();\n        _.each(nestedRestriction.clauses, function(clause) {\n            newNestedRestriction.withClause(self.cloneClause(clause));\n        });\n        return newNestedRestriction;\n    }\n\n    cloneRestriction(restriction) {\n        const comparator = _.find(API.Comparators, function(comparator) {\n            return comparator.label === restriction.comparator.label;\n        });\n        return new API.Restriction(restriction.attribute, comparator, restriction.value);\n    }\n}"]}