{"version":3,"sources":["../../../../src/datasources/fault-ds/ui/Filter.js"],"names":["API","Mapping","UI","Filter","uiSegmentSrv","query","Query","root","updateControls","string","isEmpty","queryString","asString","length","clear","clause","Clause","uiClause","ClauseMapping","getUiClause","addClause","Error","removeClause"],"mappings":";;;;;;;;;;;;;;;AAAQA,e,YAAAA,G;;AACAC,mB,YAAAA,O;;AACAC,c,OAAAA,E;;;;;;;;;;;;;;;;;;;;;8BAEKC,M;AACT,gCAAYC,YAAZ,EAA0B;AAAA;;AACtB,yBAAKA,YAAL,GAAoBA,YAApB;AACA,yBAAKC,KAAL,GAAa,IAAIH,GAAGI,KAAP,CAAaF,YAAb,CAAb;AACA,yBAAKC,KAAL,CAAWE,IAAX,GAAkB,IAAlB;AACH;;;;qDAEgB;AACb,6BAAKF,KAAL,CAAWG,cAAX;AACH;;;qDAEgB;AACb,4BAAIC,SAAS,mBAAb;AACA,4BAAI,KAAKJ,KAAL,CAAWK,OAAX,EAAJ,EAA0B;AACtB,mCAAOD,MAAP;AACH;;AAED,4BAAIE,cAAc,KAAKN,KAAL,CAAWO,QAAX,EAAlB;AACA,4BAAID,eAAeA,YAAYE,MAAZ,GAAqB,CAAxC,EAA2C;AACvC,mCAAOJ,SAAS,SAAT,GAAqBE,WAA5B;AACH;AACD,+BAAOF,MAAP;AACH;;;4CAEO;AACJ,6BAAKJ,KAAL,CAAWS,KAAX;AACH;;;8CAESC,M,EAAQ;AACd,4BAAIA,kBAAkBf,IAAIgB,MAA1B,EAAkC;AAC9B,gCAAMC,WAAW,IAAIhB,QAAQiB,aAAZ,CAA0B,KAAKd,YAA/B,EAA6Ce,WAA7C,CAAyDJ,MAAzD,CAAjB;AACA,iCAAKV,KAAL,CAAWe,SAAX,CAAqBH,QAArB;AACH,yBAHD,MAGO,IAAIF,kBAAkBb,GAAGc,MAAzB,EAAiC;AACpC,iCAAKX,KAAL,CAAWe,SAAX,CAAqBL,MAArB;AACH,yBAFM,MAEA;AACH,kCAAM,IAAIM,KAAJ,CAAU,8BAAV,CAAN;AACH;AACJ;;;+CAEUN,M,EAAQ;AACf,6BAAKK,SAAL,CAAeL,MAAf;AACA,+BAAO,IAAP;AACH;;;iDAEYA,M,EAAQ;AACjB,6BAAKV,KAAL,CAAWiB,YAAX,CAAwBP,MAAxB;AACH","file":"Filter.js","sourcesContent":["import {API} from '../../../opennms';\nimport {Mapping} from '../Mapping';\nimport {UI} from '../UI';\n\nexport class Filter {\n    constructor(uiSegmentSrv) {\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.query = new UI.Query(uiSegmentSrv);\n        this.query.root = true;\n    }\n\n    updateControls() {\n        this.query.updateControls();\n    }\n\n    getQueryString() {\n        let string = \"select all alarms\";\n        if (this.query.isEmpty()) {\n            return string;\n        }\n\n        let queryString = this.query.asString();\n        if (queryString && queryString.length > 0) {\n            return string + \" where \" + queryString;\n        }\n        return string;\n    }\n\n    clear() {\n        this.query.clear();\n    }\n\n    addClause(clause) {\n        if (clause instanceof API.Clause) {\n            const uiClause = new Mapping.ClauseMapping(this.uiSegmentSrv).getUiClause(clause);\n            this.query.addClause(uiClause);\n        } else if (clause instanceof UI.Clause) {\n            this.query.addClause(clause);\n        } else {\n            throw new Error(\"Clause type is not supported\");\n        }\n    }\n\n    withClause(clause) {\n        this.addClause(clause);\n        return this;\n    }\n\n    removeClause(clause) {\n        this.query.removeClause(clause);\n    }\n}"]}