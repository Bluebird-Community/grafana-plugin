{"version":3,"sources":["../../../../src/datasources/fault-ds/ui/Restriction.js"],"names":["_","KEY_PLACEHOLDER","VALUE_PLACEHOLDER","Restriction","uiSegmentSrv","restriction","segments","setAttribute","attribute","setComparator","comparator","setValue","value","length","pop","segment","push","newKey","newOperator","newKeyValue","filter","type","fake","undefined","data","each","RestrictionDTO","getComparator","getValue","asRestrictionDTO"],"mappings":"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","file":"Restriction.js","sourcesContent":["import _ from 'lodash';\n\nconst KEY_PLACEHOLDER = 'select attribute';\nconst VALUE_PLACEHOLDER = 'select value';\n\nexport class Restriction {\n\n    static get KEY_PLACEHOLDER() {\n        return KEY_PLACEHOLDER;\n    }\n\n    static get VALUE_PLACEHOLDER() {\n        return VALUE_PLACEHOLDER;\n    }\n\n    constructor(uiSegmentSrv, restriction) {\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.segments = [];\n        if (restriction) {\n            this.setAttribute(restriction.attribute);\n            this.setComparator(restriction.comparator);\n            this.setValue(restriction.value);\n        }\n    }\n\n    getSegmentCount() {\n        return this.segments.length;\n    }\n\n    removeLastSegment() {\n        this.segments.pop();\n    }\n\n    addSegment(segment) {\n        if (segment) {\n            this.segments.push(segment);\n        }\n    }\n\n    setAttribute(attribute) {\n        if (this.segments.length == 0) {\n            this.segments.push({});\n        }\n        this.segments[0] = this.uiSegmentSrv.newKey(attribute);\n    }\n\n    getAttribute() {\n        if (this.segments.length == 0) {\n            return void 0;\n        }\n        return this.segments[0].value;\n    }\n\n    setComparator(comparator) {\n        if (this.segments.length == 1) {\n            this.segments.push({});\n        }\n        this.segments[1] = this.uiSegmentSrv.newOperator(comparator);\n    }\n\n    getComparator() {\n        if (this.segments.length == 1) {\n            return void 0;\n        }\n        return this.segments[1].value;\n    }\n\n    setValue(value) {\n        if (this.segments.length == 2) {\n            this.segments.push({});\n        }\n        this.segments[2] = this.uiSegmentSrv.newKeyValue(value);\n    }\n\n    getValue() {\n        if (this.segments.length == 2) {\n            return void 0;\n        }\n        return this.segments[2].value;\n    }\n\n    asRestrictionDTO() {\n        const segments = _.filter(this.segments, function(segment) {\n            return segment.type !== 'plus-button'\n                    && (segment.fake === undefined || segment.fake === false)\n                    && segment.value !== KEY_PLACEHOLDER && segment.value !== VALUE_PLACEHOLDER;\n        });\n        if (segments.length > 0 && segments.length % 3 == 0) {\n            var data = {};\n            _.each(segments, (segment) => {\n                if (segment.type === 'key') {\n                    data.attribute = segment.value;\n                } else if (segment.type === 'operator') {\n                    data.comparator = segment.value;\n                } else if (segment.type === 'value') {\n                    data.value = segment.value;\n                }\n            });\n            return new RestrictionDTO(data.attribute, data.comparator, data.value);\n        }\n        return null;\n    }\n\n    asString() {\n        const getComparator = function(restriction) {\n            if (restriction.value === 'null') {\n                if (restriction.comparator === '=') {\n                    return \"is\";\n                }\n                if (restriction.comparator === '!=') {\n                    return \"is not\";\n                }\n            }\n            return restriction.comparator;\n        };\n\n        const getValue = function(restriction) {\n            if (restriction.value === 'null') {\n                return 'null';\n            }\n            return \"'\" + restriction.value + \"'\";\n        };\n\n        const restriction = this.asRestrictionDTO();\n        if (restriction !== null) {\n            return restriction.attribute + \" \" + getComparator(restriction) + \" \" + getValue(restriction);\n        }\n        return null;\n    }\n}\n\n// Just use for internal use\nexport class RestrictionDTO {\n    constructor(attribute, comparator, value) {\n        this.attribute = attribute;\n        this.comparator = comparator;\n        this.value = value;\n    }\n}"]}