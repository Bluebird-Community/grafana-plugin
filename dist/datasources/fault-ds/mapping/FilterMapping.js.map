{"version":3,"sources":["../../../../src/datasources/fault-ds/mapping/FilterMapping.js"],"names":["_","API","UI","ClauseMapping","FilterMapping","uiSegmentSrv","uiFilter","Filter","TypeError","self","filter","limit","each","query","clauses","eachClause","apiClause","getApiClause","withClause","apiFilter","uiClause","getUiClause","addClause","applyParentQuery","clause","parentQuery","restriction","Query"],"mappings":";;;;;;;;;;;;;;;AAAOA,a;;AACCC,e,YAAAA,G;;AACAC,c,OAAAA,E;;AACAC,yB,kBAAAA,a;;;;;;;;;;;;;;;;;;;;;qCAKKC,a;AAET,uCAAYC,YAAZ,EAA0B;AAAA;;AACtB,yBAAKA,YAAL,GAAoBA,YAApB;AACH;;;;iDAEYC,Q,EAAU;AACnB;AACA,4BAAI,EAAEA,oBAAoBJ,GAAGK,MAAzB,CAAJ,EAAsC;AAClC,kCAAM,IAAIC,SAAJ,CAAc,oCAAd,CAAN;AACH;;AAED,4BAAMC,OAAO,IAAb;AACA,4BAAMC,SAAS,IAAIT,IAAIM,MAAR,EAAf;AACAG,+BAAOC,KAAP,GAAe,CAAf;;AAEAX,0BAAEY,IAAF,CAAON,SAASO,KAAT,CAAeC,OAAtB,EAA+B,UAASC,UAAT,EAAqB;AAChD,gCAAMC,YAAY,IAAIb,aAAJ,CAAkBM,KAAKJ,YAAvB,EAAqCY,YAArC,CAAkDF,UAAlD,CAAlB;AACA,gCAAIC,cAAc,IAAlB,EAAwB;AACpBN,uCAAOQ,UAAP,CAAkBF,SAAlB;AACH;AACJ,yBALD;AAMA,+BAAON,MAAP;AACH;;;gDAEWS,S,EAAW;AACnB,4BAAI,EAAEA,qBAAqBlB,IAAIM,MAA3B,CAAJ,EAAwC;AACpC,kCAAM,IAAIC,SAAJ,CAAc,qCAAd,CAAN;AACH;;AAED,4BAAMC,OAAO,IAAb;AACA,4BAAIH,WAAW,IAAIJ,GAAGK,MAAP,CAAc,KAAKF,YAAnB,CAAf;;AAEAL,0BAAEY,IAAF,CAAOO,UAAUL,OAAjB,EAA0B,qBAAa;AACnC,gCAAMM,WAAW,IAAIjB,aAAJ,CAAkBM,KAAKJ,YAAvB,EAAqCgB,WAArC,CAAiDL,SAAjD,CAAjB;AACAV,qCAASgB,SAAT,CAAmBF,QAAnB;;AAEA;AACAX,iCAAKc,gBAAL,CAAsBH,QAAtB,EAAgCd,SAASO,KAAzC;AAEH,yBAPD;;AASA,+BAAOP,QAAP;AACH;;;qDAEgBkB,M,EAAQC,W,EAAa;AAClC,4BAAID,OAAOE,WAAP,YAA8BxB,GAAGyB,KAArC,EAA4C;AACxCH,mCAAOE,WAAP,CAAmBD,WAAnB,GAAiCA,WAAjC;AACA,iCAAKF,gBAAL,CAAsBC,OAAOE,WAAP,CAAmBZ,OAAzC,EAAkDU,OAAOE,WAAzD;AACH;AACJ","file":"FilterMapping.js","sourcesContent":["import _ from 'lodash';\nimport {API} from '../../../opennms'\nimport {UI} from '../UI';\nimport {ClauseMapping} from './ClauseMapping';\n\n/**\n * Maps a UiFilter to API.filter and vice versa.\n */\nexport class FilterMapping {\n\n    constructor(uiSegmentSrv) {\n        this.uiSegmentSrv = uiSegmentSrv;\n    }\n\n    getApiFilter(uiFilter) {\n        // Ensure we can migrate\n        if (!(uiFilter instanceof UI.Filter)) {\n            throw new TypeError(\"uiFilter is not of type UI.Filter.\");\n        }\n\n        const self = this;\n        const filter = new API.Filter();\n        filter.limit = 0;\n\n        _.each(uiFilter.query.clauses, function(eachClause) {\n            const apiClause = new ClauseMapping(self.uiSegmentSrv).getApiClause(eachClause);\n            if (apiClause !== null) {\n                filter.withClause(apiClause);\n            }\n        });\n        return filter;\n    }\n\n    getUiFilter(apiFilter) {\n        if (!(apiFilter instanceof API.Filter)) {\n            throw new TypeError(\"apiFilter is not of type API.Filter\");\n        }\n\n        const self = this;\n        let uiFilter = new UI.Filter(this.uiSegmentSrv);\n\n        _.each(apiFilter.clauses, apiClause => {\n            const uiClause = new ClauseMapping(self.uiSegmentSrv).getUiClause(apiClause);\n            uiFilter.addClause(uiClause);\n\n            // set parentQuery for all nested queries\n            self.applyParentQuery(uiClause, uiFilter.query);\n\n        });\n\n        return uiFilter;\n    }\n\n    applyParentQuery(clause, parentQuery) {\n        if (clause.restriction instanceof UI.Query) {\n            clause.restriction.parentQuery = parentQuery;\n            this.applyParentQuery(clause.restriction.clauses, clause.restriction);\n        }\n    }\n}"]}