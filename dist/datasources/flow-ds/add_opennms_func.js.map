{"version":3,"sources":["../../../src/datasources/flow-ds/add_opennms_func.js"],"names":["getAllFunctionNames","categories","_","reduce","list","category","each","func","push","name","createFunctionDropDownMenu","map","submenu","value","text","click","Gfuncs","angular","module","directive","$compile","inputTemplate","buttonTemplate","link","$scope","elem","ctrl","graphiteVersion","datasource","getCategories","allFunctions","functionMenu","$input","$","$button","appendTo","attr","typeahead","source","minLength","items","updater","funcDef","getFuncDef","toLowerCase","find","funcName","indexOf","$apply","addFunction","trigger","hide","show","focus","keyup","toggleClass","val","blur","setTimeout","removeClass","contents"],"mappings":";;;;;;;AAmFA,WAASA,mBAAT,CAA6BC,UAA7B,EAAyC;AACvC,WAAOC,EAAEC,MAAF,CAASF,UAAT,EAAqB,UAAUG,IAAV,EAAgBC,QAAhB,EAA0B;AACpDH,QAAEI,IAAF,CAAOD,QAAP,EAAiB,UAAUE,IAAV,EAAgB;AAC/BH,aAAKI,IAAL,CAAUD,KAAKE,IAAf;AACD,OAFD;AAGA,aAAOL,IAAP;AACD,KALM,EAKJ,EALI,CAAP;AAMD;;AAED,WAASM,0BAAT,CAAoCT,UAApC,EAAgD;AAC9C,WAAOC,EAAES,GAAF,CAAMV,UAAN,EAAkB,UAAUG,IAAV,EAAgBC,QAAhB,EAA0B;AACjD,UAAIO,UAAUV,EAAES,GAAF,CAAMP,IAAN,EAAY,UAAUS,KAAV,EAAiB;AACzC,eAAO;AACLC,gBAAMD,MAAMJ,IADP;AAELM,iBAAO,uBAAuBF,MAAMJ,IAA7B,GAAoC;AAFtC,SAAP;AAID,OALa,CAAd;;AAOA,aAAO;AACLK,cAAMT,QADD;AAELO,iBAASA;AAFJ,OAAP;AAID,KAZM,CAAP;AAaD;;;AA1GMV,O;;AAECc,Y,mBAAAA,M;;;;AAERC,cACGC,MADH,CACU,oBADV,EAEGC,SAFH,CAEa,gBAFb,EAE+B,UAAUC,QAAV,EAAoB;AAC/C,YAAIC,gBAAgB,uBAClB,wBADkB,GAElB,mDAFF;;AAIA,YAAIC,iBAAiB,yDACnB,kEADmB,GAEnB,gCAFF;;AAIA,eAAO;AACLC,gBAAM,cAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC5B,gBAAIC,OAAOF,OAAOE,IAAlB;AACA,gBAAIC,kBAAkBD,KAAKE,UAAL,CAAgBD,eAAtC;AACA,gBAAI1B,aAAae,OAAOa,aAAP,CAAqBF,eAArB,CAAjB;AACA,gBAAIG,eAAe9B,oBAAoBC,UAApB,CAAnB;;AAEAuB,mBAAOO,YAAP,GAAsBrB,2BAA2BT,UAA3B,CAAtB;;AAEA,gBAAI+B,SAASC,EAAEZ,aAAF,CAAb;AACA,gBAAIa,UAAUD,EAAEX,cAAF,CAAd;AACAU,mBAAOG,QAAP,CAAgBV,IAAhB;AACAS,oBAAQC,QAAR,CAAiBV,IAAjB;;AAEAO,mBAAOI,IAAP,CAAY,cAAZ,EAA4B,WAA5B;AACAJ,mBAAOK,SAAP,CAAiB;AACfC,sBAAQR,YADO;AAEfS,yBAAW,CAFI;AAGfC,qBAAO,EAHQ;AAIfC,uBAAS,iBAAU5B,KAAV,EAAiB;AACxB,oBAAI6B,UAAU1B,OAAO2B,UAAP,CAAkB9B,KAAlB,CAAd;AACA,oBAAI,CAAC6B,OAAL,EAAc;AACZ;AACA7B,0BAAQA,MAAM+B,WAAN,EAAR;AACAF,4BAAUxC,EAAE2C,IAAF,CAAOf,YAAP,EAAqB,UAAUgB,QAAV,EAAoB;AACjD,2BAAOA,SAASF,WAAT,GAAuBG,OAAvB,CAA+BlC,KAA/B,MAA0C,CAAjD;AACD,mBAFS,CAAV;;AAIA,sBAAI,CAAC6B,OAAL,EAAc;AACZ;AACD;AACF;;AAEDlB,uBAAOwB,MAAP,CAAc,YAAY;AACxBtB,uBAAKuB,WAAL,CAAiBP,OAAjB;AACD,iBAFD;;AAIAV,uBAAOkB,OAAP,CAAe,MAAf;AACA,uBAAO,EAAP;AACD;AAxBc,aAAjB;;AA2BAhB,oBAAQnB,KAAR,CAAc,YAAY;AACxBmB,sBAAQiB,IAAR;AACAnB,qBAAOoB,IAAP;AACApB,qBAAOqB,KAAP;AACD,aAJD;;AAMArB,mBAAOsB,KAAP,CAAa,YAAY;AACvB7B,mBAAK8B,WAAL,CAAiB,MAAjB,EAAyBvB,OAAOwB,GAAP,OAAiB,EAA1C;AACD,aAFD;;AAIAxB,mBAAOyB,IAAP,CAAY,YAAY;AACtB;AACA;AACAC,yBAAW,YAAY;AACrB1B,uBAAOwB,GAAP,CAAW,EAAX;AACAxB,uBAAOmB,IAAP;AACAjB,wBAAQkB,IAAR;AACA3B,qBAAKkC,WAAL,CAAiB,MAAjB;AACD,eALD,EAKG,GALH;AAMD,aATD;;AAWAvC,qBAASK,KAAKmC,QAAL,EAAT,EAA0BpC,MAA1B;AACD;AAhEI,SAAP;AAkED,OA7EH","file":"add_opennms_func.js","sourcesContent":["import _ from 'lodash';\n\nimport {Gfuncs} from \"./flow_functions\";\n\nangular\n  .module('grafana.directives')\n  .directive('opennmsAddFunc', function ($compile) {\n    let inputTemplate = '<input type=\"text\"' +\n      ' class=\"gf-form-input\"' +\n      ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n    let buttonTemplate = '<a  class=\"gf-form-label query-part dropdown-toggle\"' +\n      ' tabindex=\"1\" gf-dropdown=\"functionMenu\" data-toggle=\"dropdown\">' +\n      '<i class=\"fa fa-plus\"></i></a>';\n\n    return {\n      link: function ($scope, elem) {\n        let ctrl = $scope.ctrl;\n        let graphiteVersion = ctrl.datasource.graphiteVersion;\n        let categories = Gfuncs.getCategories(graphiteVersion);\n        let allFunctions = getAllFunctionNames(categories);\n\n        $scope.functionMenu = createFunctionDropDownMenu(categories);\n\n        let $input = $(inputTemplate);\n        let $button = $(buttonTemplate);\n        $input.appendTo(elem);\n        $button.appendTo(elem);\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({\n          source: allFunctions,\n          minLength: 1,\n          items: 10,\n          updater: function (value) {\n            let funcDef = Gfuncs.getFuncDef(value);\n            if (!funcDef) {\n              // try find close match\n              value = value.toLowerCase();\n              funcDef = _.find(allFunctions, function (funcName) {\n                return funcName.toLowerCase().indexOf(value) === 0;\n              });\n\n              if (!funcDef) {\n                return;\n              }\n            }\n\n            $scope.$apply(function () {\n              ctrl.addFunction(funcDef);\n            });\n\n            $input.trigger('blur');\n            return '';\n          }\n        });\n\n        $button.click(function () {\n          $button.hide();\n          $input.show();\n          $input.focus();\n        });\n\n        $input.keyup(function () {\n          elem.toggleClass('open', $input.val() === '');\n        });\n\n        $input.blur(function () {\n          // clicking the function dropdown menu wont\n          // work if you remove class at once\n          setTimeout(function () {\n            $input.val('');\n            $input.hide();\n            $button.show();\n            elem.removeClass('open');\n          }, 200);\n        });\n\n        $compile(elem.contents())($scope);\n      }\n    };\n  });\n\nfunction getAllFunctionNames(categories) {\n  return _.reduce(categories, function (list, category) {\n    _.each(category, function (func) {\n      list.push(func.name);\n    });\n    return list;\n  }, []);\n}\n\nfunction createFunctionDropDownMenu(categories) {\n  return _.map(categories, function (list, category) {\n    let submenu = _.map(list, function (value) {\n      return {\n        text: value.name,\n        click: \"ctrl.addFunction('\" + value.name + \"')\",\n      };\n    });\n\n    return {\n      text: category,\n      submenu: submenu\n    };\n  });\n}\n"]}