{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./src/lib/function_formatter.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/parenthesis/index.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./src/components/timeout.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///external \"app/core/app_events\"","webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./src/datasources/perf-ds/constants.js","webpack:///./src/datasources/perf-ds/interpolate.js","webpack:///./src/datasources/perf-ds/datasource.js","webpack:///./src/datasources/perf-ds/modal_ctrl.js","webpack:///./src/datasources/perf-ds/query_ctrl.js","webpack:///./src/datasources/perf-ds/module.js","webpack:///./node_modules/@babel/runtime/helpers/inherits.js","webpack:///external \"app/plugins/sdk\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","_typeof2","obj","iterator","constructor","_typeof","_setPrototypeOf","setPrototypeOf","__proto__","ARGUMENT_MATCH","isString","String","getLast","arr","Array","isArray","length","FunctionFormatter","label","_process","parse","brackets","parenthesize","map","entry","arguments","getArguments","console","log","parenthesizeWithArguments","filter","undefined","args","argsString","split","replacements","parenthesized","ret","forEach","token","apply","join","metadata","replace","nodeToLabel","nodeCriteria","node","_getNodeFromCriteria","resourceToLabel","criteriaOrResourceId","partialResourceId","resource","_getResource","resourceToName","resourceToInterface","match","matcher","skip","arg","index","prev","next","push","exec","prefix","startsWith","replacement","_flatten","Error","result","res","trim","nodeId","foreignSource","foreignId","indexOf","parseInt","_getNodeFromMetadata","nodes","id","resources","_getResourceFromCriteria","resourceCriteria","nodeCriterias","criteria","arrayWithHoles","iterableToArrayLimit","nonIterableRest","instance","Constructor","TypeError","str","opts","escape","flat","bracket","pRE","RegExp","ids","replaceToken","idx","refId","slice","prevStr","a","reverse","re","nest","refs","stringify","replaceRef","reduce","f","curr","parenthesis","toString","_arr","_n","_d","_e","_s","_i","done","err","angular","directive","templateUrl","restrict","controller","controllerAs","bindToController","scope","current","this","jsonData","timeout","patterns","warn","_defineProperties","target","props","descriptor","configurable","writable","protoProps","staticProps","_getPrototypeOf","getPrototypeOf","__WEBPACK_EXTERNAL_MODULE__41__","self","ReferenceError","assertThisInitialized","QueryType","freeze","Attribute","Expression","Filter","defaultContainsVariable","variableName","_","isNull","isEmpty","defaultReplace","variables","interpolatedValue","each","variable","regexVarName","interpolate","attributes","callback","containsVariable","variablesWithIndex","clone","referencedVariables","find","attribute","productOfAllVariables","allValues","arrays","max","productOfAllValues","helper","j","rowOfValues","rowOfVariables","JSON","cartesianProductOfVariables","objects","rowOfReferencedVariables","OpenNMSDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","basicAuth","withCredentials","interval","timeInterval","searchLimit","options","headers","Authorization","datasourceRequest","statusText","cancelled","message","status","buildQuery","query","labels","source","doOpenNMSRequest","data","method","then","response","reject","processMeasurementsResponse","sortBy","catch","decorateError","when","title","resolve","interpolatedQuery","first","interpolateValue","functions","findFunctions","func","metricFindNodeFilterQuery","metricFindNodeResourceQuery","params","filterRule","limit","count","totalCount","results","text","expandable","encodeURIComponent","getNodeResource","depth","children","resourceWithoutNodePrefix","maxDataPoints","intervalMs","start","range","from","valueOf","end","to","step","Math","floor","targets","transient","hide","resourceId","aggregation","subattribute","datasource","fallbackAttribute","interpolateSourceVariables","scopedVars","interpolatedSource","getRemoteResourceId","concat","expression","interpolateExpressionVariables","interpolatedFilterParms","interpolateVariables","filterParameters","keys","filters","filterParms","parameters","templateVariable","option","comparator","orderBy","order","sysName","interpolatedNodeId","flattenResourcesWithAttributes","interpolatedResourceId","remoteResourceId","toLowerCase","rrdGraphAttributes","sort","nRows","nCols","datapoints","atLeastOneNonNaNValue","columns","timestamps","series","values","isNaN","format","resourcesWithAttributes","ModalCtrl","$scope","selectedRow","searchForRows","searching","search","rows","row","dismiss","OpenNMSQueryCtrl","$rootScope","$injector","$modal","types","error","validateTarget","showSelectionModal","searchForNodes","isUndefined","targetBlur","filterResources","filteredResources","take","nodeResources","deferred","defer","promise","getResourcesWithAttributesForNode","prop","suggestAttributes","namedAttributes","getAvailableFilters","$new","modal","template","persist","show","keyboard","modalEl","targetId","required","errorMessage","appEvents","emit","refresh","messages","QueryCtrl","GenericConfigCtrl","GenericQueryOptionsCtrl","loadPluginCss","dark","light","subClass","superClass","__WEBPACK_EXTERNAL_MODULE__9__"],"mappings":"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","file":"datasources/perf-ds/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 69);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","const ARGUMENT_MATCH = /\\s*,\\s*/;\n\nimport parse from 'parenthesis/index';\n\nconst isString = (value) => {\n    return typeof value === 'string' || value instanceof String;\n};\n\nconst getLast = (arr) => {\n    if (arr) {\n        if (Array.isArray(arr) && arr.length > 0) {\n            return arr[arr.length - 1];\n        }\n    }\n    return undefined;\n};\n\nexport class FunctionFormatter {\n    /**\n     * Convert the provided label into an array containing a mix of string values\n     * and function definitions for replacement.\n     */\n    static parenthesize(label) {\n        return FunctionFormatter._process(parse(label, {\n            brackets: ['()']\n        }));\n    }\n\n    /**\n     * Preprocess the parenthesized output so that format object arguments are parameterized\n     */\n    static parenthesizeWithArguments(label) {\n        const parenthesized = FunctionFormatter.parenthesize(label);\n        return parenthesized.map(entry => {\n            if (entry && entry.arguments) {\n                if (entry.arguments.length < 2) {\n                    entry.arguments = FunctionFormatter.getArguments(entry.arguments[0]);\n                } else {\n                    console.log('unexpected arguments, expected a single string:', entry);\n                }\n            }\n            return entry;\n        });\n    }\n\n    /**\n     * Given a label, return the list of potential functions found in it.\n     */\n    static findFunctions(label) {\n        return FunctionFormatter.parenthesizeWithArguments(label).filter(entry => entry && entry.name !== undefined);\n    }\n\n    /**\n     * Given an argument string, return a list of arguments.\n     */\n    static getArguments(args) {\n        const argsString = (args === undefined || args === null)? '' : args;\n        if (argsString.length === 0) {\n            return [];\n        }\n        const split = argsString.split(ARGUMENT_MATCH);\n        return Array.isArray(split) ? split : [split];\n    }\n\n    /**\n     * Given a label, replace instances of the functions in the replacements object.\n     * @param {string} label - the label string\n     * @param {*} replacements - an object of function names and their callbacks\n     */\n    static replace(label, replacements) {\n        const parenthesized = FunctionFormatter.parenthesizeWithArguments(label);\n\n        let ret = '';\n        parenthesized.forEach(token => {\n            if (isString(token)) {\n                // just a regular scalar\n                ret += token;\n            } else if (token.name) {\n                // potential function, check against replacements\n                if (replacements && replacements.hasOwnProperty(token.name)) {\n                    ret += replacements[token.name].apply(replacements[token.name], token.arguments);\n                } else {\n                    // not a matching function, just put it back\n                    ret += token.name + '(';\n                    if (token.arguments) {\n                        ret += token.arguments.join(', ');\n                    }\n                    ret += ')';\n                }\n            } else {\n                console.log('this should not happen... token=', token);\n            }\n        });\n        return ret;\n    }\n\n    /**\n     * Given a label and a set of OpenNMS measurements metadata, replace default\n     * functions like `nodeToLabel` and `resourceToName`.\n     * @param {string} label - the label string\n     * @param {*} replacements - an object of function names and their callbacks\n     */\n    static format(label, metadata) {\n        return FunctionFormatter.replace(label, {\n            nodeToLabel: (nodeCriteria) => {\n                const node = FunctionFormatter._getNodeFromCriteria(metadata, nodeCriteria);\n                if (node) {\n                    return node.label;\n                }\n                return nodeCriteria;\n            },\n            resourceToLabel: (criteriaOrResourceId, partialResourceId) => {\n                const resource = FunctionFormatter._getResource(metadata, criteriaOrResourceId, partialResourceId);\n                if (resource) {\n                    return resource.label;\n                }\n                return partialResourceId ? [criteriaOrResourceId, partialResourceId].join('.') : criteriaOrResourceId;\n            },\n            resourceToName: (criteriaOrResourceId, partialResourceId) => {\n                const resource = FunctionFormatter._getResource(metadata, criteriaOrResourceId, partialResourceId);\n                if (resource) {\n                    return resource.name;\n                }\n                return partialResourceId ? [criteriaOrResourceId, partialResourceId].join('.') : criteriaOrResourceId;\n            },\n            resourceToInterface: (criteriaOrResourceId, partialResourceId) => {\n                const resource = FunctionFormatter._getResource(metadata, criteriaOrResourceId, partialResourceId);\n                if (resource) {\n                    let match = resource.name.match(/^(\\w+)/);\n                    if (!match) {\n                        match = resource.label.match(/^(\\w+)/);\n                    }\n                    if (match) {\n                        return match[1];\n                    }\n                }\n                return partialResourceId ? [criteriaOrResourceId, partialResourceId].join('.') : criteriaOrResourceId;\n            }\n        });\n    }\n\n    /**\n     * Process the raw output of `parenthesis.parse` to detect functions.\n     */\n    static _process(args) {\n        const ret = [];\n        const matcher = /^(.*?)(\\w+?)\\($/;\n        let skip = false;\n        args.forEach((arg, index) => {\n            if (skip) {\n                skip = false;\n                return;\n            }\n            const prev = ret.length ? ret[ret.length - 1] : undefined;\n            const next = args[index + 1];\n\n            let match;\n            if (Array.isArray(arg)) {\n                ret.push(FunctionFormatter._process(arg));\n            } else if ((match = matcher.exec(arg)) !== null) {\n                let prefix = match[1];\n                if (prefix && prefix.length > 0) {\n                    if (prefix.startsWith(')') && prev && prev.name) {\n                        prefix = prefix.replace(/^\\)/, '');\n                    }\n                    ret.push(prefix);\n                }\n                ret.push({\n                    name: match[2],\n                    arguments: FunctionFormatter._process(next)\n                });\n                skip = true;\n            } else if (isString(arg) && arg.startsWith(')') && prev && prev.name) {\n                const replacement = arg.replace(/^\\)/, '');\n                if (replacement.length > 0) {\n                    ret.push(replacement);\n                }\n            } else {\n                ret.push(arg);\n            }\n        });\n        return FunctionFormatter._flatten(ret);\n    }\n\n    /**\n     * Combine string values in processed parenthesized output (from `_process`)\n     * so that we end up with a flat array of scalar strings and function replacements.\n     */\n    static _flatten(args) {\n        let ret = [];\n        args.forEach((arg) => {\n            if (isString(arg)) {\n                if (arg.length === 0) {\n                    return;\n                }\n                const prev = getLast(ret);\n                // argument is a string-part of the parsed label\n                if (isString(prev)) {\n                    ret[ret.length - 1] += arg;\n                } else {\n                    ret.push(arg);\n                }\n            } else if (arg && arg.arguments) {\n                // argument is a function, whose arguments may be flattenable as well\n                arg.arguments = FunctionFormatter._flatten(arg.arguments);\n                ret.push(arg);\n            } else if (Array.isArray(arg)) {\n                // argument is sub-parens that need further flattening\n                const result = FunctionFormatter._flatten(arg);\n                result.forEach((res) => {\n                    const prev = getLast(ret);\n                    if (isString(res)) {\n                        if (res.trim().length === 0) {\n                            return;\n                        }\n                        if (isString(prev)) {\n                            ret[ret.length - 1] += res;\n                        } else {\n                            ret.push(res);\n                        }\n                    } else if (res && res.arguments) {\n                        // argument is a function\n                        ret.push(res);\n                    } else {\n                        console.log('cannot reach here (result)', prev, res, result);\n                        throw new Error('cannot reach here (result)');\n                    }\n                });\n            } else {\n                console.log('cannot reach here (args)', arg, args);\n                throw new Error('cannot reach here (args)');\n            }\n        });\n        return ret;\n    }\n\n    static _getNodeFromCriteria(metadata, nodeCriteria) {\n        let nodeId, foreignSource, foreignId;\n        if (nodeCriteria && nodeCriteria.indexOf(':') > 0) {\n            [foreignSource, foreignId] = nodeCriteria.split(':');\n        } else {\n            nodeId = parseInt(nodeCriteria, 10);\n        }\n        return FunctionFormatter._getNodeFromMetadata(metadata, nodeId, foreignSource, foreignId);\n    }\n\n    static _getNodeFromMetadata(metadata, nodeId, foreignSource, foreignId) {\n        if (metadata && metadata.nodes) {\n            const ret = metadata.nodes.filter((node) => {\n                return (nodeId !== undefined && node.id === nodeId) ||\n                (foreignSource !== undefined && foreignId !== undefined &&\n                    node['foreign-source'] === foreignSource && node['foreign-id'] === foreignId);\n            })[0];\n            if (ret !== undefined) {\n                return ret;\n            }\n        }\n        //console.warn('Unable to locate node ' + [nodeId, foreignSource, foreignId].join(',') + ' in metadata.', metadata);\n        return null;\n    }\n\n    static _getResource(metadata, criteriaOrResourceId, partialResourceId) {\n        if (partialResourceId === undefined) {\n            for (const resource of metadata.resources) {\n                if (resource.id === criteriaOrResourceId) {\n                    return resource;\n                }\n            }\n        } else {\n            const node = FunctionFormatter._getNodeFromCriteria(metadata, criteriaOrResourceId);\n            if (node) {\n                const resource = FunctionFormatter._getResourceFromCriteria(metadata, partialResourceId, 'node[' + node['foreign-source'] + ':' + node['foreign-id'] + ']', 'node[' + node.id + ']');\n                if (resource) {\n                    return resource;\n                }\n            }\n        }\n        //console.warn('Unable to locate resource ' + [criteriaOrResourceId,partialResourceId].join('.') + ' in metadata.', metadata);\n        return null;\n    }\n\n    static _getResourceFromCriteria(metadata, resourceCriteria, ...nodeCriterias) {\n        if (metadata && metadata.resources) {\n            const ret = metadata.resources.filter((resource) => {\n                if (resource.id === resourceCriteria) return true;\n                for (const criteria of nodeCriterias.map(c => c + '.' + resourceCriteria)) {\n                    if (resource.id === criteria) {\n                        return true;\n                    }\n                }\n                return false;\n            })[0];\n            if (ret !== undefined) {\n                return ret;\n            }\n        }\n        //console.warn('Unable to locate resource ' + resourceCriteria + ' in metadata.', metadata);\n        return null;\n    }\n}","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","'use strict'\n\n/**\n * @module parenthesis\n */\n\nfunction parse (str, opts) {\n\t// pretend non-string parsed per-se\n\tif (typeof str !== 'string') return [str]\n\n\tvar res = [str]\n\n\tif (typeof opts === 'string' || Array.isArray(opts)) {\n\t\topts = {brackets: opts}\n\t}\n\telse if (!opts) opts = {}\n\n\tvar brackets = opts.brackets ? (Array.isArray(opts.brackets) ? opts.brackets : [opts.brackets]) : ['{}', '[]', '()']\n\n\tvar escape = opts.escape || '___'\n\n\tvar flat = !!opts.flat\n\n\tbrackets.forEach(function (bracket) {\n\t\t// create parenthesis regex\n\t\tvar pRE = new RegExp(['\\\\', bracket[0], '[^\\\\', bracket[0], '\\\\', bracket[1], ']*\\\\', bracket[1]].join(''))\n\n\t\tvar ids = []\n\n\t\tfunction replaceToken(token, idx, str){\n\t\t\t// save token to res\n\t\t\tvar refId = res.push(token.slice(bracket[0].length, -bracket[1].length)) - 1\n\n\t\t\tids.push(refId)\n\n\t\t\treturn escape + refId + escape\n\t\t}\n\n\t\tres.forEach(function (str, i) {\n\t\t\tvar prevStr\n\n\t\t\t// replace paren tokens till there’s none\n\t\t\tvar a = 0\n\t\t\twhile (str != prevStr) {\n\t\t\t\tprevStr = str\n\t\t\t\tstr = str.replace(pRE, replaceToken)\n\t\t\t\tif (a++ > 10e3) throw Error('References have circular dependency. Please, check them.')\n\t\t\t}\n\n\t\t\tres[i] = str\n\t\t})\n\n\t\t// wrap found refs to brackets\n\t\tids = ids.reverse()\n\t\tres = res.map(function (str) {\n\t\t\tids.forEach(function (id) {\n\t\t\t\tstr = str.replace(new RegExp('(\\\\' + escape + id + '\\\\' + escape + ')', 'g'), bracket[0] + '$1' + bracket[1])\n\t\t\t})\n\t\t\treturn str\n\t\t})\n\t})\n\n\tvar re = new RegExp('\\\\' + escape + '([0-9]+)' + '\\\\' + escape)\n\n\t// transform references to tree\n\tfunction nest (str, refs, escape) {\n\t\tvar res = [], match\n\n\t\tvar a = 0\n\t\twhile (match = re.exec(str)) {\n\t\t\tif (a++ > 10e3) throw Error('Circular references in parenthesis')\n\n\t\t\tres.push(str.slice(0, match.index))\n\n\t\t\tres.push(nest(refs[match[1]], refs))\n\n\t\t\tstr = str.slice(match.index + match[0].length)\n\t\t}\n\n\t\tres.push(str)\n\n\t\treturn res\n\t}\n\n\treturn flat ? res : nest(res[0], res)\n}\n\nfunction stringify (arg, opts) {\n\tif (opts && opts.flat) {\n\t\tvar escape = opts && opts.escape || '___'\n\n\t\tvar str = arg[0], prevStr\n\n\t\t// pretend bad string stringified with no parentheses\n\t\tif (!str) return ''\n\n\n\t\tvar re = new RegExp('\\\\' + escape + '([0-9]+)' + '\\\\' + escape)\n\n\t\tvar a = 0\n\t\twhile (str != prevStr) {\n\t\t\tif (a++ > 10e3) throw Error('Circular references in ' + arg)\n\t\t\tprevStr = str\n\t\t\tstr = str.replace(re, replaceRef)\n\t\t}\n\n\t\treturn str\n\t}\n\n\treturn arg.reduce(function f (prev, curr) {\n\t\tif (Array.isArray(curr)) {\n\t\t\tcurr = curr.reduce(f, '')\n\t\t}\n\t\treturn prev + curr\n\t}, '')\n\n\tfunction replaceRef(match, idx){\n\t\tif (arg[idx] == null) throw Error('Reference ' + idx + 'is undefined')\n\t\treturn arg[idx]\n\t}\n}\n\nfunction parenthesis (arg, opts) {\n\tif (Array.isArray(arg)) {\n\t\treturn stringify(arg, opts)\n\t}\n\telse {\n\t\treturn parse(arg, opts)\n\t}\n}\n\nparenthesis.parse = parse\nparenthesis.stringify = stringify\n\nmodule.exports = parenthesis\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","const directive = () => {\n  return {\n    templateUrl: 'public/plugins/opennms-helm-app/components/timeout.html',\n    restrict: 'E',\n    controller: 'OnmsTimeoutCtrl',\n    controllerAs: 'ctrl',\n    bindToController: true,\n    scope: {\n      current: '='\n    }\n  };\n};\n\nclass OnmsTimeoutCtrl {\n  /** @ngInject */\n  constructor() {\n      if (!this.current) {\n      console.log('no current controller!');\n      }\n    if (!this.current.jsonData.timeout) {\n      this.current.jsonData.timeout = 10;\n    }\n    this.patterns = {\n      timeout: /^\\d+$/\n    };\n  }\n}\n\nif (typeof angular !== 'undefined') {\n  angular.module('grafana.directives')\n    .directive('onmsTimeoutSettings', directive)\n    .controller('OnmsTimeoutCtrl', OnmsTimeoutCtrl);\n} else {\n  console.warn('Angular not found!  <onms-timeout> will not work!');\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","module.exports = __WEBPACK_EXTERNAL_MODULE__41__;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","export const QueryType = Object.freeze({\n  Attribute: 'attribute',\n  Expression: 'expression',\n  Filter: 'filter'\n});\n","import _ from 'lodash';\n\nfunction cartesianProductOfArrays(arrays) {\n  // Based on the code from http://stackoverflow.com/questions/15298912/\n  // javascript-generating-combinations-from-n-arrays-with-m-elements\n  var r = [], max = arrays.length - 1;\n\n  function helper(arr, i) {\n    for (var j = 0, l = arrays[i].length; j < l; j++) {\n      var a = arr.slice(0); // clone arr\n      a.push(arrays[i][j]);\n      if (i === max) {\n        r.push(a);\n      } else {\n        helper(a, i + 1);\n      }\n    }\n  }\n\n  helper([], 0);\n  return r;\n}\n\nfunction cartesianProductOfVariables(variables) {\n  // Collect the values from all of the variables\n  var allValues = [];\n  _.each(variables, function (variable) {\n    allValues.push(variable.value);\n  });\n\n  // Generate the cartesian product\n  var productOfAllValues = cartesianProductOfArrays(allValues);\n\n  // Rebuild the variables\n  var productOfAllVariables = [];\n  _.each(productOfAllValues, function (rowOfValues) {\n    var rowOfVariables = [];\n    for (var i = 0, l = variables.length; i < l; i++) {\n      // Deep clone\n      var variable = JSON.parse(JSON.stringify(variables[i]));\n      variable.value = rowOfValues[i];\n      rowOfVariables.push(variable);\n    }\n    productOfAllVariables.push(rowOfVariables);\n  });\n\n  return productOfAllVariables;\n}\n\nfunction defaultContainsVariable(value, variableName) {\n  if (_.isNull(value) || _.isEmpty(value)) {\n    return false;\n  }\n  return value.indexOf(\"$\" + variableName) >= 0;\n}\n\nfunction defaultReplace(value, variables) {\n  if (_.isNull(value) || _.isEmpty(value)) {\n    return value;\n  }\n  var interpolatedValue = value;\n  _.each(variables, function (variable) {\n    var regexVarName = \"\\\\$\" + variable.name.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    interpolatedValue = interpolatedValue.replace(new RegExp(regexVarName, \"g\"), variable.value);\n  });\n  return interpolatedValue;\n}\n\n/**\n * Replaces the object's attributes with the values of the referenced variables.\n *\n * If a referenced variable contains multiple values or if there are multiple referenced variables\n * then we generate copies of the object with all of the possible permutations.\n *\n * See interpolate_spec.js for examples.\n *\n * @param object\n *    the object to interpolate\n * @param attributes\n *    a list of attributes on a given object that should be checked for variables\n * @param variables\n *    a list of variables of the form [{name: 'varname', value: ['value1', 'value2']}, ...]\n * @param callback\n *    an optional callback made with the object after variable substitution has been performed\n * @param containsVariable\n *    optionally override the function used to determine if a string contains a reference to the named variable\n * @param replace\n *    optionally override the function used to substitute the variable reference in a string with the variables's value\n * @returns an array of objects, if no substitutions were performed, the array will contain the original object\n */\nexport function interpolate(object, attributes, variables, callback, containsVariable, replace) {\n  // Use default for the functions when undefined\n  if (callback === undefined) {\n    callback = () => {};\n  }\n  if (containsVariable === undefined) {\n    containsVariable = defaultContainsVariable;\n  }\n  if (replace === undefined) {\n    replace = defaultReplace;\n  }\n\n  // Add the index variable with a single value\n  var variablesWithIndex = _.clone(variables);\n  variablesWithIndex.push({name: 'index', value: [0]});\n\n  // Collect the list of variables that are referenced by one or more of the keys\n  var referencedVariables = [];\n  _.each(variablesWithIndex, function (variable) {\n    var isVariableReferenced = _.find(attributes, function (attribute) {\n      return containsVariable(object[attribute], variable.name);\n    });\n\n    if (isVariableReferenced) {\n      referencedVariables.push(variable);\n    }\n  });\n\n  if (referencedVariables.length < 1) {\n    // No variables are referenced, nothing to substitute\n    callback(object);\n    return [object];\n  }\n\n  // Generate all possible permutations of the referenced variable's values\n  var productOfAllVariables = cartesianProductOfVariables(referencedVariables);\n\n  // Perform the required variable substitution\n  var objects = [];\n  var index = 0;\n  _.each(productOfAllVariables, function (rowOfReferencedVariables) {\n    // Update the value of the index variable to reflect the index of the row\n    _.each(rowOfReferencedVariables, function (variable) {\n      if (variable.name === 'index') {\n        variable.value = 'idx' + index;\n        index += 1;\n      }\n    });\n\n    var o = _.clone(object);\n    _.each(attributes, function (attribute) {\n      o[attribute] = replace(o[attribute], rowOfReferencedVariables);\n    });\n\n    callback(o);\n\n    objects.push(o);\n  });\n\n  return objects;\n}\n","import {QueryType} from './constants';\nimport {interpolate} from \"./interpolate\";\nimport _ from 'lodash';\nimport {FunctionFormatter} from '../../lib/function_formatter';\n\nexport class OpenNMSDatasource {\n  /** @ngInject */\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    // This variable is referenced by the calculateInterval() method in metrics_panel_ctrl.ts\n    this.interval = (instanceSettings.jsonData || {}).timeInterval;\n\n    if (instanceSettings.jsonData && instanceSettings.jsonData.timeout) {\n        this.timeout = parseInt(instanceSettings.jsonData.timeout,10) * 1000;\n    }\n\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n\n    this.searchLimit = 25;\n    this.target = {};\n  }\n\n  doOpenNMSRequest(options) {\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      options.headers = options.headers || {};\n      options.headers.Authorization = this.basicAuth;\n    }\n\n    options.url = this.url + options.url;\n    if (this.timeout) {\n      options.timeout = this.timeout;\n    }\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  decorateError(err) {\n    let ret = err;\n    if (err.err) {\n      ret = err.err;\n    }\n    let statusText = ret.statusText || 'Request failed.';\n\n    // cancelled property causes the UI to never complete on failure\n    if (ret.cancelled) {\n      delete ret.cancelled;\n      statusText = 'Request timed out.';\n    }\n    if (err.cancelled) {\n      delete err.cancelled;\n      statusText = 'Request timed out.';\n    }\n\n    if (!ret.message) {\n      ret.message = statusText;\n    }\n    if (!ret.status) {\n      ret.status = 'error';\n    }\n    return ret;\n  }\n\n  query(options) {\n    const self = this;\n\n    // Generate the query\n    var [query, labels] = this.buildQuery(options);\n\n    // Issue the request\n    var request;\n    if (query.source.length > 0) {\n      request = this.doOpenNMSRequest({\n        url: '/rest/measurements',\n        data: query,\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'}\n      });\n    } else {\n      // There are no sources listed, let Grafana display \"No data points\" to the user\n      return this.$q.when({ data: [] });\n    }\n\n    return request\n      // Convert the results to the expected format\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          console.warn('Response code:',response);\n          return self.$q.reject(response);\n        }\n\n        return OpenNMSDatasource.processMeasurementsResponse(response);\n      })\n      // Sort resulting series by labels\n      .then((result) => {\n          result.data = _.sortBy(result.data, (s) => _.indexOf(labels, s.label));\n          return result;\n      })\n      .catch(err => {\n        return self.$q.reject(self.decorateError(err));\n      });\n  }\n\n  // Used for testing the connection from the datasource configuration page\n  testDatasource() {\n    return this.doOpenNMSRequest({\n      url: '/rest/info',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return {status: \"success\", message: \"Data source is working\", title: \"Success\"};\n      } else {\n        return {\n          status: \"danger\",\n          message: \"OpenNMS provided a response, but no metadata was found.\",\n          title: \"Unexpected Response \" + response.status\n        };\n      }\n    }).catch(err => {\n      return this.decorateError(err);\n    });\n  }\n\n  // Used by template queries\n  metricFindQuery(query) {\n    if (query === null || query === undefined || query === \"\") {\n      return this.$q.resolve([]);\n    }\n\n    var interpolatedQuery = _.first(this.interpolateValue(query));\n\n    if (interpolatedQuery !== undefined) {\n      const functions = FunctionFormatter.findFunctions(interpolatedQuery);\n\n      for (const func of functions) {\n        if (func.name === 'nodeFilter') {\n          return this.metricFindNodeFilterQuery.apply(this, func.arguments);\n        } else if (func.name === 'nodeResources') {\n          return this.metricFindNodeResourceQuery.apply(this, func.arguments);\n        } else {\n          console.warn('Unknown function in interpolated query: ' + interpolatedQuery, func);\n        }\n      }\n    }\n\n    return this.$q.resolve([]);\n  }\n\n  metricFindNodeFilterQuery(query) {\n    return this.doOpenNMSRequest({\n      url: '/rest/nodes',\n      method: 'GET',\n      params: {\n        filterRule: query,\n        limit: 0\n      }\n    }).then(function (response) {\n      if (response.data.count > response.data.totalCount) {\n        console.warn(\"Filter matches \" + response.data.totalCount + \" records, but only \" + response.data.count + \" will be used.\");\n      }\n      var results = [];\n      _.each(response.data.node, function (node) {\n        var nodeCriteria = node.id.toString();\n        if (node.foreignId !== null && node.foreignSource !== null) {\n          nodeCriteria = node.foreignSource + \":\" + node.foreignId;\n        }\n        results.push({text: node.label, value: nodeCriteria, expandable: true});\n      });\n      return results;\n    });\n  }\n\n  metricFindNodeResourceQuery(query) {\n    return this.doOpenNMSRequest({\n      url: '/rest/resources/' + encodeURIComponent(OpenNMSDatasource.getNodeResource(query)),\n      method: 'GET',\n      params: {\n        depth: 1\n      }\n    }).then(function (response) {\n      var results = [];\n      _.each(response.data.children.resource, function (resource) {\n        var resourceWithoutNodePrefix = resource.id.match(/node(Source)?\\[.*?\\]\\.(.*)/);\n        if (resourceWithoutNodePrefix) {\n          results.push({text: resourceWithoutNodePrefix[2], expandable: true});\n        }\n      });\n      return results;\n    });\n  }\n\n  buildQuery(options) {\n    const maxDataPoints = options.maxDataPoints || 300;\n    const intervalMs = options.intervalMs || 60 * 1000;\n\n    var self = this,\n      start = options.range.from.valueOf(),\n      end = options.range.to.valueOf(),\n      step = Math.floor((end - start) / maxDataPoints);\n      step = (step < intervalMs) ? intervalMs : step;\n\n    var query = {\n      \"start\": start,\n      \"end\": end,\n      \"step\": step,\n      \"relaxed\": true, // enable relaxed mode, which allows for missing attributes\n      \"maxrows\": maxDataPoints,\n      \"source\": [],\n      \"expression\": []\n    };\n\n    var labels = [];\n\n    _.each(options.targets, function (target) {\n      var transient = \"false\";\n      if (target.hide) {\n        transient = true;\n      }\n\n      if (target.type === QueryType.Attribute) {\n        if (!((target.nodeId && target.resourceId && target.attribute))) {\n          return;\n        }\n\n        var label = target.label;\n        if (label === undefined || label === '') {\n          label = target.attribute;\n        }\n\n        // Build the source\n        let source = {\n          \"aggregation\": target.aggregation,\n          \"attribute\": target.attribute,\n          \"label\": label,\n          \"resourceId\": target.resourceId,\n          \"nodeId\": target.nodeId, // temporary attribute used for interpolation\n          \"transient\": transient\n        };\n\n        if (target.subattribute !== undefined && target.subattribute !== '') {\n          source.datasource = target.subattribute;\n        }\n        if (target.fallbackAttribute !== undefined && target.fallbackAttribute !== '') {\n          source['fallback-attribute'] = target.fallbackAttribute;\n        }\n\n        // Perform variable substitution - may generate additional queries\n        source = self.interpolateSourceVariables(source, options.scopedVars, (interpolatedSource) => {\n            // Calculate the effective resource id after the interpolation\n            interpolatedSource.resourceId = OpenNMSDatasource.getRemoteResourceId(interpolatedSource.nodeId, interpolatedSource.resourceId);\n            delete interpolatedSource.nodeId;\n        });\n        query.source = query.source.concat(source);\n\n        labels = labels.concat(_.map(source, 'label'));\n\n      } else if (target.type === QueryType.Expression) {\n        if (!((target.label && target.expression))) {\n          return;\n        }\n\n        // Build the expression\n        let expression = {\n          \"label\": target.label,\n          \"value\": target.expression,\n          \"transient\": transient\n        };\n\n        // Perform variable substitution - may generate additional expressions\n        expression = self.interpolateExpressionVariables(expression, options.scopedVars);\n        query.expression = query.expression.concat(expression);\n\n        labels = labels.concat(_.map(expression, 'label'));\n\n      } else if (target.type === QueryType.Filter) {\n        if (!((target.filter))) {\n          return;\n        }\n\n        // Interpolate the filter parameters\n        var interpolatedFilterParms = self.interpolateVariables(target.filterParameters, _.keys(target.filterParameters), options.scopedVars);\n\n        var filters = _.map(interpolatedFilterParms, (filterParms) => {\n          // Build the filter definition\n          var parameters = [];\n          _.each(filterParms, function (value, key) {\n            // Skip parameters with undefined or empty values\n            if (value === undefined || value === '' || value === null) {\n              return;\n            }\n\n            parameters.push({\n              'key': key,\n              'value': value\n            });\n          });\n\n          return {\n            \"name\": target.filter.name,\n            \"parameter\": parameters\n          };\n        });\n\n        // Only add the filter attribute to the query when one or more filters are specified since\n        // OpenNMS versions before 17.0.0 do not support it\n        if (!query.filter) {\n          query.filter = filters;\n        } else {\n          query.filter = query.filter.concat(filters);\n        }\n      }\n    });\n\n    return [query, labels];\n  }\n\n  interpolateSourceVariables(source, scopedVars, callback) {\n    return this.interpolateVariables(source, ['nodeId', 'resourceId', 'attribute', 'datasource', 'label'], scopedVars, callback);\n  }\n\n  interpolateExpressionVariables(expression, scopedVars) {\n    return this.interpolateVariables(expression, ['value', 'label'], scopedVars);\n  }\n\n  interpolateValue(value, scopedVars) {\n    return _.map(this.interpolateVariables({'value': value}, ['value'], scopedVars), function(entry) {\n      return entry.value;\n    });\n  }\n\n  interpolateVariables(object, attributes, scopedVars, callback) {\n    // Reformat the variables to work with our interpolate function\n    var variables = [];\n    _.each(this.templateSrv.variables, function(templateVariable) {\n      var variable = {\n        name: templateVariable.name,\n        value: []\n      };\n\n      // If this templateVar exists in scopedVars, we need to look at the scoped values\n      if (scopedVars && scopedVars[variable.name] !== undefined) {\n        variable.value.push(scopedVars[variable.name].value);\n      } else {\n        // Single-valued?\n        if (_.isString(templateVariable.current.value)) {\n          variable.value.push(templateVariable.current.value);\n        } else {\n          _.each(templateVariable.current.value, function(value) {\n            if (value === \"$__all\") {\n              _.each(templateVariable.options, function(option) {\n                // \"All\" is part of the options, so make sure to skip that one\n                if (option.value !== \"$__all\") {\n                  variable.value.push(option.value);\n                }\n              });\n            } else {\n              variable.value.push(value);\n            }\n          });\n        }\n      }\n\n      variables.push(variable);\n    });\n    return interpolate(object, attributes, variables, callback);\n  }\n\n  static processMeasurementsResponse(response) {\n    var labels = response.data.labels;\n    var columns = response.data.columns;\n    var timestamps = response.data.timestamps;\n    var metadata = response.data.metadata;\n    var series = [];\n    var i, j, nRows, nCols, datapoints;\n    var value, atLeastOneNonNaNValue;\n\n    if (timestamps !== undefined) {\n      nRows = timestamps.length;\n      nCols = columns.length;\n\n      for (i = 0; i < nCols; i++) {\n        atLeastOneNonNaNValue = false;\n        datapoints = [];\n        for (j = 0; j < nRows; j++) {\n          // Skip rows that are out-of-ranges - this can happen with RRD data in narrow time spans\n          if (timestamps[j] < response.data.start || timestamps[j] > response.data.end) {\n            continue;\n          }\n\n          value = columns[i].values[j];\n          // Replace literal 'NaN' values with nulls\n          if (value === 'NaN') {\n            value = null;\n          }\n\n          if (!atLeastOneNonNaNValue && !isNaN(value)) {\n            atLeastOneNonNaNValue = true;\n          }\n          datapoints.push([value, timestamps[j]]);\n        }\n\n        let label = labels[i];\n        if (metadata && metadata.resources) {\n          label = FunctionFormatter.format(label, metadata);\n        }\n\n        // Skip series that are all NaNs\n        // When querying in relaxed mode, expressions that operate against attribute that are missing may only contain\n        // NaNs. In this case, we don't want to show them at all.\n        if (atLeastOneNonNaNValue) {\n          series.push({\n            target: label,\n            label: labels[i],\n            datapoints: datapoints\n          });\n        }\n      }\n    }\n\n    return {data: series};\n  }\n\n  static flattenResourcesWithAttributes(resources, resourcesWithAttributes) {\n    _.each(resources, function (resource) {\n      if (resource.rrdGraphAttributes !== undefined && Object.keys(resource.rrdGraphAttributes).length > 0) {\n        resourcesWithAttributes.push(resource);\n      }\n      if (resource.children !== undefined && resource.children.resource.length > 0) {\n        OpenNMSDatasource.flattenResourcesWithAttributes(resource.children.resource, resourcesWithAttributes);\n      }\n    });\n    return resourcesWithAttributes;\n  }\n\n  static getNodeResource(nodeId) {\n    var prefix = \"\";\n    if (nodeId.indexOf(\":\") > 0) {\n      prefix = \"nodeSource[\";\n    } else {\n      prefix = \"node[\";\n    }\n    return prefix + nodeId + \"]\";\n  }\n\n  static getRemoteResourceId(nodeId, resourceId) {\n    return OpenNMSDatasource.getNodeResource(nodeId) + \".\" + resourceId;\n  }\n\n  searchForNodes(query) {\n    return this.doOpenNMSRequest({\n      url: '/rest/nodes',\n      method: 'GET',\n      params: {\n        limit: this.searchLimit,\n        match: 'any',\n        comparator: 'ilike',\n        orderBy: 'id',\n        order: 'asc',\n        label: '%' + query + '%',\n        sysName: '%' + query + '%',\n        'ipInterface.ipAddress': '%' + query + '%',\n        'ipInterface.ipHostName': '%' + query + '%',\n        'foreignId': query + '%' // doesn't support leading '%'\n      }\n    });\n  }\n\n  getResourcesWithAttributesForNode(nodeId) {\n    var interpolatedNodeId = _.first(this.interpolateValue(nodeId));\n\n    return this.doOpenNMSRequest({\n      url: '/rest/resources/fornode/' + encodeURIComponent(interpolatedNodeId),\n      method: 'GET',\n      params: {\n        depth: -1\n      }\n    }).then(function (results) {\n      return OpenNMSDatasource.flattenResourcesWithAttributes([results.data], []);\n    });\n  }\n\n  getAvailableFilters() {\n    return this.doOpenNMSRequest({\n      url: '/rest/measurements/filters',\n      method: 'GET'\n    });\n  }\n\n  suggestAttributes(nodeId, resourceId, query) {\n    var interpolatedNodeId = _.first(this.interpolateValue(nodeId)),\n        interpolatedResourceId = _.first(this.interpolateValue(resourceId));\n    var remoteResourceId = OpenNMSDatasource.getRemoteResourceId(interpolatedNodeId, interpolatedResourceId);\n\n    return this.doOpenNMSRequest({\n      url: '/rest/resources/' + encodeURIComponent(remoteResourceId),\n      method: 'GET',\n      params: {\n        depth: -1\n      }\n    }).then(function (results) {\n      query = query.toLowerCase();\n      var attributes = [];\n      _.each(results.data.rrdGraphAttributes, function (value, key) {\n        if (key.toLowerCase().indexOf(query) >= 0) {\n          attributes.push(key);\n        }\n      });\n      attributes.sort();\n\n      return attributes;\n    });\n  }\n}\n","class ModalCtrl {\n  /** @ngInject */\n  constructor($scope) {\n    this.$scope = $scope;\n    this.query = \"\";\n    this.selectedRow = null;\n\n    this.searchForRows();\n  }\n\n  searchForRows() {\n    var self = this;\n    this.searching = true;\n    this.$scope.search(this.query)\n      .then(function (results) {\n        // Reset the selected row\n        self.selectedRow = null;\n        // Add the results to the scope\n        self.rows = results.rows;\n        self.count = results.count;\n        self.totalCount = results.totalCount;\n        // We're done\n        self.searching = false;\n      }, function () {\n        self.searching = false;\n      });\n  }\n\n  setClickedRow(index) {\n    if (this.selectedRow === index) {\n      this.selectedRow = null;\n    } else {\n      this.selectedRow = index;\n      // Keep a reference to the row when the selection is made\n      this.row = this.rows[this.selectedRow];\n    }\n  }\n\n  cancel() {\n    this.$scope.result.reject();\n    this.$scope.dismiss();\n  }\n\n  ok() {\n    if (this.selectedRow !== null) {\n      this.$scope.result.resolve(this.row);\n    } else {\n      this.$scope.result.reject();\n    }\n    this.$scope.dismiss();\n  }\n}\n\nif (typeof angular !== 'undefined') {\n  angular.module('grafana.controllers')\n    .controller('OpenNMSModalSelectionCtrl', ModalCtrl);\n}\n","import './modal_ctrl';\nimport {QueryType} from './constants';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport appEvents from 'app/core/app_events';\nimport _ from 'lodash';\n\nexport class OpenNMSQueryCtrl extends QueryCtrl {\n  /** @ngInject */\n  constructor($rootScope, $scope, $injector, $q, $modal) {\n    super($scope, $injector);\n\n    this.types = QueryType;\n\n    this.error = this.validateTarget();\n    this.$rootScope = $rootScope;\n    this.$q = $q;\n    this.$modal = $modal;\n  }\n\n  openNodeSelectionModal() {\n    var self = this;\n    this.showSelectionModal(\"nodes\", {\n      '#': 'id',\n      'Label': 'label',\n      'Foreign ID': 'foreignId',\n      'sysName': 'sysName'\n    }, function (query) {\n      return self.datasource\n        .searchForNodes(query)\n        .then(function (results) {\n          return {\n            'count': results.data.count,\n            'totalCount': results.data.totalCount,\n            'rows': results.data.node\n          };\n        });\n    }, function (node) {\n      if (!_.isUndefined(node.foreignId) && !_.isNull(node.foreignId) &&\n        !_.isUndefined(node.foreignSource) && !_.isNull(node.foreignSource)) {\n        // Prefer fs:fid\n        self.target.nodeId = node.foreignSource + \":\" + node.foreignId;\n      } else {\n        // Fallback to node id\n        self.target.nodeId = node.id;\n      }\n      self.targetBlur('nodeId');\n    });\n  }\n\n  openResourceSelectionModal() {\n    var self = this;\n\n    function filterResources(resources, query) {\n      var filteredResources = resources;\n      if (query.length >= 1) {\n        query = query.toLowerCase();\n        filteredResources = _.filter(resources, function (resource) {\n          return resource.key.indexOf(query) >= 0;\n        });\n      }\n\n      // Limit the results - it takes along time to render if there are too many\n      var totalCount = filteredResources.length;\n      filteredResources = _.take(filteredResources, self.datasource.searchLimit);\n\n      return {\n        'count': filteredResources.length,\n        'totalCount': totalCount,\n        'rows': filteredResources\n      };\n    }\n\n    self.nodeResources = undefined;\n    this.showSelectionModal(\"resources\", {\n      'Label': 'label',\n      'Name': 'name'\n    }, function (query) {\n      if (self.nodeResources !== undefined) {\n        var deferred = self.$q.defer();\n        deferred.resolve(filterResources(self.nodeResources, query));\n        return deferred.promise;\n      }\n\n      return self.datasource.getResourcesWithAttributesForNode(self.target.nodeId)\n        .then(function (resources) {\n          // Compute a key for more efficient searching\n          _.each(resources, function (resource) {\n            resource.key = resource.label.toLowerCase() + resource.name.toLowerCase();\n          });\n          // Sort the list once\n          self.nodeResources = _.sortBy(resources, function (resource) {\n            return resource.label;\n          });\n          // Filter\n          return filterResources(self.nodeResources, query);\n        });\n    }, function (resource) {\n      // Exclude the node portion of the resource id\n      var re = /node(Source)?\\[.*?]\\.(.*)$/;\n      var match = re.exec(resource.id);\n      self.target.resourceId = match[2];\n      self.targetBlur('resourceId');\n    });\n  }\n\n  openAttributeSelectionModal(prop) {\n    var self = this;\n\n    if (!prop) {\n      prop = 'attribute';\n    }\n\n    this.showSelectionModal(\"attributes\", {\n      'Name': 'name'\n    }, function (query) {\n      return self.datasource\n        .suggestAttributes(self.target.nodeId, self.target.resourceId, query)\n        .then(function (attributes) {\n          var namedAttributes = [];\n          _.each(attributes, function (attribute) {\n            namedAttributes.push({'name': attribute});\n          });\n\n          return {\n            'count': namedAttributes.length,\n            'totalCount': namedAttributes.length,\n            'rows': namedAttributes\n          };\n        });\n    }, function (attribute) {\n      self.target[prop] = attribute.name;\n      self.targetBlur(prop);\n    });\n  }\n\n  openFilterSelectionModal() {\n    var self = this;\n    this.showSelectionModal(\"filters\", {\n      'Name': 'name',\n      'Description': 'description',\n      'Backend': 'backend'\n    }, function () {\n      return self.datasource\n        .getAvailableFilters()\n        .then(function (results) {\n          return {\n            'count': results.data.length,\n            'totalCount': results.data.length,\n            'rows': results.data\n          };\n        });\n    }, function (filter) {\n      self.target.filter = filter;\n      self.targetBlur('filter');\n    });\n  }\n\n  showSelectionModal(label, columns, search, callback) {\n    var scope = this.$rootScope.$new();\n\n    scope.label = label;\n    scope.columns = columns;\n    scope.search = search;\n\n    scope.result = this.$q.defer();\n    scope.result.promise.then(callback);\n\n    var modal = this.$modal({\n      template: 'public/plugins/opennms-helm-app/datasources/perf-ds/partials/modal.selection.html',\n      persist: false,\n      show: false,\n      scope: scope,\n      keyboard: false\n    });\n    this.$q.when(modal).then(function (modalEl) { modalEl.modal('show'); });\n  }\n\n  targetBlur(targetId, required) {\n    if (required === undefined) {\n      required = true;\n    }\n    var errorMessage = this.validateTarget(targetId, required);\n    if (errorMessage) {\n      appEvents.emit('alert-error', ['Error', errorMessage]);\n      this.error = errorMessage;\n    } else {\n      // Only send valid requests to the API\n      this.refresh();\n    }\n  }\n\n  validateTarget(targetId, required) {\n    if (this.target.type === QueryType.Attribute || this.target.type === QueryType.Expression) {\n      var messages = {\n        'nodeId': \"You must supply a node id.\",\n        'resourceId': \"You must supply a resource id.\",\n        'attribute': \"You must supply an attribute.\",\n        'expression': \"You must supply an expression.\",\n        'label': \"You must supply a label.\"\n      };\n      if (required && targetId in messages && !this.target[targetId]) {\n        return messages[targetId];\n      } else if (required && !this.target[targetId]) {\n        // Fallback error message if the targetId doesn't have a specific message defined\n        return targetId + ' is a required field.';\n      }\n    } else if (this.target.type === QueryType.Filter) {\n      if (targetId == 'filterName' && (!this.target.filter || !this.target.filter.name)) {\n        return \"You must select a filter.\";\n      } else if (required && (!this.target.filterParameters || !(targetId in this.target.filterParameters) || !this.target.filterParameters[targetId])) {\n        return targetId + ' is a required field.';\n      }\n    }\n    return null;\n  }\n\n  getCollapsedText() {\n    if (this.target.type === QueryType.Attribute) {\n      return \"Attribute: \" + this.target.attribute;\n    } else if (this.target.type === QueryType.Expression) {\n      return \"Expression: \" + this.target.label;\n    } else if (this.target.type === QueryType.Filter) {\n      return \"Filter: \" + this.target.filter.name;\n    } else {\n      return \"<Incomplete>\";\n    }\n  }\n}\n\nOpenNMSQueryCtrl.templateUrl = 'datasources/perf-ds/partials/query.editor.html';\n","import {OpenNMSDatasource} from './datasource';\nimport {OpenNMSQueryCtrl} from './query_ctrl';\nimport {loadPluginCss} from 'app/plugins/sdk';\nimport '../../components/timeout';\n\nclass GenericConfigCtrl {}\nGenericConfigCtrl.templateUrl = 'datasources/perf-ds/partials/config.html';\n\nclass GenericQueryOptionsCtrl {}\nGenericQueryOptionsCtrl.templateUrl = 'datasources/perf-ds/partials/query.options.html';\n\nloadPluginCss({\n  dark: 'plugins/opennms-helm-app/datasources/perf-ds/css/opennms.dark.css',\n  light: 'plugins/opennms-helm-app/datasources/perf-ds/css/opennms.light.css'\n});\n\nexport {\n  OpenNMSDatasource as Datasource,\n  OpenNMSQueryCtrl as QueryCtrl,\n  GenericConfigCtrl as ConfigCtrl,\n  GenericQueryOptionsCtrl as QueryOptionsCtrl\n};\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;"],"sourceRoot":""}