{"version":3,"sources":["../../src/lib/client_delegate.js"],"names":["API","Client","Rest","DAO","_","ClientDelegate","settings","backendSrv","$q","type","url","name","searchLimit","jsonData","timeout","parseInt","authConfig","undefined","basicAuth","token","split","decodedToken","atob","username","password","substring","length","OnmsAuthConfig","server","OnmsServer","http","GrafanaHTTP","client","clientWithMetadata","self","getMetadata","then","metadata","apiVersion","Error","catch","e","deferred","defer","success","resolve","error","reject","promise","getClientWithMetadata","alarms","filter","getAlarmDao","alarmDao","find","alarmId","get","user","escalate","clear","unacknowledge","acknowledge","action","supportedActions","indexOf","message","datasourceRequest","method","sticky","saveStickyMemo","deleteStickyMemo","journal","saveJournalMemo","deleteJournalMemo","operators","map","Operators","operator","id","label","when","searchProperties","propertyId","getProperties","properties","property","findProperty","comparators","getComparators","console","log","Comparators","EQ","c","flows","N","start","end","step","includeOther","nodeCriteria","interfaceId","getFlowDao","flowDao","getSeriesForTopNApplications","getSeriesForTopNConversations","getSummaryForTopNApplications","getSummaryForTopNConversations","getExporters","getExporter"],"mappings":"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","file":"client_delegate.js","sourcesContent":["import {API, Client, Rest, DAO} from '../opennms';\nimport _ from 'lodash';\n\nexport class ClientDelegate {\n\n    constructor(settings, backendSrv, $q) {\n        this.type = settings.type;\n        this.url = settings.url;\n        this.name = settings.name;\n        this.backendSrv = backendSrv;\n        this.searchLimit = 1000;\n        this.$q = $q;\n\n        if (settings.jsonData && settings.jsonData.timeout) {\n            this.timeout = parseInt(settings.jsonData.timeout,10) * 1000;\n        }\n\n        let authConfig = undefined;\n        if (settings.basicAuth) {\n          // If basic auth is configured, pass the username and password to the client\n          // This allows the datasource to work in direct mode\n          // We need the raw username and password, so we decode the token\n          const token = settings.basicAuth.split(' ')[1];\n          const decodedToken = atob(token);\n          const username = decodedToken.split(':')[0];\n          const password = decodedToken.substring(username.length+1, decodedToken.length);\n          authConfig = new API.OnmsAuthConfig(username, password);\n        }\n\n        let server = new API.OnmsServer(this.name, this.url, authConfig);\n        let http = new Rest.GrafanaHTTP(this.backendSrv, server, this.timeout);\n        this.client = new Client(http);\n        this.client.server = server;\n        this.clientWithMetadata = undefined;\n     }\n\n    getClientWithMetadata() {\n        if (!this.clientWithMetadata) {\n              let self = this;\n              let client = Client.getMetadata(self.client.server, self.client.http, self.timeout)\n                .then(function(metadata) {\n                    // Ensure the OpenNMS we are talking to is compatible\n                    if (metadata.apiVersion() !== 2) {\n                        throw new Error(\"Unsupported Version\");\n                    }\n                    self.client.server.metadata = metadata;\n                    return self.client;\n                }).catch(function(e) {\n                    // in case of error, reset the client, otherwise\n                    // the datasource may never recover\n                    self.clientWithMetadata = void 0;\n                    throw e;\n                });\n\n          // Grafana functions that invoke the datasource expect the\n          // promise to be one that is returned by $q.\n          let deferred = this.$q.defer();\n          client.then((success) => deferred.resolve(success)).catch((error) => deferred.reject(error));\n          this.clientWithMetadata = deferred.promise;\n        }\n        return this.clientWithMetadata;\n    }\n\n    // Fault related functions\n\n    getAlarmDao() {\n        return this.getClientWithMetadata().then(function(client) {\n            return client.alarms();\n        });\n    }\n\n    findAlarms(filter) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                return alarmDao.find(filter);\n            });\n    }\n\n    getAlarm(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n            return alarmDao.get(alarmId);\n        });\n    }\n\n    doEscalate(alarmId, user) {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.escalate(alarmId, user)\n            });\n    }\n\n    doClear(alarmId, user) {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.clear(alarmId, user);\n            });\n    }\n\n    doUnack(alarmId, user) {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.unacknowledge(alarmId, user);\n            });\n    }\n\n    doAck(alarmId, user) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                return alarmDao.acknowledge(alarmId, user);\n            });\n    }\n\n    doTicketAction(alarmId, action) {\n        const supportedActions = [\"create\", \"update\", \"close\"];\n        if (supportedActions.indexOf(action) < 0) {\n            throw {message: \"Action '\" + action + \"' not supported.\"};\n        }\n        const self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/alarms/' + alarmId + \"/ticket/\" + action,\n            method: 'POST',\n        });\n    }\n\n    saveSticky(alarmId, sticky, user) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.saveStickyMemo(alarmId, sticky, user);\n        });\n    }\n\n    deleteSticky(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.deleteStickyMemo(alarmId);\n        });\n    }\n\n    saveJournal(alarmId, journal, user) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.saveJournalMemo(alarmId, journal, user);\n        });\n    }\n\n    deleteJournal(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.deleteJournalMemo(alarmId);\n        });\n    }\n\n    findOperators() {\n        const operators = _.map(API.Operators, function(operator) {\n            return {\n                id: operator.id,\n                label: operator.label\n            }\n        });\n        return this.$q.when(operators);\n    }\n\n    getProperties() {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.searchProperties();\n            });\n    }\n\n    findProperty(propertyId) {\n        return this.getProperties()\n            .then(properties => {\n                return _.find(properties, function(property) {\n                    return property.id === propertyId;\n                });\n            })\n    }\n\n    getPropertyComparators(propertyId) {\n        return this.findProperty(propertyId)\n            .then(property => {\n                if (property) {\n                    const comparators = property.type.getComparators();\n                    if (comparators && comparators.length > 0) {\n                        return comparators;\n                    }\n                }\n                console.log(\"No comparators found for property with id '\" + propertyId + \"'. Falling back to EQ.\");\n                // This may be the case when the user entered a property, which does not exist\n                // therefore fallback to EQ\n                return [ API.Comparators.EQ ];\n            });\n    }\n\n    // Flow related functions\n\n    getFlowDao() {\n        return this.getClientWithMetadata().then(function(c) {\n            return c.flows();\n        });\n    }\n\n    getSeriesForTopNApplications(N, start, end, step, includeOther, nodeCriteria, interfaceId) {\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getSeriesForTopNApplications(N, start, end, step, includeOther, nodeCriteria, interfaceId);\n            });\n    }\n\n    getSeriesForTopNConversations(N, start, end, step, nodeCriteria, interfaceId) {\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getSeriesForTopNConversations(N, start, end, step, nodeCriteria, interfaceId);\n            });\n    }\n\n    getSummaryForTopNApplications(N, start, end, includeOther, nodeCriteria, interfaceId) {\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getSummaryForTopNApplications(N, start, end, includeOther, nodeCriteria, interfaceId);\n            });\n    }\n\n    getSummaryForTopNConversations(N, start, end, nodeCriteria, interfaceId) {\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getSummaryForTopNConversations(N, start, end, nodeCriteria, interfaceId);\n            });\n    }\n\n    getExporters() {\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getExporters(10);\n            });\n    }\n\n    getExporter(nodeCriteria) {\n        return this.getFlowDao()\n            .then(function(flowDao) {\n                return flowDao.getExporter(nodeCriteria, 10);\n            });\n    }\n}"]}