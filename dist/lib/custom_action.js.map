{"version":3,"sources":["../../src/lib/custom_action.js"],"names":["makeVariableRE","variableName","reString","replace","escapeRE","RegExp","getMatch","value","_","isNull","isEmpty","match","exec","parsed","parseInt","ret","token","variable","Number","isInteger","index","undefined","length","getValue","v","failed","urlValue","toString","label","getValueForMatch","key","model","indexed","Array","isArray","name","type","valueString","parm","filter","p","console","warn","text","escaped","Symbol","CustomAction","data","url","Error","Object","freeze","interpolated","keys","encodeURIComponent","passed","interpolate","log","window","open"],"mappings":"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","file":"custom_action.js","sourcesContent":["import _ from 'lodash';\n\nconst failed = Symbol('failed');\nconst escapeRE = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g; // eslint-disable-line no-useless-escape\n\nfunction makeVariableRE(variableName) {\n  const reString = '\\\\$(' + variableName.replace(escapeRE, '\\\\$&') + ')\\\\b(\\\\[(.*?)\\\\])?';\n  return new RegExp(reString, 'g');\n}\n\nexport function getMatch(value, variableName) {\n  if (_.isNull(value) || _.isEmpty(value)) {\n    return false;\n  }\n\n  const match = makeVariableRE(variableName).exec(value);\n  if (match) {\n    const parsed = parseInt(match[3], 10);\n    const ret = {\n      token: match[0],\n      variable: match[1]\n    };\n    if (Number.isInteger(parsed)) {\n      ret.index = parsed;\n      return ret;\n    } else if (match[3] !== undefined && match[3].length > 0) {\n      ret.index = match[3];\n      return ret;\n    } else if (match[3] === undefined || match[3] === '') {\n      return ret;\n    }\n  }\n  return null;\n}\n\nfunction getValue(v) {\n  let ret = failed;\n  if (v) {\n    ret = v;\n    if (v.urlValue) {\n      // implements IHasUrlValue in OpenNMS.js\n      ret = v.urlValue;\n    } else {\n      // fallback, try to guess at the proper string type\n      if (v.toString) {\n        ret = v.toString();\n      }\n      if (v.label) {\n        ret = v.label;\n      }\n    }\n  }\n  return ret;\n}\n\nfunction getValueForMatch(match, key, model) {\n  let ret = undefined;\n  if (match) {\n    if (match.index) {\n      const v = model[key];\n      if (v) {\n        let indexed = v[match.index];\n        if (Array.isArray(v)\n          && v.length > 0\n          && v[0]\n          && v[0].name && v[0].type && v[0].valueString // can't do TypeScript instanceOf() at runtime\n          && typeof match.index === 'string') {\n          // special case, handle named event parameters\n          const parm = v.filter((p) => {\n            return p.name === match.index;\n          })[0];\n          ret = getValue(parm);\n        } else {\n          ret = getValue(indexed);\n        }\n      } else {\n        console.warn('Indexed match ($' + key + '[' + match.index + ']) does not exist.');\n        ret = failed;\n      }\n    } else {\n      ret = getValue(model[key]);\n    }\n  }\n  return ret;\n}\n\nexport function replace(text, match, value) {\n  const escaped = new RegExp(match.replace(escapeRE, '\\\\$&'), 'g');\n  return text.replace(escaped, value);\n}\n\nexport class CustomAction {\n  constructor(data, url) {\n    if (url) {\n      this.label = data;\n      this.url = url;\n    } else {\n      this.url = data.url;\n      this.label = data.label;\n    }\n    if (!this.label || !this.url) {\n      throw new Error('label and url are required!');\n    }\n    Object.freeze(this);\n  }\n\n  interpolate(model) {\n    let interpolated = this.url;\n    if (model) {\n      for (const key of Object.keys(model)) {\n        const match = getMatch(interpolated, key);\n        if (match) {\n          let value = getValueForMatch(match, key, model);\n          if (value === failed) {\n            value = '';\n          }\n\n          value = encodeURIComponent(value);\n          interpolated = replace(interpolated, match.token, value);\n        }\n      }\n    }\n    return interpolated;\n  }\n\n  validate(model) {\n    const interpolated = this.url;\n    let passed = true;\n    if (model) {\n      for (const key of Object.keys(model)) {\n        const match = getMatch(interpolated, key);\n        const value = getValueForMatch(match, key, model);\n        if (value === failed) {\n          passed = false;\n        }\n      }\n    }\n    return passed;\n  }\n\n  open(model) {\n    const interpolated = this.interpolate(model);\n    console.log('opening: ' + interpolated);\n    window.open(interpolated, '_blank');\n  }\n}"]}