{"version":3,"sources":["../../../src/panels/alarm-table/module.js"],"names":["_","$","MetricsPanelCtrl","loadPluginCss","transformDataToTable","tablePanelEditor","columnOptionsTab","TableRenderer","coreModule","alarmDetailsAsDirective","memoEditorAsDirective","contextMenuAsDirective","SelectionMgr","ActionMgr","dark","light","doubleClickDelay","AlarmTableCtrl","$scope","$injector","$rootScope","annotationsSrv","$sanitize","$compile","backendSrv","datasourceSrv","timeSrv","panelDefaults","targets","transform","pageSize","showHeader","styles","type","pattern","displayAs","width","dateFormat","sanitize","unit","decimals","alias","colors","colorMode","thresholds","columns","text","scroll","fontSize","sort","col","desc","severity","pageIndex","panel","fields","defaults","self","selectionMgr","from","to","getRowsInRange","render","events","on","onDataReceived","bind","onDataError","onInitEditMode","severityIcons","undefined","unshift","hidden","title","style","table","rows","map","row","refreshAppConfig","get","then","result","jsonData","appConfig","console","warn","addEditorTab","datasource","setTimeQueryStart","getAnnotations","dashboard","range","data","annotations","dataRaw","dataList","length","renderer","isTimezoneUtc","colIndex","scope","elem","attrs","ctrl","pageCount","getColumnStyle","ret","clip","getTableHeight","panelHeight","height","appendTableRows","tbodyElem","setTable","empty","html","contents","switchPage","e","el","currentTarget","parseInt","renderPanel","appendPaginationControls","footerElem","Math","ceil","startPage","max","endPage","min","paginationList","i","activeClass","pageLinkElem","append","panelElem","parents","rootElem","find","css","addClass","unbindDestroy","$on","off","renderData","renderingCompleted","source","alarmId","matchedRow","each","filteredRow","meta","alarm","id","$event","isRowSelected","onSingleClick","selectedRows","getSelectedRows","tableRow","findTableRow","Object","assign","ticketerConfig","filter","getContextMenu","clickTime","clicks","thisEvent","alarmClick","button","clearTimeout","timeout","setTimeout","lastClick","now","Date","delay","onDoubleClick","scheduleClickCheck","isMac","navigator","platform","toUpperCase","indexOf","exclusiveModifier","metaKey","ctrlKey","rangeModifier","shiftKey","handleRowClick","handleSelection","alarmDetails","appEvent","newScope","$new","templateHtml","action","ds","message","name","error","refreshDashboard","catch","err","performAlarmActionOnDatasource","findIdx","findIndex","selectionToMatch","startIdx","endIdx","push","templateUrl","directive","$window","link","element","innerHeight"],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport {transformDataToTable} from './transformers';\nimport {tablePanelEditor} from './editor';\nimport {columnOptionsTab} from './column_options';\nimport {TableRenderer} from './renderer';\nimport coreModule from 'app/core/core_module';\nimport {alarmDetailsAsDirective} from './alarm_details';\nimport {memoEditorAsDirective} from \"./memo_editor\"\nimport {contextMenuAsDirective} from \"./context_menu\";\nimport {loadPluginCss} from 'app/plugins/sdk';\nimport {SelectionMgr} from \"./selection_mgr\";\nimport {ActionMgr} from \"./action_mgr\";\n\nloadPluginCss({\n  dark: 'plugins/opennms-helm-app/panels/alarm-table/css/table.dark.css',\n  light: 'plugins/opennms-helm-app/panels/alarm-table/css/table.light.css'\n});\n\nconst doubleClickDelay = 250;\n\nclass AlarmTableCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope, annotationsSrv, $sanitize, $compile, backendSrv, datasourceSrv, timeSrv) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.annotationsSrv = annotationsSrv;\n    this.$sanitize = $sanitize;\n    this.$compile = $compile;\n    this.backendSrv = backendSrv;\n    this.datasourceSrv = datasourceSrv;\n    this.timeSrv = timeSrv;\n\n    let panelDefaults = {\n      targets: [{}],\n      transform: 'table',\n      pageSize: 5,\n      showHeader: true,\n      styles: [\n        {\n          type: 'severity',\n          pattern: 'Severity',\n          displayAs: 'icon',\n        },\n        {\n          type: 'checkbox',\n          pattern: '/^Is /',\n          width: '9em',\n        },\n        {\n          type: 'date',\n          pattern: '/.*Time/', // Render all \"* Time\" columns as date, e.g. \"Last Event Time\", \"First Event Time\", etc.\n          dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        },\n        {\n          type: 'date',\n          pattern: 'Suppressed Until',\n          dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        },\n        {\n          type: 'string',\n          pattern: '/.*ID/', // Render all \"* ID\" columns as string, otherwise ID 1000 appears as 1.0 K\n        },\n        {\n          type: 'string',\n          pattern: 'Description',\n          sanitize: true\n        },\n        {\n          type: 'string',\n          pattern: 'Log Message',\n          sanitize: true\n        },\n        {\n          unit: 'short',\n          type: 'number',\n          decimals: 0,\n          pattern: 'Count',\n        },\n        {\n          unit: 'short',\n          type: 'number',\n          alias: '',\n          decimals: 2,\n          colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n          colorMode: null,\n          pattern: '/.*/',\n          thresholds: [],\n        }\n      ],\n      columns: [\n          {text: 'Severity'},\n          {text: 'UEI'},\n          {text: 'Log Message'},\n          {text: 'Node Label'},\n          {text: 'Count'},\n          {text: 'Last Event Time'},\n        ],\n      scroll: false, // disable scrolling as the actions popup is not working properly otherwise\n      fontSize: '100%',\n      sort: {col: 0, desc: true},\n      severity: true\n    };\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, panelDefaults);\n\n    let self = this;\n    this.selectionMgr = new SelectionMgr((from,to) => self.getRowsInRange(from,to), () => self.render());\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    if (this.panel.severity === true) {\n      this.panel.severity = 'row';\n    }\n\n    if (this.panel.severityIcons === true) {\n      delete this.panel.severityIcons;\n      if (this.panel.sort && this.panel.sort.col !== undefined) {\n        this.panel.sort.col++;\n      }\n      this.panel.styles.unshift({\n        type: 'severity',\n        pattern: 'Severity',\n        displayAs: 'icon'\n      });\n      this.panel.columns.unshift({\n        hidden: false,\n        text: 'Severity',\n        title: 'Severity',\n        style: {\n          type: 'severity',\n          pattern: 'Severity',\n          displayAs: 'icon'\n        }\n      });\n      if (this.table && this.table.rows) {\n        // put a placeholder value in until data refreshes\n        this.table.rows = this.table.rows.map((row) => {\n          row.unshift(undefined);\n        });\n      }\n    }\n\n    self.refreshAppConfig();\n  }\n\n  refreshAppConfig() {\n    const self = this;\n    self.backendSrv.get(`/api/plugins/opennms-helm-app/settings`).then(result => {\n      if (result && result.jsonData) {\n        self.appConfig = result.jsonData;\n      } else {\n        console.warn('No settings found.');\n      }\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv.getAnnotations({dashboard: this.dashboard, panel: this.panel, range: this.range})\n        .then(annotations => {\n          return {data: annotations};\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError() {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n\n    this.renderer = new TableRenderer(this.panel, this.table, this.dashboard.isTimezoneUtc(), this.$sanitize, this.selectionMgr);\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col, colIndex) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let data;\n    let panel = ctrl.panel;\n    let pageCount = 0;\n\n    scope.getColumnStyle = (col) => {\n      const ret = {};\n      if (col && col.style) {\n        if (col.style.width !== undefined) {\n          ret.width = col.style.width;\n          if (col.style.clip) {\n            ret['max-width'] = col.style.width;\n            ret['white-space'] = 'nowrap';\n          }\n        }\n        if (col.style.clip) {\n          ret['overflow'] = 'hidden';\n          ret['text-overflow'] = 'ellipsis';\n          ret['white-space'] = 'nowrap';\n        }\n      }\n      return ret;\n    };\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return (panelHeight - 31) + 'px';\n    }\n\n    function appendTableRows(tbodyElem) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n      // Compile the HTML generated by the renderer - this is required the row related callbacks (click, dblclick, etc...)\n      ctrl.$compile(tbodyElem.contents())(scope);\n    }\n\n    function switchPage(e) {\n      let el = $(e.currentTarget);\n      ctrl.pageIndex = (parseInt(el.text(), 10) - 1);\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      let pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      let startPage = Math.max(ctrl.pageIndex - 3, 0);\n      let endPage = Math.min(pageCount, startPage + 9);\n\n      let paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        let activeClass = i === ctrl.pageIndex ? 'active' : '';\n        let pageLinkElem = $('<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>');\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      let panelElem = elem.parents('.panel');\n      let rootElem = elem.find('.table-panel-scroll');\n      let tbodyElem = elem.find('tbody');\n      let footerElem = elem.find('.table-panel-footer');\n\n      elem.css({'font-size': panel.fontSize});\n      panelElem.addClass('table-panel-wrapper');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({'max-height': panel.scroll ? getTableHeight() : ''});\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n\n    let unbindDestroy = scope.$on('$destroy', function () {\n      elem.off('click', '.table-panel-page-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', function (renderData) {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n\n  // Alarm related actions\n\n  findTableRow(source, alarmId) {\n    let matchedRow;\n    _.each(this.dataRaw, table => {\n      let filteredRow = _.find(table.rows, row => {\n        return row.meta.source === source && row.meta.alarm.id === alarmId;\n      });\n      if (filteredRow !== undefined) {\n        matchedRow = filteredRow;\n      }\n    });\n    return matchedRow;\n  }\n\n  getContextMenu($event, source, alarmId) {\n    // Treat the right click as a left click on the row, if the row is not part of the current selection\n    if (!this.selectionMgr.isRowSelected({\n        source: source,\n        alarmId: alarmId\n      })) {\n      this.onSingleClick($event, source, alarmId);\n    }\n\n    // Grab the current selection\n    let selectedRows = this.selectionMgr.getSelectedRows();\n\n    // Load up the actual alarms in the rows\n    let self = this;\n    selectedRows = _.map(selectedRows, row => {\n      // Create new objects instead of modifying the existing rows\n      // returned by SelectionMgr#getSelectedRows()\n      const tableRow = self.findTableRow(row.source, row.alarmId);\n      return Object.assign({}, row, {\n        alarm: tableRow ? tableRow.meta.alarm : undefined,\n        ticketerConfig: tableRow ? tableRow.meta.ticketerConfig : undefined\n      });\n    });\n\n    // Filter out any rows for which we couldn't find the alarm\n    selectedRows = _.filter(selectedRows, row => row.alarm !== void 0);\n\n    // Generate selection-based context menu\n    return new ActionMgr(this, selectedRows, this.appConfig).getContextMenu();\n  }\n\n  scheduleClickCheck($event, source, alarmId, clickTime) {\n    const self = this;\n    if (!self.clicks) {\n      self.clicks = {};\n    }\n\n    const thisEvent = $event;\n    const alarmClick = self.clicks[alarmId] || {};\n\n    // always handle left-click, because if we're double-clicking, it's OK to deselect everything anyways\n    if (thisEvent.button !== 2) {\n      self.onSingleClick(thisEvent, source, alarmId);\n    }\n\n    clearTimeout(alarmClick.timeout);\n    alarmClick.timeout = setTimeout(() => {\n      if (self.clicks[alarmId] && self.clicks[alarmId].lastClick === clickTime) {\n        if (thisEvent.button === 2) {\n          // right click\n          self.getContextMenu(thisEvent, source, alarmId);\n        } else {\n          // left click was already handled\n        }\n      } else {\n        // pre-scheduled click time does not match last click; assuming double-click'\n      }\n    }, doubleClickDelay);\n  }\n\n  onRowClick($event, source, alarmId) {\n    const self = this;\n    if (!self.clicks) {\n      self.clicks = {};\n    }\n\n    const now = Date.now();\n    const thisEvent = $event;\n\n    if (self.clicks[alarmId]) {\n      const delay = now - self.clicks[alarmId].lastClick;\n\n      if (delay < doubleClickDelay) {\n        // on a double click, delete previous record and trigger the double-click action\n        delete self.clicks[alarmId];\n        self.onDoubleClick(thisEvent, source, alarmId);\n      } else {\n        // delay is too long, this is a single click now\n        self.scheduleClickCheck(thisEvent, source, alarmId, now);\n      }\n    } else {\n      // no previous click record, create a fresh one and schedule a click check\n      self.clicks[alarmId] = {\n        timeout: undefined\n      };\n      self.scheduleClickCheck(thisEvent, source, alarmId, now);\n    }\n    if (self.clicks[alarmId]) {\n      self.clicks[alarmId].lastClick = now;\n    }\n  }\n\n  onSingleClick($event, source, alarmId) {\n    const isMac = navigator.platform.toUpperCase().indexOf('MAC')>=0;\n    const exclusiveModifier = isMac? $event.metaKey : $event.ctrlKey;\n    const rangeModifier = $event.shiftKey;\n    this.selectionMgr.handleRowClick({source: source, alarmId: alarmId}, exclusiveModifier, rangeModifier);\n  }\n\n  onDoubleClick($event, source, alarmId) {\n    this.selectionMgr.handleSelection([], false);\n    // Show the alarm details pane\n    this.alarmDetails(source, alarmId);\n  }\n\n  alarmDetails(source, alarmId) {\n    const row = this.findTableRow(source, alarmId);\n    if (row === undefined) {\n      this.$rootScope.appEvent('alert-error', ['Unable to find matching alarm', '']);\n      return;\n    }\n\n    let newScope = this.$rootScope.$new();\n    newScope.severity = this.panel.severity;\n    newScope.source = source;\n    newScope.alarm = row.meta.alarm;\n    newScope.ticketerConfig = row.meta.ticketerConfig;\n\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<alarm-details-as-modal dismiss=\"dismiss()\"></alarm-details-as-modal>',\n      scope: newScope\n    });\n  }\n\n  performAlarmActionOnDatasource(source, action, alarmId) {\n    let self = this;\n    this.datasourceSrv.get(source).then(ds => {\n      if (ds.type && ds.type.indexOf(\"fault-datasource\") < 0) {\n        throw {message: 'Only OpenNMS datasources are supported'};\n      } else {\n        if (!ds[action]) {\n          throw {message: 'Action ' + action + ' not implemented by datasource ' + ds.name + \" of type \" + ds.type};\n        }\n        return ds[action](alarmId);\n      }\n    }).then(() => {\n      // Action was successful, remove any previous error\n      delete self.error;\n      // Refresh the dashboard\n      self.timeSrv.refreshDashboard();\n    }).catch(err => {\n      self.error = err.message || \"Request Error\";\n    });\n  }\n\n  acknowledgeAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'acknowledgeAlarm', alarmId);\n  }\n\n  unacknowledgeAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'unacknowledgeAlarm', alarmId);\n  }\n\n  clearAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'clearAlarm', alarmId);\n  }\n\n  escalateAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'escalateAlarm', alarmId);\n  }\n\n  createTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'createTicketForAlarm', alarmId);\n  }\n\n  updateTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'updateTicketForAlarm', alarmId);\n  }\n\n  closeTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'closeTicketForAlarm', alarmId);\n  }\n\n  // Multi-select handling\n  getRowsInRange(from, to) {\n    let rows = [];\n    if (!this.table) {\n      return rows;\n    }\n\n    let findIdx = selectionToMatch => {\n      return _.findIndex(this.table.rows, row => {\n        return row.meta.source === selectionToMatch.source && row.meta.alarm.id === selectionToMatch.alarmId;\n      });\n    };\n\n    let startIdx = findIdx(from);\n    if (startIdx < 0) {\n      return rows;\n    }\n\n    let endIdx = findIdx(to);\n    if (endIdx < 0) {\n      return rows;\n    }\n\n    if (endIdx < startIdx) {\n      // Swap\n      [startIdx,endIdx] = [endIdx,startIdx];\n    }\n\n    for (let i = startIdx; i <= endIdx; i++) {\n      rows.push({\n        source: this.table.rows[i].meta.source,\n        alarmId: this.table.rows[i].meta.alarm.id\n      });\n    }\n    return rows;\n  }\n}\n\nAlarmTableCtrl.templateUrl = 'panels/alarm-table/module.html';\n\nexport {\n  AlarmTableCtrl,\n  AlarmTableCtrl as PanelCtrl\n};\n\ncoreModule.directive('alarmDetailsAsModal',  alarmDetailsAsDirective);\ncoreModule.directive('memoEditor',  memoEditorAsDirective);\ncoreModule.directive('contextMenu', contextMenuAsDirective());\ncoreModule.directive('dynamicHeight', function($window) {\n  // Used to dynamically size the alarm details modal window\n  return{\n    link: function(scope, element /*, attrs */) {\n      element.css('max-height', $window.innerHeight * 0.8 + 'px');\n    }\n  }\n});\n"]}