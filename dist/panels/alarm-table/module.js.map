{"version":3,"file":"panels/alarm-table/module.js","mappings":"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","sources":["webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"lodash\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./panels/alarm-table/AlarmTableMenu.tsx","webpack:///./panels/alarm-table/modal/AlarmTableModalJson.tsx","webpack:///./panels/alarm-table/modal/AlarmTableModalMemos.tsx","webpack:///./panels/alarm-table/modal/AlarmTableModalOverview.tsx","webpack:///./panels/alarm-table/modal/AlarmTableModalContent.tsx","webpack:///./panels/alarm-table/AlarmTableSelectionStyles.tsx","webpack:///./panels/alarm-table/hooks/useAlarmProperties.ts","webpack:///./panels/alarm-table/AlarmTableHelper.ts","webpack:///./panels/alarm-table/hooks/useAlarmTableMenuActions.ts","webpack:///./components/OnmsColors.ts","webpack:///./panels/alarm-table/hooks/useAlarmTableConfigDefaults.ts","webpack:///./panels/alarm-table/hooks/useAlarmTableMenu.ts","webpack:///./hooks/useOpenNMSClient.ts","webpack:///./panels/alarm-table/hooks/useAlarm.ts","webpack:///./components/DragList.tsx","webpack:///./components/OnmsInlineField.tsx","webpack:///./panels/alarm-table/constants.ts","webpack:///./panels/alarm-table/AlarmTableData.tsx","webpack:///./components/SwitchBox.tsx","webpack:///./panels/alarm-table/AlarmTablePaging.tsx","webpack:///./components/ColorBar.tsx","webpack:///./components/ColorThemeDisplay.tsx","webpack:///./panels/alarm-table/AlarmTableAlarms.tsx","webpack:///./panels/alarm-table/AlarmTableOptions.tsx","webpack:///./panels/alarm-table/module.ts","webpack:///./panels/alarm-table/AlarmTableControl.tsx","webpack:///./panels/alarm-table/hooks/useAlarmTableSelection.ts","webpack:///./panels/alarm-table/hooks/useAlarmTableModalTabs.ts","webpack:///./panels/alarm-table/hooks/useAlarmTableRowHighlighter.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__477__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__980__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React from 'react'\nimport { css } from '@emotion/css'\nimport { GrafanaTheme2 } from '@grafana/data'\nimport { Menu, MenuItem, useStyles2 } from '@grafana/ui'\nimport { AlarmTableControlActions, AlarmTableControlState } from './AlarmTableTypes'\n\ninterface AlarmTableMenuProps {\n    state: AlarmTableControlState,\n    actions: AlarmTableControlActions\n}\n\nexport const AlarmTableMenu: React.FC<AlarmTableMenuProps> = ({ state,actions }) => {\n\n    let items = [\n      { label: 'Details', action: actions.details },\n      { type: 'divider', label: '', },\n      { label: 'Acknowledge', action: actions.acknowledge },\n      { label: 'Escalate', action: actions.escalate },\n      { label: 'Clear', action: actions.clear }\n    ]\n\n    // If we have more than one item selected\n    // remove the ability to select Details\n    if (state.indexes.filter((d) => d === true).length > 1) {\n        items = items.splice(2, items.length)\n    }\n\n    const getStyles = (theme: GrafanaTheme2) => {\n        return {\n            divider: css({\n                height: 1,\n                backgroundColor: theme.colors.border.weak,\n                margin: theme.spacing(0.5, 0)\n            })\n        }\n    }\n\n    const styles = useStyles2(getStyles)\n\n    return (\n        <Menu>\n            {items.map((item, index) => {\n                let elem = <MenuItem label={item.label} key={index} onClick={item.action} />\n              \n                if (item.type === 'divider') {\n                    elem = <div className={styles.divider}></div>\n                }\n\n                return elem;\n            })}\n        </Menu>\n    )\n}\n","import React from 'react'\nimport { OnmsAlarm } from 'opennms/src/model'\n\ninterface AlarmTableModalJsonProps {\n    alarm: OnmsAlarm | undefined;\n}\n\nexport const AlarmTableModalJson: React.FC<AlarmTableModalJsonProps> = ({alarm}) => {\n    return (<div>\n        <pre>\n            {JSON.stringify(alarm,null,2)}\n        </pre>\n    </div>)\n}\n","import React, { useState, useEffect } from 'react'\nimport { config } from '@grafana/runtime'\nimport { Button, HorizontalGroup, TextArea } from '@grafana/ui';\nimport { ClientDelegate } from 'lib/client_delegate';\nimport { OnmsAlarm } from 'opennms/src/model'\n\ninterface AlarmTableModalMemosProps {\n    alarm: OnmsAlarm | undefined;\n    client: ClientDelegate | undefined;\n}\n\nexport const AlarmTableModalMemos: React.FC<AlarmTableModalMemosProps> = ({ alarm, client }) => {\n    const [localSticky, setLocalSticky] = useState(alarm?.sticky);\n    const [localJournal, setLocalJournal] = useState(alarm?.journal);\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        setLocalSticky(alarm?.sticky)\n    }, [alarm?.sticky])\n    useEffect(() => {\n        setLocalJournal(alarm?.journal)\n    }, [alarm?.journal])\n\n    const stickyChange = (newSticky) => {\n        setLocalSticky({ ...alarm?.sticky, body: newSticky.target.value })\n    }\n\n    const journalChange = (newJournal) => {\n        setLocalJournal({ ...alarm?.journal, body: newJournal.target.value })\n    }\n    const saveSticky = async () => {\n        setLoading(true);\n        await client?.saveSticky(alarm?.id, localSticky?.body, config?.bootData?.user.id);\n        setLoading(false);\n    }\n    const deleteSticky = async () => {\n        setLoading(true);\n        await client?.deleteSticky(alarm?.id)\n        setLoading(false);\n    }\n    const saveJournal = async () => {\n        setLoading(true);\n        await client?.saveJournal(alarm?.id, localJournal?.body, config?.bootData?.user.id)\n        setLoading(false);\n    }\n    const deleteJournal = async () => {\n        setLoading(true);\n        await client?.deleteJournal(alarm?.id)\n        setLoading(false);\n    }\n    return (\n        <div>\n            <style>\n                {\n                    `\n                    .sticky-memo {\n                        display:flex;\n                    }\n                    .memo-header {\n                        margin-top:24px;\n                    }\n                    .memo-wrapper {\n                        margin-bottom:24px;\n                    }\n                    `\n                }\n            </style>\n            <div className='memo-wrapper'>\n                <h2 className='memo-header'>Sticky Memo</h2>\n                <TextArea value={localSticky?.body} onChange={stickyChange}></TextArea>\n                <HorizontalGroup className='sticky-memo'>\n                    {loading}\n                    <Button onClick={saveSticky}><i className=\"fa fa-plus\"></i>&nbsp;Save</Button>\n                    <Button variant='destructive' onClick={deleteSticky}><i className=\"fa fa-minus\"></i>&nbsp;Delete</Button>\n                </HorizontalGroup>\n            </div>\n\n            <div className='memo-wrapper'>\n                <h2 className='memo-header'>Journal Memo</h2>\n                <TextArea value={localJournal?.body} onChange={journalChange}></TextArea>\n                <HorizontalGroup className='sticky-memo'>\n                    {loading}\n                    <Button onClick={saveJournal}><i className=\"fa fa-plus\"></i>&nbsp;Save</Button>\n                    <Button variant='destructive' onClick={deleteJournal}><i className=\"fa fa-minus\"></i>&nbsp;Delete</Button>\n                </HorizontalGroup>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { OnmsAlarm } from 'opennms/src/model'\n\ninterface AlarmTableModalOverviewProps {\n    alarm: OnmsAlarm | undefined\n}\n\nexport const AlarmTableModalOverview: React.FC<AlarmTableModalOverviewProps> = ({ alarm }) => {\n    return (<div>\n        <style>\n            {\n                `\n                .alarm-details-table tr{\n                        height:32px;\n                        padding-left:12px;\n                }\n                .alarm-details-table tr:nth-child(2n+1) {\n                    background-color:#1c1f23;\n                }\n                .alarm-details-table th {\n                    padding-left:12px;\n                    padding-right:12px;\n                    white-space: nowrap;\n                }\n                .alarm-details-table td {\n                    padding-top:12px;\n                    padding-bottom:12px;\n                }\n                `\n            }\n        </style>\n        <table className='alarm-details-table'>\n            <tr>\n                <th>UEI</th>\n                <td className=\"wrap\">{alarm?.uei}</td>\n            </tr>\n            <tr>\n                <th>Severity</th>\n                <td>{alarm?.severity?.label}</td>\n            </tr>\n            <tr>\n                <th>Last Event Time</th>\n                <td>{alarm?.lastEvent?.time?.toString()}</td>\n            </tr>\n            <tr>\n                <th>First Event Time</th>\n                <td>{alarm?.firstEventTime?.toString()}</td>\n            </tr>\n            <tr>\n                <th>Log Message</th>\n                <td dangerouslySetInnerHTML={{__html:alarm?.logMessage || ''}}></td>\n            </tr>\n            <tr>\n                <th>Description</th>\n                <td dangerouslySetInnerHTML={{__html:alarm?.description || ''}}></td>\n            </tr>\n            <tr>\n                <th>Count</th>\n                <td>{alarm?.count}</td>\n            </tr>\n            <tr>\n                <th>Reduction Key</th>\n                <td>{alarm?.reductionKey}</td>\n            </tr>\n            {alarm?.managedObjectInstance && <tr>\n                <th>Managed Object Instance</th>\n                <td>{alarm?.managedObjectInstance}</td>\n            </tr>}\n            {alarm?.managedObjectType && <tr>\n                <th>Managed Object Type</th>\n                <td>{alarm?.managedObjectType}</td>\n            </tr>}\n\n        </table>\n    </div>)\n}\n","import React from 'react'\nimport { ClientDelegate } from 'lib/client_delegate'\nimport { OnmsAlarm } from 'opennms/src/model'\nimport { AlarmTableModalJson } from './AlarmTableModalJson'\nimport { AlarmTableModalMemos } from './AlarmTableModalMemos'\nimport { AlarmTableModalOverview } from './AlarmTableModalOverview'\n\ninterface AlarmTableModalContentProps {\n    tab: number;\n    alarm: OnmsAlarm | undefined;\n    client: ClientDelegate | undefined;\n}\n\nexport const AlarmTableModalContent: React.FC<AlarmTableModalContentProps> = ({ tab, alarm, client }) => {\n    return (\n        <>\n            {tab === 0 && <AlarmTableModalOverview alarm={alarm} />}\n            {tab === 1 && <AlarmTableModalMemos alarm={alarm} client={client} />}\n            {tab === 2 && <AlarmTableModalJson alarm={alarm} />}\n        </>\n    )\n}\n","import React from 'react'\n\nexport const AlarmTableSelectionStyles = () => {\n    return (\n        <style>\n            {\n                `\n                        .font-size-0 {\n                            font-size:80%;\n                        }\n                        .font-size-1 {\n                            font-size:90%;\n                        }\n                        .font-size-2 {\n                            font-size:100%;\n                        }\n                        .font-size-3 {\n                            font-size:110%;\n                        }\n                        .font-size-4 {\n                            font-size:120%;\n                        }\n                        .font-size-5 {\n                            font-size:130%;\n                        }\n                        .font-size-6 {\n                            font-size:140%;\n                        }\n                        .font-size-7 {\n                            font-size:150%;\n                        }\n                        .font-size-8 {\n                            font-size:160%;\n                        }\n                        .font-size-9 {\n                            font-size:180%;\n                        }\n                        .font-size-10 {\n                            font-size:200%;\n                        }\n                        .font-size-11 {\n                            font-size:220%;\n                        }\n                        .font-size-12 {\n                            font-size:250%;\n                        }\n                        .no-scroll .track-horizontal{\n                            display:none;\n                        }\n                        .alarm-query {\n                            height:100%;\n                        }\n                        .non-alarm-query {\n                            height:100%;\n                            display:flex;\n                            align-items:center;\n                            justify-content:center;\n                        }\n                        div[role=\"row\"] {\n                            border:1px solid transparent;\n                            padding-bottom:1px;\n                        }\n                        .table-body div[role=\"row\"]:hover {\n                            background-color:rgb(1, 33, 137);\n                        }\n                        .table-body div[role=\"row\"]:last-child {\n                            border-bottom:1px solid transparent;\n                        }\n                        .table-body div[role=\"row\"]:last-child {\n                            border-bottom:1px solid transparent;\n                        }\n\n                        .table-body div[role=\"row\"].select-start {\n                            border-top:1px dashed white;\n                            border-right:1px dashed white;\n                            border-left:1px dashed white;\n                        }\n                        .table-body div[role=\"row\"].select-continue {\n                            border-right:1px dashed white;\n                            border-left:1px dashed white;\n                        }\n                        .table-body div[role=\"row\"].select-end {\n                            border-bottom:1px dashed white;\n                            border-right:1px dashed white;\n                            border-left:1px dashed white;\n                        }\n \n                    `\n            }\n        </style>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { ArrayVector } from '@grafana/data'\nimport { cloneDeep } from 'lodash'\n\nexport const useAlarmProperties = (oldProperties, alarmTable) => {\n\n    const [filteredPropState, setFilteredProps] = useState(cloneDeep(oldProperties))\n    const [page, setPage] = useState(1)\n    const [totalPages, setTotalPages] = useState(0)\n\n    useEffect(() => {\n        const filteredProps = cloneDeep(oldProperties)\n        const totalRows = filteredProps.fields[0].values.length\n        const rowsPerPage = Number(alarmTable.alarmTablePaging?.rowsPerPage || 10)\n\n        if (filteredProps && filteredProps.meta?.entity_metadata && filteredProps.name && filteredProps.name === 'alarms') {\n            // Allow background color for severity column.\n            if (alarmTable?.alarmTableAlarms?.styleWithSeverity?.value === 1) {\n                filteredProps.fields = filteredProps.fields.map((field) => {\n                    if (field.name === 'Severity') {\n                        field.config.custom = { displayMode: 'color-background' }\n                    }\n                    return field\n                })\n            } \n\n            // Filter our columns according to our configured approved fields.\n            filteredProps.fields = filteredProps.fields.filter((fil) => {\n                let shouldIncludeThisField = true\n\n                if (alarmTable?.alarmTableData) {\n                    shouldIncludeThisField = !!alarmTable?.alarmTableData.columns?.find((col) => col.label === fil.name)\n                }\n\n                return shouldIncludeThisField\n            })\n\n            //Sort our columns based on the user provided order\n            filteredProps.fields = filteredProps.fields.sort((f1, f2) => {\n                const colIndex1 = alarmTable?.alarmTableData?.columns?.findIndex((col) => col.label === f1.name)\n                const colIndex2 = alarmTable?.alarmTableData?.columns?.findIndex((col) => col.label === f2.name)\n                return colIndex1 - colIndex2\n            })\n\n            if (rowsPerPage > 0 && totalRows > rowsPerPage) {\n                const myPage = page\n\n                filteredProps.fields = filteredProps.fields.map((field) => {\n                    const oldValues = [...field.values.buffer]\n                    const start = (myPage - 1) * rowsPerPage\n                    const end = start + rowsPerPage\n                    const spliced = oldValues.splice(start, end)\n                    field.values = new ArrayVector(spliced) \n                    return field\n                })\n\n                filteredProps.length = filteredProps.fields[0]?.values.length || 0\n            } else {\n                filteredProps.length = totalRows\n            }\n\n            setFilteredProps(filteredProps)\n            setTotalPages(Math.ceil(totalRows / rowsPerPage))\n        }\n\n    }, [alarmTable?.alarmTableData, page, alarmTable.alarmTablePaging?.rowsPerPage, oldProperties,alarmTable?.alarmTableAlarms?.styleWithSeverity])\n\n    useEffect(() => {\n        const scrollView = document.querySelector('.scroll .scrollbar-view')\n        if (alarmTable?.alarmTablePaging?.scroll) {\n            scrollView?.classList.remove('no-scroll')\n        } else {\n            scrollView?.classList.add('no-scroll')\n        }\n    }, [alarmTable?.alarmTablePaging?.scroll])\n\n    return { filteredProps: filteredPropState, page, setPage, totalPages }\n}\n","import { Field } from '@grafana/data'\n\nexport const getAlarmIdFromFields = (fields: Field[], index: number) => {\n    return fields.find((d) => d.name === 'ID')?.values.get(index)\n}\n","import { useState, useEffect } from 'react'\nimport { Field } from '@grafana/data'\nimport { getBackendSrv } from '@grafana/runtime'\nimport { ClientDelegate } from 'lib/client_delegate'\nimport { getAlarmIdFromFields } from '../AlarmTableHelper'\n\nexport const useAlarmTableMenuActions = (indexes: boolean[], fields: Field[], closeMenu, client: ClientDelegate | undefined) => {\n    const [detailsModal, setDetailsModal] = useState(false)\n    const [user, setUser] = useState<{ id: string }>()\n\n    useEffect(() => {\n        const getUserFromGrafana = async () => {\n            setUser((await getBackendSrv().get('/api/users'))?.[0])\n        }\n\n        getUserFromGrafana()\n    }, [])\n\n    const loopAction = async (action) => {\n        for (let i = 0; i < indexes.length; i++) {\n            if (indexes[i]) {\n                const alarmId = getAlarmIdFromFields(fields, i)\n                await action(alarmId, user?.id)\n            }\n        }\n    }\n\n    const clear = async () => {\n        await loopAction(async (alarmId, userId) => {\n            await client?.doClear(alarmId, user?.id)\n        })\n        closeMenu()\n    }\n\n    const details = () => {\n        closeMenu()\n        setDetailsModal(true)\n    }\n\n    const escalate = async () => {\n        await loopAction(async (alarmId, userId) => {\n            await client?.doEscalate(alarmId, user?.id)\n        })\n        closeMenu()\n    }\n\n    const acknowledge = async () => {\n        await loopAction(async (alarmId, userId) => {\n            await client?.doAck(alarmId, user?.id)\n        })\n        closeMenu()\n    }\n\n    return { actions: { clear, details, escalate, acknowledge }, detailsModal, setDetailsModal }\n}\n","export const onmsColorArray = [\n    ['#999000', '#eee000', '#86b15b', '#fccc3b', '#ee901c', '#e3692f', '#db4345'],\n    ['#999000', '#999', '#360', '#fc0', '#f90', '#f30', '#c00'],\n    ['#614765', '#ccc', '#00b48b', '#00d3c9', '#ffce56', '#ff9033', '#ff3b50'],\n    ['#999000', '#999', '#a1cc72', '#6ec5c6', '#f9df6c', '#dda35c'],\n    ['#a44ae6', '#5dc93b', '#ccc', '#76b7f9', '#fffd54', '#f4b54b', '#eb3223']\n]\n\nexport const onmsColorsByName = {\n    default: onmsColorArray[0],\n    openNms: onmsColorArray[1],\n    ohMy: onmsColorArray[2],\n    noNeverMind: onmsColorArray[3],\n    thatsCool: onmsColorArray[4]\n}\n","import { useEffect } from 'react'\nimport { MappingType } from '@grafana/data'\nimport { onmsColorArray } from 'components/OnmsColors'\nimport { AlarmTableControlProps } from '../AlarmTableTypes'\n\nexport const useAlarmTableConfigDefaults = (fieldConfig, onFieldConfigChange, options: AlarmTableControlProps) => {\n    const currentIndex = options?.alarmTable.alarmTableAlarms?.severityTheme?.value || 0\n\n    useEffect(() => {\n        const oldConfig = { ...fieldConfig }\n        if (currentIndex !== 5) {\n            oldConfig.defaults.mappings = [\n                { type: MappingType.ValueToText, options: { INDETERMINATE: { color: onmsColorArray[currentIndex][0], index: 0, text: 'Indeterminate' } } },\n                { type: MappingType.ValueToText, options: { CLEARED: { color: onmsColorArray[currentIndex][1], index: 1, text: 'Cleared' } } },\n                { type: MappingType.ValueToText, options: { NORMAL: { color: onmsColorArray[currentIndex][2], index: 2, text: 'Normal' } } },\n                { type: MappingType.ValueToText, options: { WARNING: { color: onmsColorArray[currentIndex][3], index: 3, text: 'Warning' } } },\n                { type: MappingType.ValueToText, options: { MINOR: { color: onmsColorArray[currentIndex][4], index: 4, text: 'Minor' } } },\n                { type: MappingType.ValueToText, options: { MAJOR: { color: onmsColorArray[currentIndex][5], index: 5, text: 'Major' } } },\n                { type: MappingType.ValueToText, options: { CRITICAL: { color: onmsColorArray[currentIndex][6], index: 6, text: 'Critical' } } },\n            ]\n            onFieldConfigChange(oldConfig)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentIndex])\n}\n","import { useState, useEffect, useRef } from 'react'\n\nexport const useAlarmTableMenu = (rowClicked) => {\n\n    const [menu, setMenu] = useState({ x: 0, y: 0 })\n    const [menuOpen, setMenuOpen] = useState(false)\n\n    const contextMenu = (index: number, e: MouseEvent) => {\n        e.preventDefault()\n        rowClicked(index, e, true)\n        setMenu({ x: e.x, y: e.y })\n        setMenuOpen(() => true)\n    }\n\n    const table = useRef<HTMLDivElement>(null);\n\n    const addClassToTableBody = () => {\n        const headerGroup = table.current?.querySelector('div[role=\"rowgroup\"] + div')\n        headerGroup?.classList.add('table-body')\n    }\n\n    const processRowClicked = (e: Event) => {\n        const index = (e.currentTarget as Element).getAttribute('data-rowindex')\n\n        if (index !== null && index?.length > 0) {\n          rowClicked(parseInt(index, 10), e as MouseEvent, false)\n        }\n    }\n\n    const processContextMenu = (e: Event) => {\n        const index = (e.currentTarget as Element).getAttribute('data-rowindex')\n\n        if (index !== null && index?.length > 0) {\n          contextMenu(parseInt(index, 10), e as MouseEvent)\n        }\n    }\n\n    useEffect(() => {\n        addClassToTableBody()\n\n        const rows = table.current?.querySelectorAll('.table-body div[role=\"row\"]')\n\n        const onRowClicked = (e: Event) => processRowClicked(e)\n        const onContextMenu = (e: Event) => processContextMenu(e)\n\n        rows?.forEach((row, index) => {\n            row.setAttribute('data-rowindex', '' + index)\n            row.addEventListener('click', onRowClicked)\n            row.addEventListener('contextmenu', onContextMenu)\n        })\n\n        return () => {\n          if (rows && rows.length > 0) {\n            rows.forEach((row) => {\n              row.removeEventListener('click', onRowClicked)\n              row.removeEventListener('contextmenu', onContextMenu)\n            })\n          }\n        }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [table, menu, menuOpen, rowClicked])\n\n    return { table, menu, menuOpen, setMenu, setMenuOpen }\n}\n","import { useEffect, useState } from 'react'\nimport { DataSourceRef } from '@grafana/data'\nimport { getDataSourceSrv } from '@grafana/runtime'\nimport { ClientDelegate } from 'lib/client_delegate'\n\nexport const useOpenNMSClient = (datasource: DataSourceRef | null | undefined) => {\n  const [client, setClient] = useState<ClientDelegate>()\n\n  useEffect(() => {\n    const updateDatasource = async () => {\n      const datasources = getDataSourceSrv()\n      const datasourceObject: any = await datasources.get(datasource)\n      setClient(datasourceObject.client);\n    }\n\n    if (datasource) {\n      updateDatasource();\n    }\n  }, [datasource])\n\n  return { client }\n}\n","import { useEffect, useState } from 'react'\nimport { DataFrame } from '@grafana/data'\nimport { ClientDelegate } from 'lib/client_delegate'\nimport { OnmsAlarm } from 'opennms/src/model'\nimport { getAlarmIdFromFields } from '../AlarmTableHelper'\n\nexport const useAlarm = (series: DataFrame[], soloIndex: number, client: ClientDelegate | undefined) => {\n    const [alarmQuery, setAlarmQuery] = useState(false);\n    const [alarmId, setAlarmId] = useState(-1);\n    const [alarm, setAlarm] = useState<OnmsAlarm>();\n\n    useEffect(() => {\n        if (series?.[0].name === 'alarms') {\n            setAlarmQuery(true)\n            const localAlarmId = getAlarmIdFromFields(series?.[0].fields,soloIndex)\n            setAlarmId(localAlarmId)\n        } else {\n            setAlarmId(-1)\n            setAlarmQuery(false)\n        }\n\n    }, [series, soloIndex])\n\n    useEffect(() => {\n        const updateAlarm = async () => {\n            const returnedAlarm = await client?.getAlarm(alarmId);\n            setAlarm(returnedAlarm)\n        }\n        if (alarmId !== alarm?.id) {\n            updateAlarm();\n        }\n    }, [alarm?.id, alarmId, client])\n\n    const goToAlarm = () => {\n        if (alarm?.detailsPage) {\n            window.location.href = alarm.detailsPage\n        }\n    }\n\n    return { alarm, alarmQuery, goToAlarm }\n}\n","import React from 'react'\nimport { SelectableValue } from '@grafana/data'\n\ninterface DragListProps {\n    values: Array<SelectableValue<string | number>>,\n    onChange: Function\n}\n\nexport const DragList: React.FC<DragListProps> = ({ values, onChange }) => {\n    const moveUp = (e: React.UIEvent<HTMLSpanElement>, index: number) => {\n        const newValues = [...values]\n        const movingValue = newValues.splice(index, 1);\n        newValues.splice(index - 1, 0, movingValue[0])\n        onChange(newValues)\n    }\n\n    const moveDown = (e: React.UIEvent<HTMLSpanElement>, index: number) => {\n        const newValues = [...values]\n        const movingValue = newValues.splice(index, 1);\n        newValues.splice(index + 1, 0, movingValue[0])\n        onChange(newValues)\n    }\n\n    const remove = (e: React.UIEvent<HTMLSpanElement>, index: number) => {\n        const newValues = [...values]\n        newValues.splice(index, 1);\n        onChange(newValues)\n    }\n\n    const isEnterOrSpace = (key: string) => {\n        return key === ' ' || key === 'Enter'\n    }\n\n    const keyUp = (e: React.KeyboardEvent<HTMLSpanElement>, index: number) => {\n        if (isEnterOrSpace(e.key)) {\n            moveUp(e, index)\n        }\n    }\n\n    const keyDown = (e: React.KeyboardEvent<HTMLSpanElement>, index: number) => {\n        if (isEnterOrSpace(e.key)) {\n            moveDown(e, index)\n        }\n    }\n\n    const keyDelete = (e: React.KeyboardEvent<HTMLSpanElement>, index: number) => {\n        if (isEnterOrSpace(e.key)) {\n            remove(e, index)\n        }\n    }\n\n    return (\n        <div className='onms-drag-list'>\n            <style>\n                {\n                    `\n                    .onms-drag-buttons {\n                        display:flex;\n                        margin-left:auto;\n                    }\n                    .onms-drag-list {\n                        max-width:360px;\n                    }\n                    .onms-drag-button {\n                        background-color:rgb(61, 113, 217);\n                        border-radius:2px;\n                        width:22px;\n                        height:22px;\n                        display:flex;\n                        align-items:center;\n                        justify-content:center;\n                        margin-right:6px;\n                        cursor:pointer;\n                    }\n                    .onms-drag-button.onms-drag-remove {\n                        background-color:rgb(239, 25, 32);\n                    }\n                    .onms-drag-wrapper{\n                        height: 40px;\n                        margin-bottom:6px;\n                        display: flex;\n                        align-items: center;\n                        border:1px solid #2f2e2e;\n                        padding:10px 15px;\n                        border-radius:2px;\n                    }\n                    `\n                }\n            </style>\n            {values.map((val, index) => (\n                <div key={index} className='onms-drag-wrapper'>\n                    <span>{index + 1}.&nbsp;</span>\n                    <span>{val.label}</span>\n                    <div className='onms-drag-buttons'>\n                        <span className='onms-drag-button' tabIndex={0} onKeyUp={(e) => keyUp(e,index)} onClick={(e) => moveUp(e, index)}><i className='fa fa-arrow-up'></i></span>\n                        <span className='onms-drag-button' tabIndex={0} onKeyUp={(e) => keyDown(e,index)} onClick={(e) => moveDown(e, index)}>\n                            <i className='fa fa-arrow-down'></i>\n                        </span>\n                        <span className='onms-drag-button onms-drag-remove' onKeyUp={(e) => keyDelete(e,index)} tabIndex={0} onClick={(e) => remove(e, index)}><i className='fa fa-ban'></i></span>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","import React from 'react'\nimport { InlineField } from '@grafana/ui'\n\ninterface InlineFieldProps {\n    label: string;\n    children: React.ReactElement<any, string | React.JSXElementConstructor<any>> & React.ReactNode\n}\n\nexport const OnmsInlineField: React.FC<InlineFieldProps> = ({ children, ...props }) => {\n    return (\n        <>\n            <style>\n                {\n                    `\n                        .onms-inline-field > label{\n                            width:160px;\n                        }\n                    `\n                }\n            </style>\n            <InlineField {...props} className='onms-inline-field'>\n                {children}\n            </InlineField>\n        </>\n    )\n}\n","export const fontSizeOptions = [\n    { label: '80%', value: 0 },\n    { label: '90%', value: 1 },\n    { label: '100%', value: 2 },\n    { label: '110%', value: 3 },\n    { label: '120%', value: 4 },\n    { label: '130%', value: 5 },\n    { label: '140%', value: 6 },\n    { label: '150%', value: 7 },\n    { label: '160%', value: 8 },\n    { label: '180%', value: 9 },\n    { label: '200%', value: 10 },\n    { label: '220%', value: 11 },\n    { label: '250%', value: 12 },\n]\n\nexport const alarmSeverityThemeOptions = [\n    { label: 'Default', value: 0 },\n    { label: 'OpenNMS', value: 1 },\n    { label: 'Oh My!', value: 2 },\n    { label: 'No, Never Mind (i)', value: 3 },\n    { label: 'That\\'s Cool', value: 4 },\n    { label: 'Custom', value: 5 }\n]\n\n// value matches index in entity-ds/queryAlarms columns\nexport const alarmTableDefaultColumns = [\n  { label: 'Is Acknowledged', value: 20 },\n  { label: 'Severity', value: 5 },\n  { label: 'Count', value: 1 },\n  { label: 'Last Event Time', value: 23 },\n  { label: 'Location', value: 8 },\n  { label: 'Node Label', value: 14 },\n  { label: 'Log Message', value: 9 },\n]\n","import React, { useState, useEffect } from 'react'\nimport { Select } from '@grafana/ui'\nimport { DragList } from 'components/DragList'\nimport { OnmsInlineField } from 'components/OnmsInlineField'\nimport { AlarmTableDataState } from './AlarmTableTypes'\nimport { alarmTableDefaultColumns } from './constants'\n\ninterface AlarmTableDataProps {\n    onChange: Function;\n    context: any;\n}\n\nexport const AlarmTableData: React.FC<AlarmTableDataProps> = ({ onChange, context }) => {\n    const [alarmTableData, setAlarmTableData] = useState<AlarmTableDataState>(context?.options?.alarmTable?.alarmTableData || {\n        columns: alarmTableDefaultColumns\n    })\n\n    useEffect(() => {\n        onChange(alarmTableData);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [alarmTableData])\n\n    const setAlarmTableState = (key, value) => {\n        const newState = { ...alarmTableData }\n        newState[key] = value\n        setAlarmTableData(newState)\n   }\n\n    return (\n        <div>\n            {/** \n              * \n              * Commented out for now. This is in the original table, but \n              * from what I can tell there was only ever one transformer\n              * written, so there's no need to have the ability to swap them\n              * TODO: Double check if we need the ability to 'transform' in different ways\n              * \n              * <OnmsInlineField label=\"Table Transform\">\n                <Select\n                    value={alarmTableData.transformType}\n                    onChange={(val) => setAlarmTableState('transformType', val)}\n                    options={[{ label: 'Table', value: 0 }]}\n                />\n            </OnmsInlineField> */}\n\n            <OnmsInlineField label=\"Columns\">\n                <Select\n                    placeholder='Add Column'\n                    value={''}\n                    onChange={(val) => {\n                        const newColumns = [...alarmTableData.columns]\n                        newColumns.push(val)\n                        setAlarmTableState('columns', newColumns)\n                    }}\n                    options={context?.data?.[0]?.fields.map((field, index) => ({ ...field, value: index, label: field.name }))}\n                />\n            </OnmsInlineField>\n            <DragList values={alarmTableData?.columns} onChange={(val) => { setAlarmTableState('columns', val) }} />\n        </div>\n    )\n}\n","import React from 'react'\n\nexport interface SwitchBoxProps {\n    className?: string\n    children: React.ReactNode\n}\n\nexport const SwitchBox: React.FC<SwitchBoxProps> = ({className = undefined, children }) => {\n    return (\n        <div className={className} style={{ display: 'flex', alignItems: 'center', height: 32, width: 32 }}>\n            {children}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Input, Switch, Select } from '@grafana/ui'\nimport { OnmsInlineField } from 'components/OnmsInlineField'\nimport { SwitchBox } from 'components/SwitchBox'\nimport { AlarmTablePaginationState } from './AlarmTableTypes'\nimport { fontSizeOptions } from './constants'\n\ninterface AlarmTablePagingPanelProps {\n    onChange: Function\n    context: any\n}\n\nexport const AlarmTablePaging: React.FC<AlarmTablePagingPanelProps> = ({ onChange, context }) => {\n\n    const [alarmTablePaging, setAlarmTablePaging] = useState<AlarmTablePaginationState>(context?.options?.alarmTable?.alarmTablePaging || {\n        pauseRefresh: false,\n        scroll: true,\n        rowsPerPage: 10,\n        fontSize: { label: '100%', value: 2 }\n    });\n\n    const setAlarmTablePagingState = (key, value) => {\n        const newState = { ...alarmTablePaging }\n        newState[key] = value\n        setAlarmTablePaging(newState);\n    }\n\n    useEffect(() => {\n        onChange(alarmTablePaging)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [alarmTablePaging])\n\n    return (\n        <div>\n            <OnmsInlineField label='Rows per page'>\n                <Input type='number' value={alarmTablePaging.rowsPerPage} onChange={(val) => setAlarmTablePagingState('rowsPerPage', val.currentTarget.value)} />\n            </OnmsInlineField>\n            {/**   \n              * \n              * This is in the original Alarm Table Panel, but I don't see any use for it currently and it might be a holdover from older functionality.\n              * TODO: Determine if we should keep this or not.\n              *  <OnmsInlineField label='Pause refresh'>\n                <SwitchBox>\n                    <Switch value={alarmTablePaging.pauseRefresh} onChange={(val) => setAlarmTablePagingState('pauseRefresh', !alarmTablePaging.pauseRefresh)} />\n                </SwitchBox>\n            </OnmsInlineField> */}\n            <OnmsInlineField label='Scroll'>\n                <SwitchBox>\n                    <Switch value={alarmTablePaging.scroll} onChange={(val) => setAlarmTablePagingState('scroll', !alarmTablePaging.scroll)} />\n                </SwitchBox>\n            </OnmsInlineField>\n            <OnmsInlineField label='Font size'>\n                <Select\n                    value={alarmTablePaging.fontSize}\n                    options={fontSizeOptions}\n                    onChange={(val) => setAlarmTablePagingState('fontSize', val)}\n                />\n            </OnmsInlineField>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const ColorBar: React.FC<{ title: string, icon: string, color: string }> = ({ title, icon, color }) => {\n    return (<div style={{\n        backgroundColor: color,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: '100%',\n        height: 30,\n        padding: '0 10px',\n        color: '#fff',\n        maxWidth: 260\n    }} >\n        <style>\n            {\n                `\n                i.color-bar {\n                    text-shadow: 1px 0 0 #000,-1px 0 0 #000,0 1px 0 #000,0 -1px 0 #000,.5px .5px #000,-.5px -.5px 0 #000,.5px -.5px 0 #000,-.5px .5px 0 #000;\n                }\n                .color-bar-title {\n                    background-color:#565656;\n                    padding:1px 8px;\n                    border-radius: 10px;\n                }\n                `\n            }\n        </style>\n        <div className={'color-bar-title'}>\n            {title}\n        </div>\n        <div>\n            <i className={` color-bar fa fa-${icon}`}></i>\n        </div>\n    </div>)\n}\n","import React from 'react'\nimport { ColorBar } from './ColorBar'\nimport { onmsColorArray } from './OnmsColors'\n\ninterface ColorThemeDisplayProps {\n    theme: number | undefined | string;\n}\n\nexport const ColorThemeDisplay: React.FC<ColorThemeDisplayProps> = ({ theme }) => {\n\n    const getThemeNumberFromPossibleString = () => {\n        let themeNum = 0;\n        if (theme && typeof theme === 'string') {\n            themeNum = Number(theme)\n        } else if (theme && typeof theme === 'number' && !!onmsColorArray[theme]) {\n            themeNum = theme;\n        }\n        return themeNum;\n    }\n\n    const titles = [\n        { text: 'Indeterminate', icon: 'question-circle' },\n        { text: 'Cleared', icon: 'check-circle' },\n        { text: 'Normal', icon: 'leaf' },\n        { text: 'Warning', icon: 'exclamation-triangle' },\n        { text: 'Minor', icon: 'bolt' },\n        { text: 'Major', icon: 'fire' },\n        { text: 'Critical', icon: 'bomb' },\n    ]\n\n    return (\n        <div\n            style={{\n                marginTop: 20,\n            }}\n        >\n            {titles.map((title, index) => {\n                return <ColorBar\n                    key={index}\n                    title={title.text}\n                    icon={title.icon}\n                    color={onmsColorArray[getThemeNumberFromPossibleString()][index]}\n                />\n            })}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Select } from '@grafana/ui'\nimport { AlarmTableAlarmDataState } from './AlarmTableTypes'\nimport { ColorThemeDisplay } from 'components/ColorThemeDisplay'\nimport { OnmsInlineField } from 'components/OnmsInlineField'\nimport { alarmSeverityThemeOptions } from './constants'\n\ninterface AlarmTableAlarmProps {\n    onChange: Function\n    alarmTable: any;\n}\nexport const AlarmTableAlarms: React.FC<AlarmTableAlarmProps> = ({ onChange, alarmTable }) => {\n    const [alarmTableAlarmData, setAlarmTableAlarmData] = useState<AlarmTableAlarmDataState>({\n        styleWithSeverity: alarmTable?.alarmTableAlarms?.styleWithSeverity || { label: 'Column', value: 1 },\n        severityTheme: alarmTable?.alarmTableAlarms?.severityTheme ||{ label: 'Default', value: 0 }\n    });\n\n    useEffect(() => {\n        onChange(alarmTableAlarmData)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [alarmTableAlarmData])\n\n    const setAlarmTableState = (key, value) => {\n        const newState = { ...alarmTableAlarmData }\n        newState[key] = value\n        setAlarmTableAlarmData(newState);\n    }\n\n    return (\n        <div>\n            <OnmsInlineField label=\"Style with severity\">\n                {/** \n                  * Support for row-level colours is not coded into the current version of Grafana: https://github.com/grafana/grafana/discussions/38151     \n                  * If it's supported in the future, we can re-enable the option here.\n                  *    */}\n                <Select\n                    value={alarmTableAlarmData.styleWithSeverity}\n                    onChange={(val) => setAlarmTableState('styleWithSeverity', val)}\n                    options={[{ label: 'Column', value: 1 }, { label: 'Off', value: 2 }]}\n                />\n            </OnmsInlineField>\n            <OnmsInlineField label=\"Severity theme\">\n                <Select\n                    value={alarmTableAlarmData.severityTheme}\n                    onChange={(val) => setAlarmTableState('severityTheme', val)}\n                    options={alarmSeverityThemeOptions}\n                />\n            </OnmsInlineField>\n            <ColorThemeDisplay theme={alarmTableAlarmData.severityTheme?.value} />\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { AlarmTableData } from './AlarmTableData'\nimport { AlarmTablePaging } from './AlarmTablePaging'\nimport { AlarmTableAlarms } from './AlarmTableAlarms'\nimport { PanelOptionsEditorProps } from '@grafana/data'\n\nexport const AlarmTableOptions: React.FC<PanelOptionsEditorProps<{}>> = ({ context, onChange }) => {\n    const [internalOptions, setInternalOptions] = useState({})\n    const onOptionChange = (v, k) => {\n        setInternalOptions((oldOptions) => {\n            const newOptions = { ...oldOptions }\n            newOptions[k] = v\n            return newOptions\n        })\n    }\n\n    useEffect(() => {\n        onChange(internalOptions)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [internalOptions])\n\n    return (\n        <>\n            <AlarmTableData context={context} onChange={(v) => onOptionChange(v, 'alarmTableData')} />\n            <AlarmTablePaging context={context} onChange={(v) => onOptionChange(v, 'alarmTablePaging')} />\n            <AlarmTableAlarms onChange={(v) => onOptionChange(v, 'alarmTableAlarms')} alarmTable={context.options?.alarmTable} />\n        </>\n    )\n}\n","import { PanelPlugin } from '@grafana/data'\nimport { AlarmTableControl } from './AlarmTableControl'\nimport { AlarmTableOptions } from './AlarmTableOptions'\n\nexport const plugin = new PanelPlugin(AlarmTableControl)\nplugin.useFieldConfig()\nplugin.setPanelOptions((builder) => {\n    builder.addCustomEditor({ id: 'alarm-table-options', path: 'alarmTable', name: '', editor: AlarmTableOptions })\n})\n","import React from 'react'\nimport { PanelProps } from '@grafana/data'\nimport { Button, ContextMenu, Modal, Pagination, Tab, TabContent, Table, TabsBar } from '@grafana/ui'\nimport { AlarmTableMenu } from './AlarmTableMenu'\nimport { AlarmTableModalContent } from './modal/AlarmTableModalContent'\nimport { AlarmTableSelectionStyles } from './AlarmTableSelectionStyles'\nimport { AlarmTableControlProps } from './AlarmTableTypes'\nimport { useAlarmProperties } from './hooks/useAlarmProperties'\nimport { useAlarmTableMenuActions } from './hooks/useAlarmTableMenuActions'\nimport { useAlarmTableConfigDefaults } from './hooks/useAlarmTableConfigDefaults'\nimport { useAlarmTableMenu } from './hooks/useAlarmTableMenu'\nimport { useAlarmTableRowHighlighter } from './hooks/useAlarmTableRowHighlighter'\nimport { useAlarmTableSelection } from './hooks/useAlarmTableSelection'\nimport { useAlarmTableModalTabs } from './hooks/useAlarmTableModalTabs'\nimport { useOpenNMSClient } from '../../hooks/useOpenNMSClient'\nimport { useAlarm } from './hooks/useAlarm'\n\nexport const AlarmTableControl: React.FC<PanelProps<AlarmTableControlProps>> = (props) => {\n\n    const { state, rowClicked, soloIndex } = useAlarmTableSelection(() => {\n        setDetailsModal(true)\n    })\n\n    const { client } = useOpenNMSClient(props.data?.request?.targets?.[0]?.datasource)\n    const { filteredProps, page, setPage, totalPages } = useAlarmProperties(props?.data?.series[0], props?.options?.alarmTable)\n    const { table, menu, menuOpen, setMenuOpen } = useAlarmTableMenu(rowClicked)\n    const { actions, detailsModal, setDetailsModal } = useAlarmTableMenuActions(state.indexes, props?.data?.series?.[0].fields, () => setMenuOpen(false), client)\n    const { tabActive, tabClick, resetTabs } = useAlarmTableModalTabs()\n    const { alarm, goToAlarm, alarmQuery } = useAlarm(props?.data?.series, soloIndex, client)\n\n    useAlarmTableRowHighlighter(state, table)\n    useAlarmTableConfigDefaults(props.fieldConfig, props.onFieldConfigChange, props.options)\n\n    const getFontSize = () => {\n        const fontSize = props.options?.alarmTable.alarmTablePaging.fontSize?.value\n        return `font-size-${fontSize}`\n    }\n\n    return (\n        <div ref={table} className={\n            `\n            ${alarmQuery ? 'alarm-query' : 'non-alarm-query'}\n            ${props.options?.alarmTable?.alarmTablePaging?.scroll ? 'scroll' : 'no-scroll'}\n            ${getFontSize()}\n            `\n        }>\n            <AlarmTableSelectionStyles />\n            <div style={{ height: '90%' }}>\n                {alarmQuery ? <Table data={filteredProps} width={props.width} height={props.height} /> :\n                    <div>Select the Entity Datasource below, and choose an Alarm query to see results.</div>\n                }\n            </div>\n            <div style={{ width: '100%', height: '10%' }}>\n                <div>\n                    <Pagination numberOfPages={totalPages === Infinity ? 0 : totalPages} currentPage={page} onNavigate={(b) => { setPage(b) }} hideWhenSinglePage={true} />\n                </div>\n            </div>\n            {menuOpen && <ContextMenu\n                x={menu.x}\n                y={menu.y}\n                onClose={() => {\n                    resetTabs();\n                    setMenuOpen(false);\n                }}\n                renderMenuItems={() => <AlarmTableMenu state={state} actions={actions} />}\n            />}\n            <Modal isOpen={detailsModal} title='Alarm Detail' onDismiss={() => setDetailsModal(false)}>\n                <Button style={{ marginBottom: 12 }} onClick={goToAlarm}><i className='fa fa-external-link'></i>&nbsp;Full Details</Button>\n                <TabsBar>\n                    <Tab label='Overview' active={tabActive === 0} onChangeTab={() => tabClick(0)} />\n                    <Tab label='Memos' active={tabActive === 1} onChangeTab={() => tabClick(1)} />\n                    <Tab label='JSON' active={tabActive === 2} onChangeTab={() => tabClick(2)} />\n                </TabsBar>\n                <TabContent>\n                    <AlarmTableModalContent tab={tabActive} alarm={alarm} client={client} />\n                </TabContent>\n            </Modal>\n        </div>\n    )\n}\n","import { useState } from 'react'\nimport { AlarmTableControlState } from '../AlarmTableTypes'\n\nexport const useAlarmTableSelection = (doubleClicked) => {\n\n    const [state, setState] = useState<AlarmTableControlState>({ indexes: [], lastClicked: -1 })\n    const [soloIndex, setSoloIndex] = useState(-1)\n\n    const clearIndexes = (oldIndexes: boolean[]) => {\n        return [...oldIndexes].map(() => false)\n    }\n\n    const allIndexesAreFalse = (indexes: boolean[]) => {\n        return !indexes.some(i => i === true)\n    }\n\n    const rowClicked = (index: number, e: MouseEvent, fromContext = false) => {\n        setState((previousState) => {\n            let newClickedIndexes = [...previousState.indexes]\n\n            if ((!fromContext || allIndexesAreFalse(newClickedIndexes)) && (!e.shiftKey || previousState.lastClicked === -1)) {\n                if (!e.ctrlKey) {\n                    newClickedIndexes = clearIndexes(newClickedIndexes)\n                }\n\n                newClickedIndexes[index] = newClickedIndexes[index] ? false : true\n                setSoloIndex(index)\n\n                if (e.detail === 2) {\n                    doubleClicked()\n                }\n            } else if (!fromContext) {\n                let { start, end } = previousState.lastClicked > index ?\n                    { start: index, end: previousState.lastClicked } :\n                    { start: previousState.lastClicked, end: index }\n\n                for (let i = start; i <= end; i++) {\n                    newClickedIndexes[i] = true;\n                }\n\n                setSoloIndex(-1)\n            }\n            return { indexes: newClickedIndexes, lastClicked: index }\n        })\n    }\n\n    return { state, setState, clearIndexes, rowClicked, soloIndex }\n}\n","import { useState } from 'react'\n\nexport const useAlarmTableModalTabs = () => {\n    const [tabActive, setTabActive] = useState(0);\n\n    const tabClick = (e) => {\n        setTabActive(e);\n    }\n\n    const resetTabs = () => {\n        setTabActive(0)\n    }\n\n    return { tabActive, tabClick, resetTabs }\n}\n","import { useEffect } from 'react'\nimport { AlarmTableControlState } from '../AlarmTableTypes'\n\nexport const useAlarmTableRowHighlighter = (state: AlarmTableControlState, table: React.MutableRefObject<HTMLDivElement | null>) => {\n\n    useEffect(() => {\n        const rows = table.current?.querySelectorAll('.table-body div[role=\"row\"]')\n        // if previous sibling is not clicked, or first item in entry, select-start\n        // if previous sibling is clicked, and next sibling is clicked, select-continue\n        // if previous sibling is clicked, and next sibling is not clicked, select-end\n        if (rows) {\n            rows.forEach((row, index) => {\n                row.classList.remove('select-start')\n                row.classList.remove('select-continue')\n                row.classList.remove('select-end')\n                if (!state.indexes[index - 1] && state.indexes[index]) {\n                    row.classList.add('select-start')\n                }\n                if (state.indexes[index - 1] && state.indexes[index] && state.indexes[index + 1]) {\n                    row.classList.add('select-continue')\n                }\n                if (state.indexes[index] && !state.indexes[index + 1]) {\n                    row.classList.add('select-end')\n                }\n            })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    })\n}\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__644__","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__477__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__980__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","AlarmTableMenu","state","actions","items","label","action","details","type","acknowledge","escalate","clear","indexes","filter","length","splice","styles","useStyles2","theme","divider","css","height","backgroundColor","colors","border","weak","margin","spacing","Menu","map","item","index","elem","MenuItem","onClick","div","className","AlarmTableModalJson","alarm","pre","JSON","stringify","AlarmTableModalMemos","client","localSticky","setLocalSticky","useState","sticky","localJournal","setLocalJournal","journal","loading","setLoading","useEffect","saveSticky","config","id","body","user","deleteSticky","saveJournal","deleteJournal","style","h2","TextArea","onChange","newSticky","target","HorizontalGroup","Button","i","variant","newJournal","AlarmTableModalOverview","table","tr","th","td","uei","severity","lastEvent","time","toString","firstEventTime","dangerouslySetInnerHTML","__html","logMessage","description","count","reductionKey","managedObjectInstance","managedObjectType","AlarmTableModalContent","tab","AlarmTableSelectionStyles","getAlarmIdFromFields","fields","find","name","values","useAlarmTableMenuActions","closeMenu","detailsModal","setDetailsModal","setUser","getBackendSrv","loopAction","alarmId","userId","doClear","doEscalate","doAck","onmsColorArray","useAlarmTableMenu","rowClicked","menu","setMenu","x","y","menuOpen","setMenuOpen","useRef","headerGroup","current","querySelector","classList","add","addClassToTableBody","rows","querySelectorAll","onRowClicked","e","currentTarget","getAttribute","parseInt","processRowClicked","onContextMenu","preventDefault","contextMenu","processContextMenu","forEach","row","setAttribute","addEventListener","removeEventListener","useOpenNMSClient","datasource","setClient","updateDatasource","datasources","getDataSourceSrv","datasourceObject","useAlarm","series","soloIndex","alarmQuery","setAlarmQuery","setAlarmId","setAlarm","localAlarmId","updateAlarm","returnedAlarm","getAlarm","goToAlarm","detailsPage","window","location","href","DragList","moveUp","newValues","movingValue","moveDown","remove","isEnterOrSpace","val","span","tabIndex","onKeyUp","keyUp","keyDown","keyDelete","OnmsInlineField","children","props","InlineField","fontSizeOptions","alarmSeverityThemeOptions","alarmTableDefaultColumns","AlarmTableData","context","alarmTableData","setAlarmTableData","options","alarmTable","columns","setAlarmTableState","newState","Select","placeholder","newColumns","push","data","field","SwitchBox","display","alignItems","width","AlarmTablePaging","alarmTablePaging","setAlarmTablePaging","pauseRefresh","scroll","rowsPerPage","fontSize","setAlarmTablePagingState","Input","Switch","ColorBar","title","icon","color","justifyContent","padding","maxWidth","ColorThemeDisplay","getThemeNumberFromPossibleString","themeNum","Number","marginTop","text","AlarmTableAlarms","alarmTableAlarmData","setAlarmTableAlarmData","styleWithSeverity","alarmTableAlarms","severityTheme","AlarmTableOptions","internalOptions","setInternalOptions","onOptionChange","v","k","oldOptions","newOptions","plugin","PanelPlugin","doubleClicked","setState","lastClicked","setSoloIndex","clearIndexes","oldIndexes","fromContext","previousState","newClickedIndexes","some","shiftKey","start","end","ctrlKey","detail","useAlarmTableSelection","request","targets","filteredProps","page","setPage","totalPages","oldProperties","filteredPropState","setFilteredProps","cloneDeep","setTotalPages","totalRows","meta","entity_metadata","custom","displayMode","fil","shouldIncludeThisField","col","sort","f1","f2","findIndex","myPage","oldValues","buffer","spliced","ArrayVector","Math","ceil","scrollView","document","useAlarmProperties","tabActive","tabClick","resetTabs","setTabActive","useAlarmTableModalTabs","useAlarmTableRowHighlighter","fieldConfig","onFieldConfigChange","currentIndex","oldConfig","defaults","mappings","MappingType","INDETERMINATE","CLEARED","NORMAL","WARNING","MINOR","MAJOR","CRITICAL","useAlarmTableConfigDefaults","ref","getFontSize","Table","Pagination","numberOfPages","Infinity","currentPage","onNavigate","b","hideWhenSinglePage","ContextMenu","onClose","renderMenuItems","Modal","isOpen","onDismiss","marginBottom","TabsBar","Tab","active","onChangeTab","TabContent","useFieldConfig","setPanelOptions","builder","addCustomEditor","path","editor"],"sourceRoot":""}