{"version":3,"sources":["../../../src/panels/alarm-table/column_options.js"],"names":["columnOptionsTab","$q","uiSegmentSrv","restrict","scope","templateUrl","controller","ColumnOptionsCtrl","_","kbn","$scope","editor","activeStyleIndex","panelCtrl","ctrl","panel","unitFormats","getUnitFormats","colorModes","text","value","columnTypes","fontSizes","dateFormats","getColumnNames","table","map","columns","col","render","column","subItem","unit","newStyleRule","type","alias","decimals","colors","colorMode","pattern","dateFormat","thresholds","width","clip","styles","stylesCount","length","indexToInsert","last","splice","style","without","index","ref","copy"],"mappings":"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","file":"column_options.js","sourcesContent":["import _ from 'lodash';\n\nimport kbn from 'app/core/utils/kbn';\n\nexport class ColumnOptionsCtrl {\n  /** @ngInject */\n  constructor($scope, $q, uiSegmentSrv) {\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n    $scope.editor = this;\n    this.activeStyleIndex = 0;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.unitFormats = kbn.getUnitFormats();\n    this.colorModes = [\n      {text: 'Disabled', value: null},\n      {text: 'Cell', value: 'cell'},\n      {text: 'Value', value: 'value'},\n      {text: 'Row', value: 'row'},\n    ];\n    this.columnTypes = [\n      {text: 'Checkbox', value: 'checkbox'},\n      {text: 'Number', value: 'number'},\n      {text: 'String', value: 'string'},\n      {text: 'Date', value: 'date'},\n      {text: 'Severity', value:'severity'},\n      {text: 'Hidden', value: 'hidden'}\n    ];\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.dateFormats = [\n      {text: 'DD MMM HH:mm:ss', value: 'DD MMM HH:mm:ss'},\n      {text: 'YYYY-MM-DD HH:mm:ss', value: 'YYYY-MM-DD HH:mm:ss'},\n      {text: 'MM/DD/YY h:mm:ss a', value: 'MM/DD/YY h:mm:ss a'},\n      {text: 'MMMM D, YYYY LT', value: 'MMMM D, YYYY LT'},\n      {text: 'relative', value: 'relative'},\n      {text: 'relative (short)', value: 'relative-short'}\n    ];\n\n    this.getColumnNames = () => {\n      if (!this.panelCtrl.table) {\n        return [];\n      }\n      return _.map(this.panelCtrl.table.columns, function (col) {\n        return col.text;\n      });\n    };\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  setUnitFormat(column, subItem) {\n    column.unit = subItem.value;\n    this.panelCtrl.render();\n  }\n\n  addColumnStyle() {\n    let newStyleRule = {\n      unit: 'short',\n      type: 'number',\n      alias: '',\n      decimals: 2,\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n      colorMode: null,\n      pattern: '',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      thresholds: [],\n      width: \"\",\n      clip: false\n    };\n\n    let styles = this.panel.styles;\n    let stylesCount = styles.length;\n    let indexToInsert = stylesCount;\n\n    // check if last is a catch all rule, then add it before that one\n    if (stylesCount > 0) {\n      let last = styles[stylesCount - 1];\n      if (last.pattern === '/.*/') {\n        indexToInsert = stylesCount - 1;\n      }\n    }\n\n    styles.splice(indexToInsert, 0, newStyleRule);\n    this.activeStyleIndex = indexToInsert;\n  }\n\n  removeColumnStyle(style) {\n    this.panel.styles = _.without(this.panel.styles, style);\n  }\n\n  invertColorOrder(index) {\n    let ref = this.panel.styles[index].colors;\n    let copy = ref[0];\n    ref[0] = ref[2];\n    ref[2] = copy;\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function columnOptionsTab($q, uiSegmentSrv) { // eslint-disable-line no-unused-vars\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/plugins/opennms-helm-app/panels/alarm-table/column_options.html',\n    controller: ColumnOptionsCtrl,\n  };\n}\n"]}