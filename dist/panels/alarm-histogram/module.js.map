{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///external \"jquery.flot\"","webpack:///external \"jquery.flot.selection\"","webpack:///external \"jquery.flot.crosshair\"","webpack:///../node_modules/flot/jquery.flot.categories.js","webpack:///./panels/alarm-histogram/ctrl.ts","webpack:///./panels/alarm-histogram/module.ts","webpack:///./lib/utils.ts","webpack:///external \"jquery\"","webpack:///external \"app/plugins/sdk\"","webpack:///external \"@grafana/runtime\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__25__","__WEBPACK_EXTERNAL_MODULE__26__","__WEBPACK_EXTERNAL_MODULE__27__","$","processRawData","plot","series","data","datapoints","xCategories","xaxis","options","yCategories","yaxis","format","push","x","number","required","y","bars","show","lines","fill","autoscale","zero","defaultValue","horizontal","length","categoriesTickGenerator","axis","res","label","categories","v","min","max","sort","a","b","setupCategoriesForAxis","isArray","ticks","points","ps","pointsize","formatColumn","charAt","index","getNextIndex","val","transformPointsOnAxis","processDatapoints","plugins","init","hooks","version","jQuery","$scope","$injector","$timeout","scope","_renderRetries","defaults","panel","groupProperty","direction","retryTimes","retryDelay","events","on","onInitEditMode","onDataReceived","onDataError","onRender","elem","attrs","ctrl","this","find","addEditorTab","counts","countBy","query","isNil","toString","count","defaultTo","color","$root","colors","render","height","row","isString","parseInt","replace","width","undefined","title","css","map","serie","barWidth","align","lineWidth","tickLength","autoscaleMargin","grid","borderWidth","renderingCompleted","column","result","columnIndex","findIndex","columns","text","rows","j","templateUrl","cssInitialized","initializeCss","dark","light","assignModelProperties","target","source","selectOptionsForCurrentValue","variable","option","selected","current","setOptionAsCurrent","cloneDeep","join","emitChangeEvents","dashboardSrv","templateSrv","initLock","Promise","resolve","getVariables","dashboard","variables","promises","forEach","updateOptions","setGlobalVariable","id","all","then","templateVariableValueUpdated","startRefresh","variableUpdated","setOptionFromUrl","urlValue","promise","refresh","op","defaultText","reduce","acc","item","multi","castArray","setValue","validateVariableSelectionState","firstOption","variableRegex","variableRegexExec","variableString","lastIndex","exec","containsVariable","args","variableName","slice","matches","match","isMatchingVariable","varMatch","indexOf","isFirst","array","processSelectionVariables","input","mapped","dropUnresolved","dropAll","startsWith","endsWith","substring","split","trim","some","processSelectionVariable","concat","filter","swap","thisArray","colIndex1","colIndex2","tmp","swapColumns","Error","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__9__"],"mappings":"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","file":"panels/alarm-histogram/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 49);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__25__;","module.exports = __WEBPACK_EXTERNAL_MODULE__26__;","module.exports = __WEBPACK_EXTERNAL_MODULE__27__;","/* Flot plugin for plotting textual data or categories.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nConsider a dataset like [[\"February\", 34], [\"March\", 20], ...]. This plugin\nallows you to plot such a dataset directly.\n\nTo enable it, you must specify mode: \"categories\" on the axis with the textual\nlabels, e.g.\n\n\t$.plot(\"#placeholder\", data, { xaxis: { mode: \"categories\" } });\n\nBy default, the labels are ordered as they are met in the data series. If you\nneed a different ordering, you can specify \"categories\" on the axis options\nand list the categories there:\n\n\txaxis: {\n\t\tmode: \"categories\",\n\t\tcategories: [\"February\", \"March\", \"April\"]\n\t}\n\nIf you need to customize the distances between the categories, you can specify\n\"categories\" as an object mapping labels to values\n\n\txaxis: {\n\t\tmode: \"categories\",\n\t\tcategories: { \"February\": 1, \"March\": 3, \"April\": 4 }\n\t}\n\nIf you don't specify all categories, the remaining categories will be numbered\nfrom the max value plus 1 (with a spacing of 1 between each).\n\nInternally, the plugin works by transforming the input data through an auto-\ngenerated mapping where the first category becomes 0, the second 1, etc.\nHence, a point like [\"February\", 34] becomes [0, 34] internally in Flot (this\nis visible in hover and click events that return numbers rather than the\ncategory labels). The plugin also overrides the tick generator to spit out the\ncategories as ticks instead of the values.\n\nIf you need to map a value back to its label, the mapping is always accessible\nas \"categories\" on the axis object, e.g. plot.getAxes().xaxis.categories.\n\n*/\n\n(function ($) {\n    var options = {\n        xaxis: {\n            categories: null\n        },\n        yaxis: {\n            categories: null\n        }\n    };\n    \n    function processRawData(plot, series, data, datapoints) {\n        // if categories are enabled, we need to disable\n        // auto-transformation to numbers so the strings are intact\n        // for later processing\n\n        var xCategories = series.xaxis.options.mode == \"categories\",\n            yCategories = series.yaxis.options.mode == \"categories\";\n        \n        if (!(xCategories || yCategories))\n            return;\n\n        var format = datapoints.format;\n\n        if (!format) {\n            // FIXME: auto-detection should really not be defined here\n            var s = series;\n            format = [];\n            format.push({ x: true, number: true, required: true });\n            format.push({ y: true, number: true, required: true });\n\n            if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n                if (s.bars.horizontal) {\n                    delete format[format.length - 1].y;\n                    format[format.length - 1].x = true;\n                }\n            }\n            \n            datapoints.format = format;\n        }\n\n        for (var m = 0; m < format.length; ++m) {\n            if (format[m].x && xCategories)\n                format[m].number = false;\n            \n            if (format[m].y && yCategories)\n                format[m].number = false;\n        }\n    }\n\n    function getNextIndex(categories) {\n        var index = -1;\n        \n        for (var v in categories)\n            if (categories[v] > index)\n                index = categories[v];\n\n        return index + 1;\n    }\n\n    function categoriesTickGenerator(axis) {\n        var res = [];\n        for (var label in axis.categories) {\n            var v = axis.categories[label];\n            if (v >= axis.min && v <= axis.max)\n                res.push([v, label]);\n        }\n\n        res.sort(function (a, b) { return a[0] - b[0]; });\n\n        return res;\n    }\n    \n    function setupCategoriesForAxis(series, axis, datapoints) {\n        if (series[axis].options.mode != \"categories\")\n            return;\n        \n        if (!series[axis].categories) {\n            // parse options\n            var c = {}, o = series[axis].options.categories || {};\n            if ($.isArray(o)) {\n                for (var i = 0; i < o.length; ++i)\n                    c[o[i]] = i;\n            }\n            else {\n                for (var v in o)\n                    c[v] = o[v];\n            }\n            \n            series[axis].categories = c;\n        }\n\n        // fix ticks\n        if (!series[axis].options.ticks)\n            series[axis].options.ticks = categoriesTickGenerator;\n\n        transformPointsOnAxis(datapoints, axis, series[axis].categories);\n    }\n    \n    function transformPointsOnAxis(datapoints, axis, categories) {\n        // go through the points, transforming them\n        var points = datapoints.points,\n            ps = datapoints.pointsize,\n            format = datapoints.format,\n            formatColumn = axis.charAt(0),\n            index = getNextIndex(categories);\n\n        for (var i = 0; i < points.length; i += ps) {\n            if (points[i] == null)\n                continue;\n            \n            for (var m = 0; m < ps; ++m) {\n                var val = points[i + m];\n\n                if (val == null || !format[m][formatColumn])\n                    continue;\n\n                if (!(val in categories)) {\n                    categories[val] = index;\n                    ++index;\n                }\n                \n                points[i + m] = categories[val];\n            }\n        }\n    }\n\n    function processDatapoints(plot, series, datapoints) {\n        setupCategoriesForAxis(series, \"xaxis\", datapoints);\n        setupCategoriesForAxis(series, \"yaxis\", datapoints);\n    }\n\n    function init(plot) {\n        plot.hooks.processRawData.push(processRawData);\n        plot.hooks.processDatapoints.push(processDatapoints);\n    }\n    \n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'categories',\n        version: '1.0'\n    });\n})(jQuery);\n","import { MetricsPanelCtrl } from 'grafana/app/plugins/sdk';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport 'jquery.flot';\nimport 'jquery.flot.selection';\nimport 'jquery.flot.crosshair';\nimport 'flot/jquery.flot.categories';\n\nclass AlarmHistogramCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'public/plugins/opennms-helm-app/panels/alarm-histogram/module.html';\n\n  _renderRetries: number;\n  retryTimes: number;\n  retryDelay: number;\n  series: Array<{ color: any; name: string; count: number }> | undefined;\n  elem: any;\n  ctrl: any;\n\n  /** @ngInject */\n  constructor($scope, $injector, $timeout) {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.$timeout = $timeout;\n\n    this._renderRetries = 0;\n\n    _.defaults(this.panel, {\n      groupProperty: 'acknowledged',\n      direction: 'horizontal',\n    });\n\n    this.retryTimes = 10; // number of times to retry\n    this.retryDelay = 100; // milliseconds, how long to wait to retry\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n  }\n\n  link($scope, elem, attrs, ctrl) {\n    this.elem = elem.find('.histogram-chart');\n    this.ctrl = ctrl;\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Grouping', 'public/plugins/opennms-helm-app/panels/alarm-histogram/editor.html', 2);\n  }\n\n  onDataReceived(data) {\n    switch (this.panel.groupProperty) {\n      case 'acknowledged': {\n        const counts = _.countBy(this.query(data, 'Acked By'), (a) => _.isNil(a).toString());\n        this.series = [\n          {\n            name: 'Outstanding',\n            count: _.defaultTo(counts['true'], 0),\n            color: this.scope.$root.colors[0],\n          },\n          {\n            name: 'Acknowledged',\n            count: _.defaultTo(counts['false'], 0),\n            color: this.scope.$root.colors[4],\n          },\n        ];\n        break;\n      }\n\n      case 'severity': {\n        const counts = _.countBy(this.query(data, 'Severity'));\n        this.series = [\n          {\n            name: 'Cleared',\n            count: _.defaultTo(counts['CLEARED'], 0),\n            color: '#EEE000',\n          },\n          {\n            name: 'Normal',\n            count: _.defaultTo(counts['NORMAL'], 0),\n            color: '#86B15B',\n          },\n          {\n            name: 'Indeterm.',\n            count: _.defaultTo(counts['INDETERMINATE'], 0),\n            color: '#990000',\n          },\n          {\n            name: 'Warning',\n            count: _.defaultTo(counts['WARNING'], 0),\n            color: '#FCCC3B',\n          },\n          {\n            name: 'Minor',\n            count: _.defaultTo(counts['MINOR'], 0),\n            color: '#EE901C',\n          },\n          {\n            name: 'Major',\n            count: _.defaultTo(counts['MAJOR'], 0),\n            color: '#E3692F',\n          },\n          {\n            name: 'Critical',\n            count: _.defaultTo(counts['CRITICAL'], 0),\n            color: '#DB4345',\n          },\n        ];\n        break;\n      }\n    }\n\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  // @ts-ignore\n  onRender() {\n    let height = this.ctrl.height || this.ctrl.panel.height || (this.ctrl.row && this.ctrl.row.height);\n    if (_.isString(height)) {\n      height = parseInt(height.replace('px', ''), 10);\n    }\n\n    if (this.elem.width() === 0 || height === 0 || height === undefined) {\n      if (this._renderRetries > this.retryTimes) {\n        console.debug('onRender: still unable to determine height, and we ran out of retries');\n        return false;\n      }\n      this._renderRetries++;\n\n      console.debug(`onRender: unable to determine height, retrying again in ${this.retryDelay}ms`);\n      this.$timeout(() => {\n        this.onRender();\n      }, this.retryDelay);\n      return true;\n    }\n\n    height -= 5; // padding\n    height -= this.ctrl.panel.title ? 24 : 9; // subtract panel title bar\n\n    this.elem.css('height', height + 'px');\n\n    // Draw graph\n    switch (this.panel.direction) {\n      case 'horizontal':\n        $.plot(\n          this.elem,\n          _.map(this.series, function (serie) {\n            return {\n              data: [[serie.count, serie.name]],\n              color: serie.color,\n            };\n          }),\n          {\n            series: {\n              bars: {\n                show: true,\n                barWidth: 0.6,\n                align: 'center',\n                fill: 0.8,\n                lineWidth: 1.0,\n                horizontal: true,\n              },\n            },\n            yaxis: {\n              mode: 'categories',\n              tickLength: 0,\n              autoscaleMargin: 0.02,\n            },\n            grid: {\n              borderWidth: 0,\n            },\n          }\n        );\n        break;\n\n      case 'vertical':\n        $.plot(\n          this.elem,\n          _.map(this.series, function (serie) {\n            return {\n              data: [[serie.name, serie.count]],\n              color: serie.color,\n            };\n          }),\n          {\n            series: {\n              bars: {\n                show: true,\n                barWidth: 0.5,\n                align: 'center',\n                fill: 0.8,\n                lineWidth: 1.0,\n                horizontal: false,\n              },\n            },\n            xaxis: {\n              mode: 'categories',\n              tickLength: 0,\n              autoscaleMargin: 0.02,\n            },\n            grid: {\n              borderWidth: 0,\n            },\n          }\n        );\n        break;\n    }\n    this.ctrl.renderingCompleted();\n  }\n\n  query(data, column) {\n    // TODO: Make this a generator to save memory\n    let result: any[] = [];\n\n    for (let i = 0; i < data.length; i++) {\n      const columnIndex = _.findIndex(data[i].columns, { text: column });\n      const rows = data[i] && data[i].rows ? data[i].rows : [];\n      for (let j = 0; j < rows.length; j++) {\n        result.push(data[i].rows[j][columnIndex]);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport { AlarmHistogramCtrl };\n","import { AlarmHistogramCtrl } from './ctrl';\n\nimport { initializeCss } from 'lib/utils';\n\ninitializeCss();\n\nexport { AlarmHistogramCtrl, AlarmHistogramCtrl as PanelCtrl };\n","import _ from 'lodash';\n\nimport { loadPluginCss } from '@grafana/runtime';\n\nlet cssInitialized = false;\nexport function initializeCss() {\n  if (!cssInitialized) {\n    cssInitialized = true;\n    loadPluginCss({\n      dark: 'plugins/opennms-helm-app/styles/dark.css',\n      light: 'plugins/opennms-helm-app/styles/light.css',\n    });\n  }\n}\n\nexport function assignModelProperties(target, source, defaults = {}) {\n  for (const key in defaults) {\n    if (!defaults.hasOwnProperty(key)) {\n      continue;\n    }\n\n    target[key] = source[key] === undefined ? defaults[key] : source[key];\n  }\n}\n\nexport function selectOptionsForCurrentValue(variable) {\n  let i, y, value, option;\n  const selected = [] as any[];\n\n  for (i = 0; i < variable.options.length; i++) {\n    option = variable.options[i];\n    option.selected = false;\n    if (_.isArray(variable.current.value)) {\n      for (y = 0; y < variable.current.value.length; y++) {\n        value = variable.current.value[y];\n        if (option.value === value) {\n          option.selected = true;\n          selected.push(option);\n        }\n      }\n    } else if (option.value === variable.current.value) {\n      option.selected = true;\n      selected.push(option);\n    }\n  }\n\n  return selected;\n}\n\nexport function setOptionAsCurrent(variable, option) {\n  variable.current = _.cloneDeep(option || {});\n\n  if (_.isArray(variable.current.text) && variable.current.text.length > 0) {\n    variable.current.text = variable.current.text.join(' + ');\n  } else if (_.isArray(variable.current.value) && variable.current.value[0] !== '$__all') {\n    variable.current.text = variable.current.value.join(' + ');\n  }\n\n  selectOptionsForCurrentValue(variable);\n  return variableUpdated(variable);\n}\n\nexport function variableUpdated(variable, emitChangeEvents = false) {\n  const dashboardSrv = variable.dashboardSrv;\n  const templateSrv = variable.templateSrv;\n\n  // if there is a variable lock ignore cascading update because we are in a boot up scenario\n  if (variable.initLock) {\n    return Promise.resolve();\n  }\n\n  const getVariables = templateSrv.getVariables.bind(templateSrv) || dashboardSrv.dashboard.getVariables.bind(dashboardSrv.dashboard);\n  const variables = getVariables();\n  let promises = [] as Array<Promise<any>>;\n\n  // in theory we should create an efficient sub-list of variables to update, but for now just do them all YOLO\n  variables.forEach(v => promises.push(v.updateOptions()));\n\n  templateSrv.setGlobalVariable(variable.id, variable.current);\n\n  return Promise.all(promises).then(() => {\n    if (emitChangeEvents) {\n      dashboardSrv.dashboard.templateVariableValueUpdated();\n      dashboardSrv.dashboard.startRefresh();\n    }\n  });\n}\n\n\nexport function setOptionFromUrl(variable: any, urlValue: any) {\n  let promise = Promise.resolve();\n\n  if (variable.refresh) {\n    promise = variable.updateOptions();\n  }\n\n  return promise.then(() => {\n    // Simple case. Value in url matches existing options text or value.\n    let option = _.find(variable.options, op => {\n      return op.text === urlValue || op.value === urlValue;\n    });\n\n    // No luck either it is array or value does not exist in the variables options.\n    if (!option) {\n      let defaultText = urlValue;\n      const defaultValue = urlValue;\n\n      if (_.isArray(urlValue)) {\n        // Multiple values in the url. We construct text as a list of texts from all matched options.\n        defaultText = urlValue.reduce((acc, item) => {\n          const t = _.find(variable.options, { value: item });\n          if (t) {\n            acc.push(t.text);\n          } else {\n            acc.push(item);\n          }\n\n          return acc;\n        }, []);\n      }\n\n      // It is possible that we did not match the value to any existing option. In that case the url value will be\n      // used anyway for both text and value.\n      option = { text: defaultText, value: defaultValue };\n    }\n\n    if (variable.multi) {\n      // In case variable is multiple choice, we cast to array to preserve the same behaviour as when selecting\n      // the option directly, which will return even single value in an array.\n      option = { text: _.castArray(option.text), value: _.castArray(option.value) };\n    }\n\n    return variable.setValue(option);\n  });\n}\n\nexport function validateVariableSelectionState(variable: any, defaultValue?: any) {\n  if (!variable.current) {\n    variable.current = {};\n  }\n\n  if (_.isArray(variable.current.value)) {\n    let selected = selectOptionsForCurrentValue(variable);\n\n    // if none pick first\n    if (selected.length === 0) {\n      let firstOption = variable.options[0];\n      if (firstOption) {\n        return variable.setValue(firstOption);\n      }\n      return Promise.resolve();\n    } else {\n      let val = {\n        value: _.map(selected, val => {\n          return val.value;\n        }),\n        text: _.map(selected, val => {\n          return val.text;\n        }),\n      };\n      return variable.setValue(val);\n    }\n  } else {\n    let option = undefined;\n\n    // 1. find the current value\n    option = _.find(variable.options, {\n      text: variable.current.text,\n    });\n    if (option) {\n      return variable.setValue(option);\n    }\n\n    // 2. find the default value\n    if (defaultValue) {\n      option = _.find(variable.options, {\n        text: defaultValue,\n      });\n      if (option) {\n        return variable.setValue(option);\n      }\n    }\n\n    // 3. use the first value\n    if (variable.options) {\n      return variable.setValue(variable.options[0]);\n    }\n\n    // 4... give up\n    return Promise.resolve();\n  }\n}\n\nexport const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^}]+))?(?::(\\w+))?}/g;\n\nexport const variableRegexExec = (variableString) => {\n  variableRegex.lastIndex = 0;\n  return variableRegex.exec(variableString);\n};\n\nexport function containsVariable(...args) {\n  const variableName = args[args.length - 1];\n  args[0] = _.isString(args[0]) ? args[0] : Object['values'](args[0]).join(' ');\n  const variableString = args.slice(0, -1).join(' ');\n  const matches = variableString.match(variableRegex);\n  const isMatchingVariable =\n    matches !== null\n      ? matches.find(match => {\n          const varMatch = variableRegexExec(match);\n          return varMatch !== null && varMatch.indexOf(variableName) > -1;\n        })\n      : false;\n\n  return !!isMatchingVariable;\n}\n\n/**\n * Converts an input string into a string array of selected values.\n *\n * The input string may be the value of a multi-selection template variable. In this case the input string is\n * delimited by curly braces that enclose a comma separated list of values.\n *\n * The dropUnresolved parameter determines if an empty array is returned if the input starts with '$'.\n * The dropAll parameter determines if an empty array is returned if the input is \"all\".\n */\n export function processSelectionVariable(input: string, dropUnresolved: boolean, dropAll: boolean): string[] {\n  if (input) {\n      if (input.startsWith('{') && input.endsWith('}')) {\n          const args = input.substring(1, input.length - 1).split(',').map(s => s.trim())\n          if (dropAll && args.some(s => s === 'all')) {\n              return []\n          } else {\n              return args\n          }\n      } else if (dropUnresolved && input.startsWith('$')) {\n          return [];\n      } else if (dropAll && input === 'all') {\n          return []\n      } else {\n          return [input]\n      }\n  } else {\n      return []\n  }\n}\n\n/** Checks if the given index is the first index of the given t. */\nexport function isFirst<T>(t: T, index: number, array: T[]) {\n  return array.indexOf(t) === index;\n}\n\n/**\n * Converts multiple (possibly multi-selection) inputs into a string array of all contained selections.\n *\n * Unresolved template variables (detected by a leading '$' sign) are ignored. This allows to remove template variables\n * from a dashboard without having to adjust queries that use them.\n *\n * An empty array is returned if \"all\" would be included in the selections. Duplicates are removed.\n */\nexport function processSelectionVariables(input?: string[]): string[] {\n  if (input) {\n      const mapped = input.map(i => processSelectionVariable(i, true, false))\n      if (mapped.some(m => m.some(s => s === 'all'))) {\n          return []\n      } else {\n          return ([] as string[]).concat(...mapped).filter(isFirst)\n      }\n  } else {\n      return []\n  }\n}\n\n/**\n * Swap items in an array\n * @param thisArray \n */\nexport function swap(thisArray: any[], colIndex1: number, colIndex2: number): any[] {\n  const tmp = thisArray[colIndex1];\n  thisArray[colIndex1] = thisArray[colIndex2];\n  thisArray[colIndex2] = tmp;\n  return thisArray;\n}\n\n/**\n * Swap table rows column values\n * @param colIndex1 \n * @param colIndex2 \n */\nexport function swapColumns(rows: any[][], colIndex1: number, colIndex2: number): any[][] {\n  if (rows && rows.length > 0 && colIndex1 >= 0 && colIndex2 >= 0) {\n    for (var i = 0; i < rows.length; i++) {\n      if (colIndex1 >= rows[i].length || colIndex2 >= rows[i].length) {\n        throw new Error('Index out of bounds');\n      }\n      rows[i] = swap(rows[i], colIndex1, colIndex2);\n    }\n  }\n  return rows;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;"],"sourceRoot":""}