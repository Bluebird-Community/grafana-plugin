{"version":3,"sources":["../../src/spec/lib_custom_action_spec.js"],"names":["Model","CustomAction","getMatch","describe","it","match","expect","to","be","defined","token","equal","variable","index","undefined","null","beforeEach","throw","label","url","ca","validate","true","interpolate","alarm","OnmsAlarm","nodeId","nodeLabel","severity","Severities","NORMAL","parameters","OnmsParm","obj","blah","monkey"],"mappings":"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","file":"lib_custom_action_spec.js","sourcesContent":["import {Model} from '../opennms';\nimport {CustomAction, getMatch} from '../lib/custom_action';\n\ndescribe('CustomAction :: getMatch', () => {\n  it('should find an exact match', () => {\n    const match = getMatch('$foo', 'foo');\n    expect(match).to.be.defined;\n    expect(match.token).to.equal('$foo');\n    expect(match.variable).to.equal('foo');\n    expect(match.index).to.be.undefined;\n  });\n\n  it('should find a substring match', () => {\n    const match = getMatch('I like $foo bar!', 'foo');\n    expect(match).to.be.defined;\n    expect(match.token).to.equal('$foo');\n    expect(match.variable).to.equal('foo');\n    expect(match.index).to.be.undefined;\n  });\n\n  it('should not find a substring match without a word boundary', () => {\n    expect(getMatch('I like $foobar!', 'foo')).to.be.null;\n  });\n\n  it('should find a match with a numerical index inside brackets', () => {\n    const match = getMatch('I like $foo[1]', 'foo');\n    expect(match).to.be.defined;\n    expect(match.token).to.equal('$foo[1]');\n    expect(match.variable).to.equal('foo');\n    expect(match.index).to.equal(1);\n  });\n\n  it('should find a match with a string index inside brackets', () => {\n    const match = getMatch('I like $foo[blah]', 'foo');\n    expect(match).to.be.defined;\n    expect(match.token).to.equal('$foo[blah]');\n    expect(match.variable).to.equal('foo');\n    expect(match.index).to.equal('blah');\n  });\n\n  it('should find a match with empty brackets', () => {\n    const match = getMatch('I like $foo[]', 'foo');\n    expect(match).to.be.defined;\n    expect(match.token).to.equal('$foo[]');\n    expect(match.variable).to.equal('foo');\n    expect(match.index).to.be.undefined;\n  });\n});\n\ndescribe('CustomAction', function() {\n  /*\n  let currentSelection;\n  let mgr;\n  */\n\n  beforeEach(function() {\n    /*\n    currentSelection = [];\n    mgr = new SelectionMgr(\n      (from, to) => _.range(from, to + 1),\n      () => {currentSelection = mgr.getSelectedRows();}\n      );\n    expect(mgr.getSelectedRows()).to.have.length(0);\n    */\n  });\n\n  describe('constructor', function() {\n    it('should fail if no label or url is specified', () => {\n      expect(() => { new CustomAction(); }).to.throw();\n    });\n    it('should fail if label is specified without url (2-arg)', () => {\n      expect(() => { new CustomAction('foo'); }).to.throw();\n    });\n    it('should fail if label is specified without url (object)', () => {\n      expect(() => { new CustomAction({label:'foo'}); }).to.throw();\n    });\n    it('should fail if url is specified without label (2-arg)', () => {\n      expect(() => { new CustomAction(undefined, 'foo'); }).to.throw();\n    });\n    it('should fail if url is specified without label (object)', () => {\n      expect(() => { new CustomAction({url:'foo'}); }).to.throw();\n    });\n    it('should have readable url and label properties (2-arg)', () => {\n      const ca = new CustomAction('foo', 'bar');\n      expect(ca.label).to.equal('foo');\n      expect(ca.url).to.equal('bar');\n    });\n    it('should have readable url and label properties (object)', () => {\n      const ca = new CustomAction({label:'foo',url:'bar'});\n      expect(ca.label).to.equal('foo');\n      expect(ca.url).to.equal('bar');\n    });\n    it('should be read-only', () => {\n      const ca = new CustomAction({label:'foo',url:'bar'});\n      expect(() => {\n        ca.label = 'baz';\n      }).to.throw();\n      expect(() => {\n        ca.url = 'baz';\n      }).to.throw();\n    });\n    it('should validate a url with no variables', () => {\n      const ca = new CustomAction('foo', 'http://bar/');\n      expect(ca.validate()).to.be.true;\n    });\n    it('should interpolate a url with no variables', () => {\n      const ca = new CustomAction('foo', 'http://bar/');\n      expect(ca.interpolate()).to.equal('http://bar/');\n    });\n    it('should validate a url with a nodeLabel variable', () => {\n      const ca = new CustomAction('foo', 'http://bar/$nodeLabel');\n      const alarm = new Model.OnmsAlarm();\n      alarm.nodeId = 5;\n      alarm.nodeLabel = 'theLabel';\n      expect(ca.validate(alarm)).to.be.true;\n    });\n    it('should interpolate a url with a nodeLabel variable', () => {\n      const ca = new CustomAction('foo', 'http://bar/$nodeLabel');\n      const alarm = new Model.OnmsAlarm();\n      alarm.nodeId = 5;\n      alarm.nodeLabel = 'theLabel';\n      expect(ca.interpolate(alarm)).to.equal('http://bar/theLabel');\n    });\n    it('should validate a variable that refers to an object', () => {\n      const ca = new CustomAction('foo', 'http://bar/$severity');\n      const alarm = new Model.OnmsAlarm();\n      alarm.severity = Model.Severities.NORMAL;\n      expect(ca.validate(alarm)).to.be.true;\n    });\n    it('should interpolate a variable that refers to an object', () => {\n      const ca = new CustomAction('foo', 'http://bar/$severity');\n      const alarm = new Model.OnmsAlarm();\n      alarm.severity = Model.Severities.NORMAL;\n      expect(ca.interpolate(alarm)).to.equal('http://bar/NORMAL');\n    });\n    it('should validate a variable with a number index', () => {\n      const ca = new CustomAction('foo', 'http://bar/$parameters[0]');\n      const alarm = new Model.OnmsAlarm();\n      alarm.parameters = [new Model.OnmsParm('blah', 'string', 'yo')];\n      expect(ca.validate(alarm)).to.be.true;\n    });\n    it('should interpolate a variable with a number index', () => {\n      const ca = new CustomAction('foo', 'http://bar/$parameters[0]');\n      const alarm = new Model.OnmsAlarm();\n      alarm.parameters = [new Model.OnmsParm('blah', 'string', 'yo')];\n      expect(ca.interpolate(alarm)).to.equal('http://bar/yo');\n    });\n    it('should validate a variable with a string index', () => {\n      const ca = new CustomAction('foo', 'http://bar/$blah[monkey]');\n      const obj = {\n        blah: {\n          monkey: 'see'\n        }\n      };\n      expect(ca.validate(obj)).to.be.true;\n    });\n    it('should interpolate a variable with a string index', () => {\n      const ca = new CustomAction('foo', 'http://bar/$blah[monkey]');\n      const obj = {\n        blah: {\n          monkey: 'see'\n        }\n      };\n      expect(ca.interpolate(obj)).to.equal('http://bar/see');\n    });\n    it('should validate a variable with a named event parm', () => {\n      const ca = new CustomAction('foo', 'http://bar/$parameters[monkey]');\n      const obj = new Model.OnmsAlarm();\n      obj.parameters = [\n        new Model.OnmsParm('monkey', 'Int32', '6')\n      ];\n      expect(ca.validate(obj)).to.be.true;\n    });\n    it('should interpolate a variable with a named event parm', () => {\n      const ca = new CustomAction('foo', 'http://bar/$parameters[monkey]');\n      const obj = new Model.OnmsAlarm();\n      obj.parameters = [\n        new Model.OnmsParm('monkey', 'Int32', '6')\n      ];\n      expect(ca.interpolate(obj)).to.equal('http://bar/6');\n    });\n  });\n\n});\n"]}